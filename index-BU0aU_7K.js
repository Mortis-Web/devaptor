const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["index-C8nWc4Us.js","index-0M-PLPql.js","css/index-BlH6TKhv.css"])))=>i.map(i=>d[i]);
import{r as Dt,j as De,b as Am,c as Ry,d as wl,e as nE,g as em,_ as iE,S as sE,u as aE,A as rE,L as oE}from"./index-0M-PLPql.js";const lE=()=>{const s=Dt.useRef(null);return Dt.useEffect(()=>{const t=s.current,e=t.getContext("2d");let n,i,r,l;const c=()=>{n=window.innerWidth,i=window.innerHeight,r=Math.max(1,window.devicePixelRatio||1),t.width=n*r,t.height=i*r,t.style.width=`${n}px`,t.style.height=`${i}px`,e.setTransform(r,0,0,r,0,0)};c(),window.addEventListener("resize",c);const h=150,f=[],p=(g,v)=>Math.random()*(v-g)+g;for(let g=0;g<h;g++){const v=p(10,100),x=p(0,n),b=p(0,i),S=p(0,Math.PI*2);f.push({cx:x,cy:b,r:p(.6,2.5),orbit:v,speed:p(.005,.02),angle:S,twinklePhase:p(0,Math.PI*2)})}const m=()=>{e.clearRect(0,0,n,i),e.fillStyle="#000",e.fillRect(0,0,n,i);for(const g of f){g.angle+=g.speed;const v=g.cx+Math.cos(g.angle)*g.orbit,x=g.cy+Math.sin(g.angle)*g.orbit;g.twinklePhase+=.05;const b=.5+.5*Math.sin(g.twinklePhase);e.beginPath(),e.fillStyle=`rgba(255,255,255,${b})`,e.arc(v,x,g.r,0,Math.PI*2),e.fill()}l=requestAnimationFrame(m)};return l=requestAnimationFrame(m),()=>{cancelAnimationFrame(l),window.removeEventListener("resize",c)}},[]),De.jsx("canvas",{ref:s,id:"starfield",className:"pointer-events-none absolute inset-0 -z-10 m-auto size-full"})};function Qu(){return Qu=Object.assign?Object.assign.bind():function(s){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)({}).hasOwnProperty.call(e,n)&&(s[n]=e[n])}return s},Qu.apply(null,arguments)}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Xh="180",tr={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},er={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Dy=0,nm=1,Ny=2,cE=3,Uy=0,qh=1,Nl=2,qi=3,Bs=0,Qn=1,Zi=2,Os=0,cr=1,im=2,sm=3,am=4,Py=5,ha=100,Ly=101,Iy=102,Oy=103,zy=104,By=200,Fy=201,Hy=202,Vy=203,$u=204,th=205,Gy=206,ky=207,Wy=208,Xy=209,qy=210,Yy=211,Zy=212,jy=213,Ky=214,eh=0,nh=1,ih=2,fr=3,sh=4,ah=5,rh=6,oh=7,ac=0,Jy=1,Qy=2,os=0,$y=1,tx=2,ex=3,wm=4,nx=5,ix=6,sx=7,rm="attached",ax="detached",Yh=300,Fs=301,pa=302,Vl=303,Gl=304,Lo=306,kl=1e3,Li=1001,Wl=1002,Cn=1003,Cm=1004,uE=1004,vo=1005,hE=1005,mn=1006,Ul=1007,fE=1007,as=1008,dE=1008,Ii=1009,Rm=1010,Dm=1011,bo=1012,Zh=1013,Hs=1014,ri=1015,Io=1016,jh=1017,Kh=1018,Eo=1020,Nm=35902,Um=35899,Pm=1021,Lm=1022,Hn=1023,To=1026,Ao=1027,Jh=1028,rc=1029,Im=1030,Qh=1031,pE=1032,$h=1033,Pl=33776,Ll=33777,Il=33778,Ol=33779,lh=35840,ch=35841,uh=35842,hh=35843,fh=36196,dh=37492,ph=37496,mh=37808,gh=37809,vh=37810,_h=37811,yh=37812,xh=37813,Sh=37814,Mh=37815,bh=37816,Eh=37817,Th=37818,Ah=37819,wh=37820,Ch=37821,Rh=36492,Dh=36494,Nh=36495,Uh=36283,Ph=36284,Lh=36285,Ih=36286,rx=2200,ox=2201,lx=2202,Xl=2300,Oh=2301,Yu=2302,ar=2400,rr=2401,ql=2402,tf=2500,Om=2501,mE=0,gE=1,vE=2,cx=3200,ux=3201,_E=3202,yE=3203,va=0,hx=1,Ls="",Fn="srgb",ma="srgb-linear",Yl="linear",Ve="srgb",xE=0,nr=7680,SE=7681,ME=7682,bE=7683,EE=34055,TE=34056,AE=5386,wE=512,CE=513,RE=514,DE=515,NE=516,UE=517,PE=518,om=519,fx=512,dx=513,px=514,zm=515,mx=516,gx=517,vx=518,_x=519,Zl=35044,LE=35048,IE=35040,OE=35045,zE=35049,BE=35041,FE=35046,HE=35050,VE=35042,GE="100",lm="300 es",Si=2e3,wo=2001,kE={COMPUTE:"compute",RENDER:"render"},WE={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},XE={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};let hs=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const i=n[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,l=i.length;r<l;r++)i[r].call(this,t);t.target=null}}};const On=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let wv=1234567;const ur=Math.PI/180,Co=180/Math.PI;function Mi(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(On[s&255]+On[s>>8&255]+On[s>>16&255]+On[s>>24&255]+"-"+On[t&255]+On[t>>8&255]+"-"+On[t>>16&15|64]+On[t>>24&255]+"-"+On[e&63|128]+On[e>>8&255]+"-"+On[e>>16&255]+On[e>>24&255]+On[n&255]+On[n>>8&255]+On[n>>16&255]+On[n>>24&255]).toLowerCase()}function fe(s,t,e){return Math.max(t,Math.min(e,s))}function Bm(s,t){return(s%t+t)%t}function qE(s,t,e,n,i){return n+(s-t)*(i-n)/(e-t)}function YE(s,t,e){return s!==t?(e-s)/(t-s):0}function zl(s,t,e){return(1-e)*s+e*t}function ZE(s,t,e,n){return zl(s,t,1-Math.exp(-e*n))}function jE(s,t=1){return t-Math.abs(Bm(s,t*2)-t)}function KE(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*(3-2*s))}function JE(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*s*(s*(s*6-15)+10))}function QE(s,t){return s+Math.floor(Math.random()*(t-s+1))}function $E(s,t){return s+Math.random()*(t-s)}function t1(s){return s*(.5-Math.random())}function e1(s){s!==void 0&&(wv=s);let t=wv+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function n1(s){return s*ur}function i1(s){return s*Co}function s1(s){return(s&s-1)===0&&s!==0}function a1(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function r1(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function o1(s,t,e,n,i){const r=Math.cos,l=Math.sin,c=r(e/2),h=l(e/2),f=r((t+n)/2),p=l((t+n)/2),m=r((t-n)/2),g=l((t-n)/2),v=r((n-t)/2),x=l((n-t)/2);switch(i){case"XYX":s.set(c*p,h*m,h*g,c*f);break;case"YZY":s.set(h*g,c*p,h*m,c*f);break;case"ZXZ":s.set(h*m,h*g,c*p,c*f);break;case"XZX":s.set(c*p,h*x,h*v,c*f);break;case"YXY":s.set(h*v,c*p,h*x,c*f);break;case"ZYZ":s.set(h*x,h*v,c*p,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Jn(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function ye(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const l1={DEG2RAD:ur,RAD2DEG:Co,generateUUID:Mi,clamp:fe,euclideanModulo:Bm,mapLinear:qE,inverseLerp:YE,lerp:zl,damp:ZE,pingpong:jE,smoothstep:KE,smootherstep:JE,randInt:QE,randFloat:$E,randFloatSpread:t1,seededRandom:e1,degToRad:n1,radToDeg:i1,isPowerOfTwo:s1,ceilPowerOfTwo:a1,floorPowerOfTwo:r1,setQuaternionFromProperEuler:o1,normalize:ye,denormalize:Jn};class dt{constructor(t=0,e=0){dt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=fe(this.x,t.x,e.x),this.y=fe(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=fe(this.x,t,e),this.y=fe(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(fe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(fe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,l=this.y-t.y;return this.x=r*n-l*i+t.x,this.y=r*i+l*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Vn{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,l,c){let h=n[i+0],f=n[i+1],p=n[i+2],m=n[i+3];const g=r[l+0],v=r[l+1],x=r[l+2],b=r[l+3];if(c===0){t[e+0]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m;return}if(c===1){t[e+0]=g,t[e+1]=v,t[e+2]=x,t[e+3]=b;return}if(m!==b||h!==g||f!==v||p!==x){let S=1-c;const _=h*g+f*v+p*x+m*b,E=_>=0?1:-1,A=1-_*_;if(A>Number.EPSILON){const N=Math.sqrt(A),R=Math.atan2(N,_*E);S=Math.sin(S*R)/N,c=Math.sin(c*R)/N}const T=c*E;if(h=h*S+g*T,f=f*S+v*T,p=p*S+x*T,m=m*S+b*T,S===1-c){const N=1/Math.sqrt(h*h+f*f+p*p+m*m);h*=N,f*=N,p*=N,m*=N}}t[e]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,i,r,l){const c=n[i],h=n[i+1],f=n[i+2],p=n[i+3],m=r[l],g=r[l+1],v=r[l+2],x=r[l+3];return t[e]=c*x+p*m+h*v-f*g,t[e+1]=h*x+p*g+f*m-c*v,t[e+2]=f*x+p*v+c*g-h*m,t[e+3]=p*x-c*m-h*g-f*v,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,r=t._z,l=t._order,c=Math.cos,h=Math.sin,f=c(n/2),p=c(i/2),m=c(r/2),g=h(n/2),v=h(i/2),x=h(r/2);switch(l){case"XYZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"YXZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"ZXY":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"ZYX":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"YZX":this._x=g*p*m+f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m-g*v*x;break;case"XZY":this._x=g*p*m-f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m+g*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],l=e[1],c=e[5],h=e[9],f=e[2],p=e[6],m=e[10],g=n+c+m;if(g>0){const v=.5/Math.sqrt(g+1);this._w=.25/v,this._x=(p-h)*v,this._y=(r-f)*v,this._z=(l-i)*v}else if(n>c&&n>m){const v=2*Math.sqrt(1+n-c-m);this._w=(p-h)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(r+f)/v}else if(c>m){const v=2*Math.sqrt(1+c-n-m);this._w=(r-f)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(h+p)/v}else{const v=2*Math.sqrt(1+m-n-c);this._w=(l-i)/v,this._x=(r+f)/v,this._y=(h+p)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-8?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(fe(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,l=t._w,c=e._x,h=e._y,f=e._z,p=e._w;return this._x=n*p+l*c+i*f-r*h,this._y=i*p+l*h+r*c-n*f,this._z=r*p+l*f+n*h-i*c,this._w=l*p-n*c-i*h-r*f,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,r=this._z,l=this._w;let c=l*t._w+n*t._x+i*t._y+r*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=n,this._y=i,this._z=r,this;const h=1-c*c;if(h<=Number.EPSILON){const v=1-e;return this._w=v*l+e*this._w,this._x=v*n+e*this._x,this._y=v*i+e*this._y,this._z=v*r+e*this._z,this.normalize(),this}const f=Math.sqrt(h),p=Math.atan2(f,c),m=Math.sin((1-e)*p)/f,g=Math.sin(e*p)/f;return this._w=l*m+this._w*g,this._x=n*m+this._x*g,this._y=i*m+this._y*g,this._z=r*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(t=0,e=0,n=0){I.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Cv.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Cv.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,l=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*l,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*l,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*l,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,l=t.y,c=t.z,h=t.w,f=2*(l*i-c*n),p=2*(c*e-r*i),m=2*(r*n-l*e);return this.x=e+h*f+l*m-c*p,this.y=n+h*p+c*f-r*m,this.z=i+h*m+r*p-l*f,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=fe(this.x,t.x,e.x),this.y=fe(this.y,t.y,e.y),this.z=fe(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=fe(this.x,t,e),this.y=fe(this.y,t,e),this.z=fe(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(fe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,l=e.x,c=e.y,h=e.z;return this.x=i*h-r*c,this.y=r*l-n*h,this.z=n*c-i*l,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return jd.copy(this).projectOnVector(t),this.sub(jd)}reflect(t){return this.sub(jd.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(fe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const jd=new I,Cv=new Vn;class ve{constructor(t,e,n,i,r,l,c,h,f){ve.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,r,l,c,h,f)}set(t,e,n,i,r,l,c,h,f){const p=this.elements;return p[0]=t,p[1]=i,p[2]=c,p[3]=e,p[4]=r,p[5]=h,p[6]=n,p[7]=l,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,l=n[0],c=n[3],h=n[6],f=n[1],p=n[4],m=n[7],g=n[2],v=n[5],x=n[8],b=i[0],S=i[3],_=i[6],E=i[1],A=i[4],T=i[7],N=i[2],R=i[5],L=i[8];return r[0]=l*b+c*E+h*N,r[3]=l*S+c*A+h*R,r[6]=l*_+c*T+h*L,r[1]=f*b+p*E+m*N,r[4]=f*S+p*A+m*R,r[7]=f*_+p*T+m*L,r[2]=g*b+v*E+x*N,r[5]=g*S+v*A+x*R,r[8]=g*_+v*T+x*L,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8];return e*l*p-e*c*f-n*r*p+n*c*h+i*r*f-i*l*h}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=p*l-c*f,g=c*h-p*r,v=f*r-l*h,x=e*m+n*g+i*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/x;return t[0]=m*b,t[1]=(i*f-p*n)*b,t[2]=(c*n-i*l)*b,t[3]=g*b,t[4]=(p*e-i*h)*b,t[5]=(i*r-c*e)*b,t[6]=v*b,t[7]=(n*h-f*e)*b,t[8]=(l*e-n*r)*b,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,l,c){const h=Math.cos(r),f=Math.sin(r);return this.set(n*h,n*f,-n*(h*l+f*c)+l+t,-i*f,i*h,-i*(-f*l+h*c)+c+e,0,0,1),this}scale(t,e){return this.premultiply(Kd.makeScale(t,e)),this}rotate(t){return this.premultiply(Kd.makeRotation(-t)),this}translate(t,e){return this.premultiply(Kd.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Kd=new ve;function yx(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}const c1={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function _o(s,t){return new c1[s](t)}function jl(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function xx(){const s=jl("canvas");return s.style.display="block",s}const Rv={};function Kl(s){s in Rv||(Rv[s]=!0,console.warn(s))}function u1(s,t,e){return new Promise(function(n,i){function r(){switch(s.clientWaitSync(t,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(r,e);break;default:n()}}setTimeout(r,e)})}const Dv=new ve().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Nv=new ve().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function h1(){const s={enabled:!0,workingColorSpace:ma,spaces:{},convert:function(i,r,l){return this.enabled===!1||r===l||!r||!l||(this.spaces[r].transfer===Ve&&(i.r=zs(i.r),i.g=zs(i.g),i.b=zs(i.b)),this.spaces[r].primaries!==this.spaces[l].primaries&&(i.applyMatrix3(this.spaces[r].toXYZ),i.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===Ve&&(i.r=Mo(i.r),i.g=Mo(i.g),i.b=Mo(i.b))),i},workingToColorSpace:function(i,r){return this.convert(i,this.workingColorSpace,r)},colorSpaceToWorking:function(i,r){return this.convert(i,r,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Ls?Yl:this.spaces[i].transfer},getToneMappingMode:function(i){return this.spaces[i].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(i,r=this.workingColorSpace){return i.fromArray(this.spaces[r].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,r,l){return i.copy(this.spaces[r].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,r){return Kl("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(i,r)},toWorkingColorSpace:function(i,r){return Kl("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(i,r)}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[ma]:{primaries:t,whitePoint:n,transfer:Yl,toXYZ:Dv,fromXYZ:Nv,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:Fn},outputColorSpaceConfig:{drawingBufferColorSpace:Fn}},[Fn]:{primaries:t,whitePoint:n,transfer:Ve,toXYZ:Dv,fromXYZ:Nv,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:Fn}}}),s}const Re=h1();function zs(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Mo(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let qr;class Sx{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{qr===void 0&&(qr=jl("canvas")),qr.width=t.width,qr.height=t.height;const i=qr.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),n=qr}return n.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=jl("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let l=0;l<r.length;l++)r[l]=zs(r[l]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(zs(e[n]/255)*255):e[n]=zs(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let f1=0;class da{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:f1++}),this.uuid=Mi(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight,0):e instanceof VideoFrame?t.set(e.displayHeight,e.displayWidth,0):e!==null?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?r.push(Jd(i[l].image)):r.push(Jd(i[l]))}else r=Jd(i);n.url=r}return e||(t.images[this.uuid]=n),n}}function Jd(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?Sx.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let d1=0;const Qd=new I;class ln extends hs{constructor(t=ln.DEFAULT_IMAGE,e=ln.DEFAULT_MAPPING,n=Li,i=Li,r=mn,l=as,c=Hn,h=Ii,f=ln.DEFAULT_ANISOTROPY,p=Ls){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:d1++}),this.uuid=Mi(),this.name="",this.source=new da(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=l,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=h,this.offset=new dt(0,0),this.repeat=new dt(1,1),this.center=new dt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ve,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=p,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Qd).x}get height(){return this.source.getSize(Qd).y}get depth(){return this.source.getSize(Qd).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Yh)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case kl:t.x=t.x-Math.floor(t.x);break;case Li:t.x=t.x<0?0:1;break;case Wl:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case kl:t.y=t.y-Math.floor(t.y);break;case Li:t.y=t.y<0?0:1;break;case Wl:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}ln.DEFAULT_IMAGE=null;ln.DEFAULT_MAPPING=Yh;ln.DEFAULT_ANISOTROPY=1;class Pe{constructor(t=0,e=0,n=0,i=1){Pe.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,l=t.elements;return this.x=l[0]*e+l[4]*n+l[8]*i+l[12]*r,this.y=l[1]*e+l[5]*n+l[9]*i+l[13]*r,this.z=l[2]*e+l[6]*n+l[10]*i+l[14]*r,this.w=l[3]*e+l[7]*n+l[11]*i+l[15]*r,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const h=t.elements,f=h[0],p=h[4],m=h[8],g=h[1],v=h[5],x=h[9],b=h[2],S=h[6],_=h[10];if(Math.abs(p-g)<.01&&Math.abs(m-b)<.01&&Math.abs(x-S)<.01){if(Math.abs(p+g)<.1&&Math.abs(m+b)<.1&&Math.abs(x+S)<.1&&Math.abs(f+v+_-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const A=(f+1)/2,T=(v+1)/2,N=(_+1)/2,R=(p+g)/4,L=(m+b)/4,z=(x+S)/4;return A>T&&A>N?A<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(A),i=R/n,r=L/n):T>N?T<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(T),n=R/i,r=z/i):N<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(N),n=L/r,i=z/r),this.set(n,i,r,e),this}let E=Math.sqrt((S-x)*(S-x)+(m-b)*(m-b)+(g-p)*(g-p));return Math.abs(E)<.001&&(E=1),this.x=(S-x)/E,this.y=(m-b)/E,this.z=(g-p)/E,this.w=Math.acos((f+v+_-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=fe(this.x,t.x,e.x),this.y=fe(this.y,t.y,e.y),this.z=fe(this.z,t.z,e.z),this.w=fe(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=fe(this.x,t,e),this.y=fe(this.y,t,e),this.z=fe(this.z,t,e),this.w=fe(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(fe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Fm extends hs{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:mn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new Pe(0,0,t,e),this.scissorTest=!1,this.viewport=new Pe(0,0,t,e);const i={width:t,height:e,depth:n.depth},r=new ln(i);this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=r.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:mn,generateMipmaps:!1,flipY:!1,internalFormat:null};t.mapping!==void 0&&(e.mapping=t.mapping),t.wrapS!==void 0&&(e.wrapS=t.wrapS),t.wrapT!==void 0&&(e.wrapT=t.wrapT),t.wrapR!==void 0&&(e.wrapR=t.wrapR),t.magFilter!==void 0&&(e.magFilter=t.magFilter),t.minFilter!==void 0&&(e.minFilter=t.minFilter),t.format!==void 0&&(e.format=t.format),t.type!==void 0&&(e.type=t.type),t.anisotropy!==void 0&&(e.anisotropy=t.anisotropy),t.colorSpace!==void 0&&(e.colorSpace=t.colorSpace),t.flipY!==void 0&&(e.flipY=t.flipY),t.generateMipmaps!==void 0&&(e.generateMipmaps=t.generateMipmaps),t.internalFormat!==void 0&&(e.internalFormat=t.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new da(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class us extends Fm{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class ef extends ln{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Cn,this.minFilter=Cn,this.wrapR=Li,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class p1 extends us{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new ef(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class nf extends ln{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Cn,this.minFilter=Cn,this.wrapR=Li,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class m1 extends us{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new nf(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Gn{constructor(t=new I(1/0,1/0,1/0),e=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(ki.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(ki.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ki.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const r=n.getAttribute("position");if(e===!0&&r!==void 0&&t.isInstancedMesh!==!0)for(let l=0,c=r.count;l<c;l++)t.isMesh===!0?t.getVertexPosition(l,ki):ki.fromBufferAttribute(r,l),ki.applyMatrix4(t.matrixWorld),this.expandByPoint(ki);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),$c.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),$c.copy(n.boundingBox)),$c.applyMatrix4(t.matrixWorld),this.union($c)}const i=t.children;for(let r=0,l=i.length;r<l;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,ki),ki.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(pl),tu.subVectors(this.max,pl),Yr.subVectors(t.a,pl),Zr.subVectors(t.b,pl),jr.subVectors(t.c,pl),sa.subVectors(Zr,Yr),aa.subVectors(jr,Zr),Ha.subVectors(Yr,jr);let e=[0,-sa.z,sa.y,0,-aa.z,aa.y,0,-Ha.z,Ha.y,sa.z,0,-sa.x,aa.z,0,-aa.x,Ha.z,0,-Ha.x,-sa.y,sa.x,0,-aa.y,aa.x,0,-Ha.y,Ha.x,0];return!$d(e,Yr,Zr,jr,tu)||(e=[1,0,0,0,1,0,0,0,1],!$d(e,Yr,Zr,jr,tu))?!1:(eu.crossVectors(sa,aa),e=[eu.x,eu.y,eu.z],$d(e,Yr,Zr,jr,tu))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,ki).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(ki).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(As[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),As[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),As[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),As[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),As[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),As[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),As[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),As[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(As),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const As=[new I,new I,new I,new I,new I,new I,new I,new I],ki=new I,$c=new Gn,Yr=new I,Zr=new I,jr=new I,sa=new I,aa=new I,Ha=new I,pl=new I,tu=new I,eu=new I,Va=new I;function $d(s,t,e,n,i){for(let r=0,l=s.length-3;r<=l;r+=3){Va.fromArray(s,r);const c=i.x*Math.abs(Va.x)+i.y*Math.abs(Va.y)+i.z*Math.abs(Va.z),h=t.dot(Va),f=e.dot(Va),p=n.dot(Va);if(Math.max(-Math.max(h,f,p),Math.min(h,f,p))>c)return!1}return!0}const g1=new Gn,ml=new I,tp=new I;class Rn{constructor(t=new I,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):g1.setFromPoints(t).getCenter(n);let i=0;for(let r=0,l=t.length;r<l;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ml.subVectors(t,this.center);const e=ml.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(ml,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(tp.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ml.copy(t.center).add(tp)),this.expandByPoint(ml.copy(t.center).sub(tp))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const ws=new I,ep=new I,nu=new I,ra=new I,np=new I,iu=new I,ip=new I;class gr{constructor(t=new I,e=new I(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ws)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ws.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ws.copy(this.origin).addScaledVector(this.direction,e),ws.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){ep.copy(t).add(e).multiplyScalar(.5),nu.copy(e).sub(t).normalize(),ra.copy(this.origin).sub(ep);const r=t.distanceTo(e)*.5,l=-this.direction.dot(nu),c=ra.dot(this.direction),h=-ra.dot(nu),f=ra.lengthSq(),p=Math.abs(1-l*l);let m,g,v,x;if(p>0)if(m=l*h-c,g=l*c-h,x=r*p,m>=0)if(g>=-x)if(g<=x){const b=1/p;m*=b,g*=b,v=m*(m+l*g+2*c)+g*(l*m+g+2*h)+f}else g=r,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g=-r,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g<=-x?(m=Math.max(0,-(-l*r+c)),g=m>0?-r:Math.min(Math.max(-r,-h),r),v=-m*m+g*(g+2*h)+f):g<=x?(m=0,g=Math.min(Math.max(-r,-h),r),v=g*(g+2*h)+f):(m=Math.max(0,-(l*r+c)),g=m>0?r:Math.min(Math.max(-r,-h),r),v=-m*m+g*(g+2*h)+f);else g=l>0?-r:r,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(ep).addScaledVector(nu,g),v}intersectSphere(t,e){ws.subVectors(t.center,this.origin);const n=ws.dot(this.direction),i=ws.dot(ws)-n*n,r=t.radius*t.radius;if(i>r)return null;const l=Math.sqrt(r-i),c=n-l,h=n+l;return h<0?null:c<0?this.at(h,e):this.at(c,e)}intersectsSphere(t){return t.radius<0?!1:this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,l,c,h;const f=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(n=(t.min.x-g.x)*f,i=(t.max.x-g.x)*f):(n=(t.max.x-g.x)*f,i=(t.min.x-g.x)*f),p>=0?(r=(t.min.y-g.y)*p,l=(t.max.y-g.y)*p):(r=(t.max.y-g.y)*p,l=(t.min.y-g.y)*p),n>l||r>i||((r>n||isNaN(n))&&(n=r),(l<i||isNaN(i))&&(i=l),m>=0?(c=(t.min.z-g.z)*m,h=(t.max.z-g.z)*m):(c=(t.max.z-g.z)*m,h=(t.min.z-g.z)*m),n>h||c>i)||((c>n||n!==n)&&(n=c),(h<i||i!==i)&&(i=h),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,ws)!==null}intersectTriangle(t,e,n,i,r){np.subVectors(e,t),iu.subVectors(n,t),ip.crossVectors(np,iu);let l=this.direction.dot(ip),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;ra.subVectors(this.origin,t);const h=c*this.direction.dot(iu.crossVectors(ra,iu));if(h<0)return null;const f=c*this.direction.dot(np.cross(ra));if(f<0||h+f>l)return null;const p=-c*ra.dot(ip);return p<0?null:this.at(p/l,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class de{constructor(t,e,n,i,r,l,c,h,f,p,m,g,v,x,b,S){de.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,r,l,c,h,f,p,m,g,v,x,b,S)}set(t,e,n,i,r,l,c,h,f,p,m,g,v,x,b,S){const _=this.elements;return _[0]=t,_[4]=e,_[8]=n,_[12]=i,_[1]=r,_[5]=l,_[9]=c,_[13]=h,_[2]=f,_[6]=p,_[10]=m,_[14]=g,_[3]=v,_[7]=x,_[11]=b,_[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new de().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Kr.setFromMatrixColumn(t,0).length(),r=1/Kr.setFromMatrixColumn(t,1).length(),l=1/Kr.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*l,e[9]=n[9]*l,e[10]=n[10]*l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,l=Math.cos(n),c=Math.sin(n),h=Math.cos(i),f=Math.sin(i),p=Math.cos(r),m=Math.sin(r);if(t.order==="XYZ"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=-h*m,e[8]=f,e[1]=v+x*f,e[5]=g-b*f,e[9]=-c*h,e[2]=b-g*f,e[6]=x+v*f,e[10]=l*h}else if(t.order==="YXZ"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g+b*c,e[4]=x*c-v,e[8]=l*f,e[1]=l*m,e[5]=l*p,e[9]=-c,e[2]=v*c-x,e[6]=b+g*c,e[10]=l*h}else if(t.order==="ZXY"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g-b*c,e[4]=-l*m,e[8]=x+v*c,e[1]=v+x*c,e[5]=l*p,e[9]=b-g*c,e[2]=-l*f,e[6]=c,e[10]=l*h}else if(t.order==="ZYX"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=x*f-v,e[8]=g*f+b,e[1]=h*m,e[5]=b*f+g,e[9]=v*f-x,e[2]=-f,e[6]=c*h,e[10]=l*h}else if(t.order==="YZX"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=b-g*m,e[8]=x*m+v,e[1]=m,e[5]=l*p,e[9]=-c*p,e[2]=-f*p,e[6]=v*m+x,e[10]=g-b*m}else if(t.order==="XZY"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=-m,e[8]=f*p,e[1]=g*m+b,e[5]=l*p,e[9]=v*m-x,e[2]=x*m-v,e[6]=c*p,e[10]=b*m+g}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(v1,t,_1)}lookAt(t,e,n){const i=this.elements;return yi.subVectors(t,e),yi.lengthSq()===0&&(yi.z=1),yi.normalize(),oa.crossVectors(n,yi),oa.lengthSq()===0&&(Math.abs(n.z)===1?yi.x+=1e-4:yi.z+=1e-4,yi.normalize(),oa.crossVectors(n,yi)),oa.normalize(),su.crossVectors(yi,oa),i[0]=oa.x,i[4]=su.x,i[8]=yi.x,i[1]=oa.y,i[5]=su.y,i[9]=yi.y,i[2]=oa.z,i[6]=su.z,i[10]=yi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,l=n[0],c=n[4],h=n[8],f=n[12],p=n[1],m=n[5],g=n[9],v=n[13],x=n[2],b=n[6],S=n[10],_=n[14],E=n[3],A=n[7],T=n[11],N=n[15],R=i[0],L=i[4],z=i[8],C=i[12],w=i[1],B=i[5],Y=i[9],W=i[13],$=i[2],et=i[6],k=i[10],Q=i[14],X=i[3],lt=i[7],_t=i[11],St=i[15];return r[0]=l*R+c*w+h*$+f*X,r[4]=l*L+c*B+h*et+f*lt,r[8]=l*z+c*Y+h*k+f*_t,r[12]=l*C+c*W+h*Q+f*St,r[1]=p*R+m*w+g*$+v*X,r[5]=p*L+m*B+g*et+v*lt,r[9]=p*z+m*Y+g*k+v*_t,r[13]=p*C+m*W+g*Q+v*St,r[2]=x*R+b*w+S*$+_*X,r[6]=x*L+b*B+S*et+_*lt,r[10]=x*z+b*Y+S*k+_*_t,r[14]=x*C+b*W+S*Q+_*St,r[3]=E*R+A*w+T*$+N*X,r[7]=E*L+A*B+T*et+N*lt,r[11]=E*z+A*Y+T*k+N*_t,r[15]=E*C+A*W+T*Q+N*St,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],l=t[1],c=t[5],h=t[9],f=t[13],p=t[2],m=t[6],g=t[10],v=t[14],x=t[3],b=t[7],S=t[11],_=t[15];return x*(+r*h*m-i*f*m-r*c*g+n*f*g+i*c*v-n*h*v)+b*(+e*h*v-e*f*g+r*l*g-i*l*v+i*f*p-r*h*p)+S*(+e*f*m-e*c*v-r*l*m+n*l*v+r*c*p-n*f*p)+_*(-i*c*p-e*h*m+e*c*g+i*l*m-n*l*g+n*h*p)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=t[9],g=t[10],v=t[11],x=t[12],b=t[13],S=t[14],_=t[15],E=m*S*f-b*g*f+b*h*v-c*S*v-m*h*_+c*g*_,A=x*g*f-p*S*f-x*h*v+l*S*v+p*h*_-l*g*_,T=p*b*f-x*m*f+x*c*v-l*b*v-p*c*_+l*m*_,N=x*m*h-p*b*h-x*c*g+l*b*g+p*c*S-l*m*S,R=e*E+n*A+i*T+r*N;if(R===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/R;return t[0]=E*L,t[1]=(b*g*r-m*S*r-b*i*v+n*S*v+m*i*_-n*g*_)*L,t[2]=(c*S*r-b*h*r+b*i*f-n*S*f-c*i*_+n*h*_)*L,t[3]=(m*h*r-c*g*r-m*i*f+n*g*f+c*i*v-n*h*v)*L,t[4]=A*L,t[5]=(p*S*r-x*g*r+x*i*v-e*S*v-p*i*_+e*g*_)*L,t[6]=(x*h*r-l*S*r-x*i*f+e*S*f+l*i*_-e*h*_)*L,t[7]=(l*g*r-p*h*r+p*i*f-e*g*f-l*i*v+e*h*v)*L,t[8]=T*L,t[9]=(x*m*r-p*b*r-x*n*v+e*b*v+p*n*_-e*m*_)*L,t[10]=(l*b*r-x*c*r+x*n*f-e*b*f-l*n*_+e*c*_)*L,t[11]=(p*c*r-l*m*r-p*n*f+e*m*f+l*n*v-e*c*v)*L,t[12]=N*L,t[13]=(p*b*i-x*m*i+x*n*g-e*b*g-p*n*S+e*m*S)*L,t[14]=(x*c*i-l*b*i-x*n*h+e*b*h+l*n*S-e*c*S)*L,t[15]=(l*m*i-p*c*i+p*n*h-e*m*h-l*n*g+e*c*g)*L,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,l=t.x,c=t.y,h=t.z,f=r*l,p=r*c;return this.set(f*l+n,f*c-i*h,f*h+i*c,0,f*c+i*h,p*c+n,p*h-i*l,0,f*h-i*c,p*h+i*l,r*h*h+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,l){return this.set(1,n,r,0,t,1,l,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,l=e._y,c=e._z,h=e._w,f=r+r,p=l+l,m=c+c,g=r*f,v=r*p,x=r*m,b=l*p,S=l*m,_=c*m,E=h*f,A=h*p,T=h*m,N=n.x,R=n.y,L=n.z;return i[0]=(1-(b+_))*N,i[1]=(v+T)*N,i[2]=(x-A)*N,i[3]=0,i[4]=(v-T)*R,i[5]=(1-(g+_))*R,i[6]=(S+E)*R,i[7]=0,i[8]=(x+A)*L,i[9]=(S-E)*L,i[10]=(1-(g+b))*L,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Kr.set(i[0],i[1],i[2]).length();const l=Kr.set(i[4],i[5],i[6]).length(),c=Kr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Wi.copy(this);const f=1/r,p=1/l,m=1/c;return Wi.elements[0]*=f,Wi.elements[1]*=f,Wi.elements[2]*=f,Wi.elements[4]*=p,Wi.elements[5]*=p,Wi.elements[6]*=p,Wi.elements[8]*=m,Wi.elements[9]*=m,Wi.elements[10]*=m,e.setFromRotationMatrix(Wi),n.x=r,n.y=l,n.z=c,this}makePerspective(t,e,n,i,r,l,c=Si,h=!1){const f=this.elements,p=2*r/(e-t),m=2*r/(n-i),g=(e+t)/(e-t),v=(n+i)/(n-i);let x,b;if(h)x=r/(l-r),b=l*r/(l-r);else if(c===Si)x=-(l+r)/(l-r),b=-2*l*r/(l-r);else if(c===wo)x=-l/(l-r),b=-l*r/(l-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return f[0]=p,f[4]=0,f[8]=g,f[12]=0,f[1]=0,f[5]=m,f[9]=v,f[13]=0,f[2]=0,f[6]=0,f[10]=x,f[14]=b,f[3]=0,f[7]=0,f[11]=-1,f[15]=0,this}makeOrthographic(t,e,n,i,r,l,c=Si,h=!1){const f=this.elements,p=2/(e-t),m=2/(n-i),g=-(e+t)/(e-t),v=-(n+i)/(n-i);let x,b;if(h)x=1/(l-r),b=l/(l-r);else if(c===Si)x=-2/(l-r),b=-(l+r)/(l-r);else if(c===wo)x=-1/(l-r),b=-r/(l-r);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return f[0]=p,f[4]=0,f[8]=0,f[12]=g,f[1]=0,f[5]=m,f[9]=0,f[13]=v,f[2]=0,f[6]=0,f[10]=x,f[14]=b,f[3]=0,f[7]=0,f[11]=0,f[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Kr=new I,Wi=new de,v1=new I(0,0,0),_1=new I(1,1,1),oa=new I,su=new I,yi=new I,Uv=new de,Pv=new Vn;class bi{constructor(t=0,e=0,n=0,i=bi.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],l=i[4],c=i[8],h=i[1],f=i[5],p=i[9],m=i[2],g=i[6],v=i[10];switch(e){case"XYZ":this._y=Math.asin(fe(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,v),this._z=Math.atan2(-l,r)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-fe(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-m,r),this._z=0);break;case"ZXY":this._x=Math.asin(fe(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,v),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(h,r));break;case"ZYX":this._y=Math.asin(-fe(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,v),this._z=Math.atan2(h,r)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(fe(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-m,r)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-fe(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,r)):(this._x=Math.atan2(-p,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Uv.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Uv,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Pv.setFromEuler(this),this.setFromQuaternion(Pv,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}bi.DEFAULT_ORDER="XYZ";class Ro{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let y1=0;const Lv=new I,Jr=new Vn,Cs=new de,au=new I,gl=new I,x1=new I,S1=new Vn,Iv=new I(1,0,0),Ov=new I(0,1,0),zv=new I(0,0,1),Bv={type:"added"},M1={type:"removed"},Qr={type:"childadded",child:null},sp={type:"childremoved",child:null};class Le extends hs{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:y1++}),this.uuid=Mi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Le.DEFAULT_UP.clone();const t=new I,e=new bi,n=new Vn,i=new I(1,1,1);function r(){n.setFromEuler(e,!1)}function l(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new de},normalMatrix:{value:new ve}}),this.matrix=new de,this.matrixWorld=new de,this.matrixAutoUpdate=Le.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Le.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ro,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Jr.setFromAxisAngle(t,e),this.quaternion.multiply(Jr),this}rotateOnWorldAxis(t,e){return Jr.setFromAxisAngle(t,e),this.quaternion.premultiply(Jr),this}rotateX(t){return this.rotateOnAxis(Iv,t)}rotateY(t){return this.rotateOnAxis(Ov,t)}rotateZ(t){return this.rotateOnAxis(zv,t)}translateOnAxis(t,e){return Lv.copy(t).applyQuaternion(this.quaternion),this.position.add(Lv.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Iv,t)}translateY(t){return this.translateOnAxis(Ov,t)}translateZ(t){return this.translateOnAxis(zv,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Cs.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?au.copy(t):au.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),gl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Cs.lookAt(gl,au,this.up):Cs.lookAt(au,gl,this.up),this.quaternion.setFromRotationMatrix(Cs),i&&(Cs.extractRotation(i.matrixWorld),Jr.setFromRotationMatrix(Cs),this.quaternion.premultiply(Jr.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Bv),Qr.child=t,this.dispatchEvent(Qr),Qr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(M1),sp.child=t,this.dispatchEvent(sp),sp.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Cs.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Cs.multiply(t.parent.matrixWorld)),t.applyMatrix4(Cs),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Bv),Qr.child=t,this.dispatchEvent(Qr),Qr.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(t,e);if(l!==void 0)return l}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let r=0,l=i.length;r<l;r++)i[r].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(gl,t,x1),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(gl,S1,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let r=0,l=i.length;r<l;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(c=>({...c,boundingBox:c.boundingBox?c.boundingBox.toJSON():void 0,boundingSphere:c.boundingSphere?c.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(c=>({...c})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function r(c,h){return c[h.uuid]===void 0&&(c[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const h=c.shapes;if(Array.isArray(h))for(let f=0,p=h.length;f<p;f++){const m=h[f];r(t.shapes,m)}else r(t.shapes,h)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let h=0,f=this.material.length;h<f;h++)c.push(r(t.materials,this.material[h]));i.material=c}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const h=this.animations[c];i.animations.push(r(t.animations,h))}}if(e){const c=l(t.geometries),h=l(t.materials),f=l(t.textures),p=l(t.images),m=l(t.shapes),g=l(t.skeletons),v=l(t.animations),x=l(t.nodes);c.length>0&&(n.geometries=c),h.length>0&&(n.materials=h),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),g.length>0&&(n.skeletons=g),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=i,n;function l(c){const h=[];for(const f in c){const p=c[f];delete p.metadata,h.push(p)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Le.DEFAULT_UP=new I(0,1,0);Le.DEFAULT_MATRIX_AUTO_UPDATE=!0;Le.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Xi=new I,Rs=new I,ap=new I,Ds=new I,$r=new I,to=new I,Fv=new I,rp=new I,op=new I,lp=new I,cp=new Pe,up=new Pe,hp=new Pe;class ai{constructor(t=new I,e=new I,n=new I){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Xi.subVectors(t,e),i.cross(Xi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Xi.subVectors(i,e),Rs.subVectors(n,e),ap.subVectors(t,e);const l=Xi.dot(Xi),c=Xi.dot(Rs),h=Xi.dot(ap),f=Rs.dot(Rs),p=Rs.dot(ap),m=l*f-c*c;if(m===0)return r.set(0,0,0),null;const g=1/m,v=(f*h-c*p)*g,x=(l*p-c*h)*g;return r.set(1-v-x,x,v)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Ds)===null?!1:Ds.x>=0&&Ds.y>=0&&Ds.x+Ds.y<=1}static getInterpolation(t,e,n,i,r,l,c,h){return this.getBarycoord(t,e,n,i,Ds)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(r,Ds.x),h.addScaledVector(l,Ds.y),h.addScaledVector(c,Ds.z),h)}static getInterpolatedAttribute(t,e,n,i,r,l){return cp.setScalar(0),up.setScalar(0),hp.setScalar(0),cp.fromBufferAttribute(t,e),up.fromBufferAttribute(t,n),hp.fromBufferAttribute(t,i),l.setScalar(0),l.addScaledVector(cp,r.x),l.addScaledVector(up,r.y),l.addScaledVector(hp,r.z),l}static isFrontFacing(t,e,n,i){return Xi.subVectors(n,e),Rs.subVectors(t,e),Xi.cross(Rs).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Xi.subVectors(this.c,this.b),Rs.subVectors(this.a,this.b),Xi.cross(Rs).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ai.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ai.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,r){return ai.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return ai.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ai.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let l,c;$r.subVectors(i,n),to.subVectors(r,n),rp.subVectors(t,n);const h=$r.dot(rp),f=to.dot(rp);if(h<=0&&f<=0)return e.copy(n);op.subVectors(t,i);const p=$r.dot(op),m=to.dot(op);if(p>=0&&m<=p)return e.copy(i);const g=h*m-p*f;if(g<=0&&h>=0&&p<=0)return l=h/(h-p),e.copy(n).addScaledVector($r,l);lp.subVectors(t,r);const v=$r.dot(lp),x=to.dot(lp);if(x>=0&&v<=x)return e.copy(r);const b=v*f-h*x;if(b<=0&&f>=0&&x<=0)return c=f/(f-x),e.copy(n).addScaledVector(to,c);const S=p*x-v*m;if(S<=0&&m-p>=0&&v-x>=0)return Fv.subVectors(r,i),c=(m-p)/(m-p+(v-x)),e.copy(i).addScaledVector(Fv,c);const _=1/(S+b+g);return l=b*_,c=g*_,e.copy(n).addScaledVector($r,l).addScaledVector(to,c)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Mx={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},la={h:0,s:0,l:0},ru={h:0,s:0,l:0};function fp(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}class Xt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Fn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Re.colorSpaceToWorking(this,e),this}setRGB(t,e,n,i=Re.workingColorSpace){return this.r=t,this.g=e,this.b=n,Re.colorSpaceToWorking(this,i),this}setHSL(t,e,n,i=Re.workingColorSpace){if(t=Bm(t,1),e=fe(e,0,1),n=fe(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,l=2*n-r;this.r=fp(l,r,t+1/3),this.g=fp(l,r,t),this.b=fp(l,r,t-1/3)}return Re.colorSpaceToWorking(this,i),this}setStyle(t,e=Fn){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],l=r.length;if(l===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,e);if(l===6)return this.setHex(parseInt(r,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Fn){const n=Mx[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=zs(t.r),this.g=zs(t.g),this.b=zs(t.b),this}copyLinearToSRGB(t){return this.r=Mo(t.r),this.g=Mo(t.g),this.b=Mo(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Fn){return Re.workingToColorSpace(zn.copy(this),t),Math.round(fe(zn.r*255,0,255))*65536+Math.round(fe(zn.g*255,0,255))*256+Math.round(fe(zn.b*255,0,255))}getHexString(t=Fn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Re.workingColorSpace){Re.workingToColorSpace(zn.copy(this),e);const n=zn.r,i=zn.g,r=zn.b,l=Math.max(n,i,r),c=Math.min(n,i,r);let h,f;const p=(c+l)/2;if(c===l)h=0,f=0;else{const m=l-c;switch(f=p<=.5?m/(l+c):m/(2-l-c),l){case n:h=(i-r)/m+(i<r?6:0);break;case i:h=(r-n)/m+2;break;case r:h=(n-i)/m+4;break}h/=6}return t.h=h,t.s=f,t.l=p,t}getRGB(t,e=Re.workingColorSpace){return Re.workingToColorSpace(zn.copy(this),e),t.r=zn.r,t.g=zn.g,t.b=zn.b,t}getStyle(t=Fn){Re.workingToColorSpace(zn.copy(this),t);const e=zn.r,n=zn.g,i=zn.b;return t!==Fn?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(la),this.setHSL(la.h+t,la.s+e,la.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(la),t.getHSL(ru);const n=zl(la.h,ru.h,e),i=zl(la.s,ru.s,e),r=zl(la.l,ru.l,e);return this.setHSL(n,i,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*i,this.g=r[1]*e+r[4]*n+r[7]*i,this.b=r[2]*e+r[5]*n+r[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const zn=new Xt;Xt.NAMES=Mx;let b1=0;class kn extends hs{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:b1++}),this.uuid=Mi(),this.name="",this.type="Material",this.blending=cr,this.side=Bs,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=$u,this.blendDst=th,this.blendEquation=ha,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Xt(0,0,0),this.blendAlpha=0,this.depthFunc=fr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=om,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=nr,this.stencilZFail=nr,this.stencilZPass=nr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(n.sheenColorMap=this.sheenColorMap.toJSON(t).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(n.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(t).uuid),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==cr&&(n.blending=this.blending),this.side!==Bs&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==$u&&(n.blendSrc=this.blendSrc),this.blendDst!==th&&(n.blendDst=this.blendDst),this.blendEquation!==ha&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==fr&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==om&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==nr&&(n.stencilFail=this.stencilFail),this.stencilZFail!==nr&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==nr&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const l=[];for(const c in r){const h=r[c];delete h.metadata,l.push(h)}return l}if(e){const r=i(t.textures),l=i(t.images);r.length>0&&(n.textures=r),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class _a extends kn{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Xt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.combine=ac,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Is=E1();function E1(){const s=new ArrayBuffer(4),t=new Float32Array(s),e=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let h=0;h<256;++h){const f=h-127;f<-27?(n[h]=0,n[h|256]=32768,i[h]=24,i[h|256]=24):f<-14?(n[h]=1024>>-f-14,n[h|256]=1024>>-f-14|32768,i[h]=-f-1,i[h|256]=-f-1):f<=15?(n[h]=f+15<<10,n[h|256]=f+15<<10|32768,i[h]=13,i[h|256]=13):f<128?(n[h]=31744,n[h|256]=64512,i[h]=24,i[h|256]=24):(n[h]=31744,n[h|256]=64512,i[h]=13,i[h|256]=13)}const r=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let h=1;h<1024;++h){let f=h<<13,p=0;for(;(f&8388608)===0;)f<<=1,p-=8388608;f&=-8388609,p+=947912704,r[h]=f|p}for(let h=1024;h<2048;++h)r[h]=939524096+(h-1024<<13);for(let h=1;h<31;++h)l[h]=h<<23;l[31]=1199570944,l[32]=2147483648;for(let h=33;h<63;++h)l[h]=2147483648+(h-32<<23);l[63]=3347054592;for(let h=1;h<64;++h)h!==32&&(c[h]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:l,offsetTable:c}}function si(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=fe(s,-65504,65504),Is.floatView[0]=s;const t=Is.uint32View[0],e=t>>23&511;return Is.baseTable[e]+((t&8388607)>>Is.shiftTable[e])}function Cl(s){const t=s>>10;return Is.uint32View[0]=Is.mantissaTable[Is.offsetTable[t]+(s&1023)]+Is.exponentTable[t],Is.floatView[0]}class T1{static toHalfFloat(t){return si(t)}static fromHalfFloat(t){return Cl(t)}}const fn=new I,ou=new dt;let A1=0;class Xe{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:A1++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Zl,this.updateRanges=[],this.gpuType=ri,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)ou.fromBufferAttribute(this,e),ou.applyMatrix3(t),this.setXY(e,ou.x,ou.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)fn.fromBufferAttribute(this,e),fn.applyMatrix3(t),this.setXYZ(e,fn.x,fn.y,fn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)fn.fromBufferAttribute(this,e),fn.applyMatrix4(t),this.setXYZ(e,fn.x,fn.y,fn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)fn.fromBufferAttribute(this,e),fn.applyNormalMatrix(t),this.setXYZ(e,fn.x,fn.y,fn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)fn.fromBufferAttribute(this,e),fn.transformDirection(t),this.setXYZ(e,fn.x,fn.y,fn.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Jn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ye(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Jn(e,this.array)),e}setX(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Jn(e,this.array)),e}setY(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Jn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Jn(e,this.array)),e}setW(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array),i=ye(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array),i=ye(i,this.array),r=ye(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Zl&&(t.usage=this.usage),t}}class w1 extends Xe{constructor(t,e,n){super(new Int8Array(t),e,n)}}class C1 extends Xe{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class R1 extends Xe{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class D1 extends Xe{constructor(t,e,n){super(new Int16Array(t),e,n)}}class Hm extends Xe{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class N1 extends Xe{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Vm extends Xe{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class U1 extends Xe{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=Cl(this.array[t*this.itemSize]);return this.normalized&&(e=Jn(e,this.array)),e}setX(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize]=si(e),this}getY(t){let e=Cl(this.array[t*this.itemSize+1]);return this.normalized&&(e=Jn(e,this.array)),e}setY(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize+1]=si(e),this}getZ(t){let e=Cl(this.array[t*this.itemSize+2]);return this.normalized&&(e=Jn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize+2]=si(e),this}getW(t){let e=Cl(this.array[t*this.itemSize+3]);return this.normalized&&(e=Jn(e,this.array)),e}setW(t,e){return this.normalized&&(e=ye(e,this.array)),this.array[t*this.itemSize+3]=si(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array)),this.array[t+0]=si(e),this.array[t+1]=si(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array),i=ye(i,this.array)),this.array[t+0]=si(e),this.array[t+1]=si(n),this.array[t+2]=si(i),this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array),i=ye(i,this.array),r=ye(r,this.array)),this.array[t+0]=si(e),this.array[t+1]=si(n),this.array[t+2]=si(i),this.array[t+3]=si(r),this}}class $t extends Xe{constructor(t,e,n){super(new Float32Array(t),e,n)}}let P1=0;const Pi=new de,dp=new Le,eo=new I,xi=new Gn,vl=new Gn,En=new I;class xe extends hs{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:P1++}),this.uuid=Mi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(yx(t)?Vm:Hm)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new ve().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Pi.makeRotationFromQuaternion(t),this.applyMatrix4(Pi),this}rotateX(t){return Pi.makeRotationX(t),this.applyMatrix4(Pi),this}rotateY(t){return Pi.makeRotationY(t),this.applyMatrix4(Pi),this}rotateZ(t){return Pi.makeRotationZ(t),this.applyMatrix4(Pi),this}translate(t,e,n){return Pi.makeTranslation(t,e,n),this.applyMatrix4(Pi),this}scale(t,e,n){return Pi.makeScale(t,e,n),this.applyMatrix4(Pi),this}lookAt(t){return dp.lookAt(t),dp.updateMatrix(),this.applyMatrix4(dp.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(eo).negate(),this.translate(eo.x,eo.y,eo.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,r=t.length;i<r;i++){const l=t[i];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new $t(n,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const r=t[i];e.setXYZ(i,r.x,r.y,r.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Gn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];xi.setFromBufferAttribute(r),this.morphTargetsRelative?(En.addVectors(this.boundingBox.min,xi.min),this.boundingBox.expandByPoint(En),En.addVectors(this.boundingBox.max,xi.max),this.boundingBox.expandByPoint(En)):(this.boundingBox.expandByPoint(xi.min),this.boundingBox.expandByPoint(xi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Rn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new I,1/0);return}if(t){const n=this.boundingSphere.center;if(xi.setFromBufferAttribute(t),e)for(let r=0,l=e.length;r<l;r++){const c=e[r];vl.setFromBufferAttribute(c),this.morphTargetsRelative?(En.addVectors(xi.min,vl.min),xi.expandByPoint(En),En.addVectors(xi.max,vl.max),xi.expandByPoint(En)):(xi.expandByPoint(vl.min),xi.expandByPoint(vl.max))}xi.getCenter(n);let i=0;for(let r=0,l=t.count;r<l;r++)En.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(En));if(e)for(let r=0,l=e.length;r<l;r++){const c=e[r],h=this.morphTargetsRelative;for(let f=0,p=c.count;f<p;f++)En.fromBufferAttribute(c,f),h&&(eo.fromBufferAttribute(t,f),En.add(eo)),i=Math.max(i,n.distanceToSquared(En))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,r=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Xe(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],h=[];for(let z=0;z<n.count;z++)c[z]=new I,h[z]=new I;const f=new I,p=new I,m=new I,g=new dt,v=new dt,x=new dt,b=new I,S=new I;function _(z,C,w){f.fromBufferAttribute(n,z),p.fromBufferAttribute(n,C),m.fromBufferAttribute(n,w),g.fromBufferAttribute(r,z),v.fromBufferAttribute(r,C),x.fromBufferAttribute(r,w),p.sub(f),m.sub(f),v.sub(g),x.sub(g);const B=1/(v.x*x.y-x.x*v.y);isFinite(B)&&(b.copy(p).multiplyScalar(x.y).addScaledVector(m,-v.y).multiplyScalar(B),S.copy(m).multiplyScalar(v.x).addScaledVector(p,-x.x).multiplyScalar(B),c[z].add(b),c[C].add(b),c[w].add(b),h[z].add(S),h[C].add(S),h[w].add(S))}let E=this.groups;E.length===0&&(E=[{start:0,count:t.count}]);for(let z=0,C=E.length;z<C;++z){const w=E[z],B=w.start,Y=w.count;for(let W=B,$=B+Y;W<$;W+=3)_(t.getX(W+0),t.getX(W+1),t.getX(W+2))}const A=new I,T=new I,N=new I,R=new I;function L(z){N.fromBufferAttribute(i,z),R.copy(N);const C=c[z];A.copy(C),A.sub(N.multiplyScalar(N.dot(C))).normalize(),T.crossVectors(R,C);const B=T.dot(h[z])<0?-1:1;l.setXYZW(z,A.x,A.y,A.z,B)}for(let z=0,C=E.length;z<C;++z){const w=E[z],B=w.start,Y=w.count;for(let W=B,$=B+Y;W<$;W+=3)L(t.getX(W+0)),L(t.getX(W+1)),L(t.getX(W+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Xe(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let g=0,v=n.count;g<v;g++)n.setXYZ(g,0,0,0);const i=new I,r=new I,l=new I,c=new I,h=new I,f=new I,p=new I,m=new I;if(t)for(let g=0,v=t.count;g<v;g+=3){const x=t.getX(g+0),b=t.getX(g+1),S=t.getX(g+2);i.fromBufferAttribute(e,x),r.fromBufferAttribute(e,b),l.fromBufferAttribute(e,S),p.subVectors(l,r),m.subVectors(i,r),p.cross(m),c.fromBufferAttribute(n,x),h.fromBufferAttribute(n,b),f.fromBufferAttribute(n,S),c.add(p),h.add(p),f.add(p),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(b,h.x,h.y,h.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let g=0,v=e.count;g<v;g+=3)i.fromBufferAttribute(e,g+0),r.fromBufferAttribute(e,g+1),l.fromBufferAttribute(e,g+2),p.subVectors(l,r),m.subVectors(i,r),p.cross(m),n.setXYZ(g+0,p.x,p.y,p.z),n.setXYZ(g+1,p.x,p.y,p.z),n.setXYZ(g+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)En.fromBufferAttribute(t,e),En.normalize(),t.setXYZ(e,En.x,En.y,En.z)}toNonIndexed(){function t(c,h){const f=c.array,p=c.itemSize,m=c.normalized,g=new f.constructor(h.length*p);let v=0,x=0;for(let b=0,S=h.length;b<S;b++){c.isInterleavedBufferAttribute?v=h[b]*c.data.stride+c.offset:v=h[b]*p;for(let _=0;_<p;_++)g[x++]=f[v++]}return new Xe(g,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new xe,n=this.index.array,i=this.attributes;for(const c in i){const h=i[c],f=t(h,n);e.setAttribute(c,f)}const r=this.morphAttributes;for(const c in r){const h=[],f=r[c];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=t(g,n);h.push(v)}e.morphAttributes[c]=h}e.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,h=l.length;c<h;c++){const f=l[c];e.addGroup(f.start,f.count,f.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const f in h)h[f]!==void 0&&(t[f]=h[f]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const h in n){const f=n[h];t.data.attributes[h]=f.toJSON(t.data)}const i={};let r=!1;for(const h in this.morphAttributes){const f=this.morphAttributes[h],p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m];p.push(v.toJSON(t.data))}p.length>0&&(i[h]=p,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(t.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(t.data.boundingSphere=c.toJSON()),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone());const i=t.attributes;for(const f in i){const p=i[f];this.setAttribute(f,p.clone(e))}const r=t.morphAttributes;for(const f in r){const p=[],m=r[f];for(let g=0,v=m.length;g<v;g++)p.push(m[g].clone(e));this.morphAttributes[f]=p}this.morphTargetsRelative=t.morphTargetsRelative;const l=t.groups;for(let f=0,p=l.length;f<p;f++){const m=l[f];this.addGroup(m.start,m.count,m.materialIndex)}const c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Hv=new de,Ga=new gr,lu=new Rn,Vv=new I,cu=new I,uu=new I,hu=new I,pp=new I,fu=new I,Gv=new I,du=new I;class dn extends Le{constructor(t=new xe,e=new _a){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,l=i.length;r<l;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,l=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const c=this.morphTargetInfluences;if(r&&c){fu.set(0,0,0);for(let h=0,f=r.length;h<f;h++){const p=c[h],m=r[h];p!==0&&(pp.fromBufferAttribute(m,t),l?fu.addScaledVector(pp,p):fu.addScaledVector(pp.sub(e),p))}e.add(fu)}return e}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),lu.copy(n.boundingSphere),lu.applyMatrix4(r),Ga.copy(t.ray).recast(t.near),!(lu.containsPoint(Ga.origin)===!1&&(Ga.intersectSphere(lu,Vv)===null||Ga.origin.distanceToSquared(Vv)>(t.far-t.near)**2))&&(Hv.copy(r).invert(),Ga.copy(t.ray).applyMatrix4(Hv),!(n.boundingBox!==null&&Ga.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Ga)))}_computeIntersections(t,e,n){let i;const r=this.geometry,l=this.material,c=r.index,h=r.attributes.position,f=r.attributes.uv,p=r.attributes.uv1,m=r.attributes.normal,g=r.groups,v=r.drawRange;if(c!==null)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(c.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,N=A;T<N;T+=3){const R=c.getX(T),L=c.getX(T+1),z=c.getX(T+2);i=pu(this,_,t,n,f,p,m,R,L,z),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(c.count,v.start+v.count);for(let S=x,_=b;S<_;S+=3){const E=c.getX(S),A=c.getX(S+1),T=c.getX(S+2);i=pu(this,l,t,n,f,p,m,E,A,T),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}else if(h!==void 0)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(h.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,N=A;T<N;T+=3){const R=T,L=T+1,z=T+2;i=pu(this,_,t,n,f,p,m,R,L,z),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(h.count,v.start+v.count);for(let S=x,_=b;S<_;S+=3){const E=S,A=S+1,T=S+2;i=pu(this,l,t,n,f,p,m,E,A,T),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}}}function L1(s,t,e,n,i,r,l,c){let h;if(t.side===Qn?h=n.intersectTriangle(l,r,i,!0,c):h=n.intersectTriangle(i,r,l,t.side===Bs,c),h===null)return null;du.copy(c),du.applyMatrix4(s.matrixWorld);const f=e.ray.origin.distanceTo(du);return f<e.near||f>e.far?null:{distance:f,point:du.clone(),object:s}}function pu(s,t,e,n,i,r,l,c,h,f){s.getVertexPosition(c,cu),s.getVertexPosition(h,uu),s.getVertexPosition(f,hu);const p=L1(s,t,e,n,cu,uu,hu,Gv);if(p){const m=new I;ai.getBarycoord(Gv,cu,uu,hu,m),i&&(p.uv=ai.getInterpolatedAttribute(i,c,h,f,m,new dt)),r&&(p.uv1=ai.getInterpolatedAttribute(r,c,h,f,m,new dt)),l&&(p.normal=ai.getInterpolatedAttribute(l,c,h,f,m,new I),p.normal.dot(n.direction)>0&&p.normal.multiplyScalar(-1));const g={a:c,b:h,c:f,normal:new I,materialIndex:0};ai.getNormal(cu,uu,hu,g.normal),p.face=g,p.barycoord=m}return p}class vr extends xe{constructor(t=1,e=1,n=1,i=1,r=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:l};const c=this;i=Math.floor(i),r=Math.floor(r),l=Math.floor(l);const h=[],f=[],p=[],m=[];let g=0,v=0;x("z","y","x",-1,-1,n,e,t,l,r,0),x("z","y","x",1,-1,n,e,-t,l,r,1),x("x","z","y",1,1,t,n,e,i,l,2),x("x","z","y",1,-1,t,n,-e,i,l,3),x("x","y","z",1,-1,t,e,n,i,r,4),x("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(h),this.setAttribute("position",new $t(f,3)),this.setAttribute("normal",new $t(p,3)),this.setAttribute("uv",new $t(m,2));function x(b,S,_,E,A,T,N,R,L,z,C){const w=T/L,B=N/z,Y=T/2,W=N/2,$=R/2,et=L+1,k=z+1;let Q=0,X=0;const lt=new I;for(let _t=0;_t<k;_t++){const St=_t*B-W;for(let Lt=0;Lt<et;Lt++){const Yt=Lt*w-Y;lt[b]=Yt*E,lt[S]=St*A,lt[_]=$,f.push(lt.x,lt.y,lt.z),lt[b]=0,lt[S]=0,lt[_]=R>0?1:-1,p.push(lt.x,lt.y,lt.z),m.push(Lt/L),m.push(1-_t/z),Q+=1}}for(let _t=0;_t<z;_t++)for(let St=0;St<L;St++){const Lt=g+St+et*_t,Yt=g+St+et*(_t+1),Zt=g+(St+1)+et*(_t+1),ie=g+(St+1)+et*_t;h.push(Lt,Yt,ie),h.push(Yt,Zt,ie),X+=6}c.addGroup(v,X,C),v+=X,g+=Q}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new vr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Do(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function jn(s){const t={};for(let e=0;e<s.length;e++){const n=Do(s[e]);for(const i in n)t[i]=n[i]}return t}function I1(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}function bx(s){const t=s.getRenderTarget();return t===null?s.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:Re.workingColorSpace}const Ex={clone:Do,merge:jn};var O1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,z1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ki extends kn{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=O1,this.fragmentShader=z1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Do(t.uniforms),this.uniformsGroups=I1(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?e.uniforms[i]={type:"t",value:l.toJSON(t).uuid}:l&&l.isColor?e.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?e.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?e.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?e.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?e.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?e.uniforms[i]={type:"m4",value:l.toArray()}:e.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class sf extends Le{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new de,this.projectionMatrix=new de,this.projectionMatrixInverse=new de,this.coordinateSystem=Si,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const ca=new I,kv=new dt,Wv=new dt;class en extends sf{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Co*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(ur*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Co*2*Math.atan(Math.tan(ur*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){ca.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(ca.x,ca.y).multiplyScalar(-t/ca.z),ca.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(ca.x,ca.y).multiplyScalar(-t/ca.z)}getViewSize(t,e){return this.getViewBounds(t,kv,Wv),e.subVectors(Wv,kv)}setViewOffset(t,e,n,i,r,l){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(ur*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const h=l.fullWidth,f=l.fullHeight;r+=l.offsetX*i/h,e-=l.offsetY*n/f,i*=l.width/h,n*=l.height/f}const c=this.filmOffset;c!==0&&(r+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const no=-90,io=1;class Tx extends Le{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new en(no,io,t,e);i.layers=this.layers,this.add(i);const r=new en(no,io,t,e);r.layers=this.layers,this.add(r);const l=new en(no,io,t,e);l.layers=this.layers,this.add(l);const c=new en(no,io,t,e);c.layers=this.layers,this.add(c);const h=new en(no,io,t,e);h.layers=this.layers,this.add(h);const f=new en(no,io,t,e);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,r,l,c,h]=e;for(const f of e)this.remove(f);if(t===Si)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(t===wo)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const f of e)this.add(f),f.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,l,c,h,f,p]=this.children,m=t.getRenderTarget(),g=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),x=t.xr.enabled;t.xr.enabled=!1;const b=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,r),t.setRenderTarget(n,1,i),t.render(e,l),t.setRenderTarget(n,2,i),t.render(e,c),t.setRenderTarget(n,3,i),t.render(e,h),t.setRenderTarget(n,4,i),t.render(e,f),n.texture.generateMipmaps=b,t.setRenderTarget(n,5,i),t.render(e,p),t.setRenderTarget(m,g,v),t.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class oc extends ln{constructor(t=[],e=Fs,n,i,r,l,c,h,f,p){super(t,e,n,i,r,l,c,h,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class Ax extends us{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new oc(i),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new vr(5,5,5),r=new Ki({name:"CubemapFromEquirect",uniforms:Do(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Qn,blending:Os});r.uniforms.tEquirect.value=e;const l=new dn(i,r),c=e.minFilter;return e.minFilter===as&&(e.minFilter=mn),new Tx(1,10,this).update(t,l),e.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,e=!0,n=!0,i=!0){const r=t.getRenderTarget();for(let l=0;l<6;l++)t.setRenderTarget(this,l),t.clear(e,n,i);t.setRenderTarget(r)}}class yo extends Le{constructor(){super(),this.isGroup=!0,this.type="Group"}}const B1={type:"move"};class Zu{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new yo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new yo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new yo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,l=null;const c=this._targetRay,h=this._grip,f=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(f&&t.hand){l=!0;for(const b of t.hand.values()){const S=e.getJointPose(b,n),_=this._getHandJoint(f,b);S!==null&&(_.matrix.fromArray(S.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=S.radius),_.visible=S!==null}const p=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=p.position.distanceTo(m.position),v=.02,x=.005;f.inputState.pinching&&g>v+x?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!f.inputState.pinching&&g<=v-x&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else h!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(h.matrix.fromArray(r.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,r.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(r.linearVelocity)):h.hasLinearVelocity=!1,r.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(r.angularVelocity)):h.hasAngularVelocity=!1));c!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(B1)))}return c!==null&&(c.visible=i!==null),h!==null&&(h.visible=r!==null),f!==null&&(f.visible=l!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new yo;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class af{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new Xt(t),this.density=e}clone(){return new af(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class rf{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new Xt(t),this.near=e,this.far=n}clone(){return new rf(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}let Gm=class extends Le{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new bi,this.environmentIntensity=1,this.environmentRotation=new bi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}};class of{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Zl,this.updateRanges=[],this.version=0,this.uuid=Mi()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Mi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Mi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Zn=new I;class dr{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Zn.fromBufferAttribute(this,e),Zn.applyMatrix4(t),this.setXYZ(e,Zn.x,Zn.y,Zn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Zn.fromBufferAttribute(this,e),Zn.applyNormalMatrix(t),this.setXYZ(e,Zn.x,Zn.y,Zn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Zn.fromBufferAttribute(this,e),Zn.transformDirection(t),this.setXYZ(e,Zn.x,Zn.y,Zn.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=Jn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ye(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=ye(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=ye(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=ye(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=ye(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Jn(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Jn(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Jn(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Jn(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array),i=ye(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.normalized&&(e=ye(e,this.array),n=ye(n,this.array),i=ye(i,this.array),r=ye(r,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return new Xe(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new dr(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class km extends kn{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Xt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let so;const _l=new I,ao=new I,ro=new I,oo=new dt,yl=new dt,wx=new de,mu=new I,xl=new I,gu=new I,Xv=new dt,mp=new dt,qv=new dt;class Cx extends Le{constructor(t=new km){if(super(),this.isSprite=!0,this.type="Sprite",so===void 0){so=new xe;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new of(e,5);so.setIndex([0,1,2,0,2,3]),so.setAttribute("position",new dr(n,3,0,!1)),so.setAttribute("uv",new dr(n,2,3,!1))}this.geometry=so,this.material=t,this.center=new dt(.5,.5),this.count=1}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ao.setFromMatrixScale(this.matrixWorld),wx.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),ro.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ao.multiplyScalar(-ro.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const l=this.center;vu(mu.set(-.5,-.5,0),ro,l,ao,i,r),vu(xl.set(.5,-.5,0),ro,l,ao,i,r),vu(gu.set(.5,.5,0),ro,l,ao,i,r),Xv.set(0,0),mp.set(1,0),qv.set(1,1);let c=t.ray.intersectTriangle(mu,xl,gu,!1,_l);if(c===null&&(vu(xl.set(-.5,.5,0),ro,l,ao,i,r),mp.set(0,1),c=t.ray.intersectTriangle(mu,gu,xl,!1,_l),c===null))return;const h=t.ray.origin.distanceTo(_l);h<t.near||h>t.far||e.push({distance:h,point:_l.clone(),uv:ai.getInterpolation(_l,mu,xl,gu,Xv,mp,qv,new dt),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function vu(s,t,e,n,i,r){oo.subVectors(s,e).addScalar(.5).multiply(n),i!==void 0?(yl.x=r*oo.x-i*oo.y,yl.y=i*oo.x+r*oo.y):yl.copy(oo),s.copy(t),s.x+=yl.x,s.y+=yl.y,s.applyMatrix4(wx)}const _u=new I,Yv=new I;class Rx extends Le{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const r=e[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let r;for(r=0;r<i.length&&!(e<i[r].distance);r++);return i.splice(r,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const i=e.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let r=e[n].distance;if(e[n].object.visible&&(r-=r*e[n].hysteresis),t<r)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){_u.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(_u);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){_u.setFromMatrixPosition(t.matrixWorld),Yv.setFromMatrixPosition(this.matrixWorld);const n=_u.distanceTo(Yv)/t.zoom;e[0].object.visible=!0;let i,r;for(i=1,r=e.length;i<r;i++){let l=e[i].distance;if(e[i].object.visible&&(l-=l*e[i].hysteresis),n>=l)e[i-1].object.visible=!1,e[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const l=n[i];e.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return e}}const Zv=new I,jv=new Pe,Kv=new Pe,F1=new I,Jv=new de,yu=new I,gp=new Rn,Qv=new de,vp=new gr;class Dx extends dn{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=rm,this.bindMatrix=new de,this.bindMatrixInverse=new de,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new Gn),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,yu),this.boundingBox.expandByPoint(yu)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Rn),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,yu),this.boundingSphere.expandByPoint(yu)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),gp.copy(this.boundingSphere),gp.applyMatrix4(i),t.ray.intersectsSphere(gp)!==!1&&(Qv.copy(i).invert(),vp.copy(t.ray).applyMatrix4(Qv),!(this.boundingBox!==null&&vp.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,vp)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Pe,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===rm?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===ax?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;jv.fromBufferAttribute(i.attributes.skinIndex,t),Kv.fromBufferAttribute(i.attributes.skinWeight,t),Zv.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let r=0;r<4;r++){const l=Kv.getComponent(r);if(l!==0){const c=jv.getComponent(r);Jv.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),e.addScaledVector(F1.copy(Zv).applyMatrix4(Jv),l)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Wm extends Le{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ls extends ln{constructor(t=null,e=1,n=1,i,r,l,c,h,f=Cn,p=Cn,m,g){super(null,l,c,h,f,p,i,r,m,g),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const $v=new de,H1=new de;class lf{constructor(t=[],e=[]){this.uuid=Mi(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new de)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new de;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,l=t.length;r<l;r++){const c=t[r]?t[r].matrixWorld:H1;$v.multiplyMatrices(c,e[r]),$v.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new lf(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new ls(e,t,t,Hn,ri);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const r=t.bones[n];let l=e[r];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),l=new Wm),this.bones.push(l),this.boneInverses.push(new de().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,r=e.length;i<r;i++){const l=e[i];t.bones.push(l.uuid);const c=n[i];t.boneInverses.push(c.toArray())}return t}}class No extends Xe{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const lo=new de,t_=new de,xu=[],e_=new Gn,V1=new de,Sl=new dn,Ml=new Rn;class Nx extends dn{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new No(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,V1)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new Gn),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,lo),e_.copy(t.boundingBox).applyMatrix4(lo),this.boundingBox.union(e_)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new Rn),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,lo),Ml.copy(t.boundingSphere).applyMatrix4(lo),this.boundingSphere.union(Ml)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,r=n.length+1,l=t*r+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(Sl.geometry=this.geometry,Sl.material=this.material,Sl.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ml.copy(this.boundingSphere),Ml.applyMatrix4(n),t.ray.intersectsSphere(Ml)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,lo),t_.multiplyMatrices(n,lo),Sl.matrixWorld=t_,Sl.raycast(t,xu);for(let l=0,c=xu.length;l<c;l++){const h=xu[l];h.instanceId=r,h.object=this,e.push(h)}xu.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new No(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new ls(new Float32Array(i*this.count),i,this.count,Jh,ri));const r=this.morphTexture.source.data.data;let l=0;for(let f=0;f<n.length;f++)l+=n[f];const c=this.geometry.morphTargetsRelative?1:1-l,h=i*t;r[h]=c,r.set(n,h+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const _p=new I,G1=new I,k1=new ve;class Ps{constructor(t=new I(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=_p.subVectors(n,e).cross(G1.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(_p),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(t.start).addScaledVector(n,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||k1.getNormalMatrix(t),i=this.coplanarPoint(_p).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ka=new Rn,W1=new dt(.5,.5),Su=new I;class Oo{constructor(t=new Ps,e=new Ps,n=new Ps,i=new Ps,r=new Ps,l=new Ps){this.planes=[t,e,n,i,r,l]}set(t,e,n,i,r,l){const c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(n),c[3].copy(i),c[4].copy(r),c[5].copy(l),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=Si,n=!1){const i=this.planes,r=t.elements,l=r[0],c=r[1],h=r[2],f=r[3],p=r[4],m=r[5],g=r[6],v=r[7],x=r[8],b=r[9],S=r[10],_=r[11],E=r[12],A=r[13],T=r[14],N=r[15];if(i[0].setComponents(f-l,v-p,_-x,N-E).normalize(),i[1].setComponents(f+l,v+p,_+x,N+E).normalize(),i[2].setComponents(f+c,v+m,_+b,N+A).normalize(),i[3].setComponents(f-c,v-m,_-b,N-A).normalize(),n)i[4].setComponents(h,g,S,T).normalize(),i[5].setComponents(f-h,v-g,_-S,N-T).normalize();else if(i[4].setComponents(f-h,v-g,_-S,N-T).normalize(),e===Si)i[5].setComponents(f+h,v+g,_+S,N+T).normalize();else if(e===wo)i[5].setComponents(h,g,S,T).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),ka.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),ka.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(ka)}intersectsSprite(t){ka.center.set(0,0,0);const e=W1.distanceTo(t.center);return ka.radius=.7071067811865476+e,ka.applyMatrix4(t.matrixWorld),this.intersectsSphere(ka)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Su.x=i.normal.x>0?t.max.x:t.min.x,Su.y=i.normal.y>0?t.max.y:t.min.y,Su.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Su)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const ns=new de,is=new Oo;class cf{constructor(){this.coordinateSystem=Si}intersectsObject(t,e){if(!e.isArrayCamera||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ns.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),is.setFromProjectionMatrix(ns,i.coordinateSystem,i.reversedDepth),is.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ns.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),is.setFromProjectionMatrix(ns,i.coordinateSystem,i.reversedDepth),is.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ns.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),is.setFromProjectionMatrix(ns,i.coordinateSystem,i.reversedDepth),is.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ns.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),is.setFromProjectionMatrix(ns,i.coordinateSystem,i.reversedDepth),is.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ns.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),is.setFromProjectionMatrix(ns,i.coordinateSystem,i.reversedDepth),is.containsPoint(t))return!0}return!1}clone(){return new cf}}function yp(s,t){return s-t}function X1(s,t){return s.z-t.z}function q1(s,t){return t.z-s.z}class Y1{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const r=this.pool,l=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const c=r[this.index];l.push(c),this.index++,c.start=t,c.count=e,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const ii=new de,Z1=new Xt(1,1,1),n_=new Oo,j1=new cf,Mu=new Gn,Wa=new Rn,bl=new I,i_=new I,K1=new I,xp=new Y1,Bn=new dn,bu=[];function J1(s,t,e=0){const n=t.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==t.array.constructor){const i=s.count;for(let r=0;r<i;r++)for(let l=0;l<n;l++)t.setComponent(r+e,l,s.getComponent(r,l))}else t.array.set(s.array,e*n);t.needsUpdate=!0}function Xa(s,t){if(s.constructor!==t.constructor){const e=Math.min(s.length,t.length);for(let n=0;n<e;n++)t[n]=s[n]}else{const e=Math.min(s.length,t.length);t.set(new s.constructor(s.buffer,0,e))}}class Ux extends dn{constructor(t,e,n=e*2,i){super(new xe,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new ls(e,t,t,Hn,ri);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new ls(e,t,t,rc,Hs);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new ls(e,t,t,Hn,ri);n.colorSpace=Re.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const r in t.attributes){const l=t.getAttribute(r),{array:c,itemSize:h,normalized:f}=l,p=new c.constructor(n*h),m=new Xe(p,h,f);e.setAttribute(r,m)}if(t.getIndex()!==null){const r=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new Xe(r,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),r=e.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Gn);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const r=e[n].geometryIndex;this.getMatrixAt(n,ii),this.getBoundingBoxAt(r,Mu).applyMatrix4(ii),t.union(Mu)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Rn);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const r=e[n].geometryIndex;this.getMatrixAt(n,ii),this.getBoundingSphereAt(r,Wa).applyMatrix4(ii),t.union(Wa)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(yp),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const r=this._matricesTexture;ii.identity().toArray(r.image.data,i*16),r.needsUpdate=!0;const l=this._colorsTexture;return l&&(Z1.toArray(l.image.data,i*4),l.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const l=t.getIndex();if(l!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?l.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let h;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(yp),h=this._availableGeometryIds.shift(),r[h]=i):(h=this._geometryCount,this._geometryCount++,r.push(i)),this.setGeometryAt(h,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,h}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=n.getIndex()!==null,r=n.getIndex(),l=e.getIndex(),c=this._geometryInfo[t];if(i&&l.count>c.reservedIndexCount||e.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const h=c.vertexStart,f=c.reservedVertexCount;c.vertexCount=e.getAttribute("position").count;for(const p in n.attributes){const m=e.getAttribute(p),g=n.getAttribute(p);J1(m,g,h);const v=m.itemSize;for(let x=m.count,b=f;x<b;x++){const S=h+x;for(let _=0;_<v;_++)g.setComponent(S,_,0)}g.needsUpdate=!0,g.addUpdateRange(h*v,f*v)}if(i){const p=c.indexStart,m=c.reservedIndexCount;c.indexCount=e.getIndex().count;for(let g=0;g<l.count;g++)r.setX(p+g,h+l.getX(g));for(let g=l.count,v=m;g<v;g++)r.setX(p+g,h);r.needsUpdate=!0,r.addUpdateRange(p,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,e.boundingBox!==null&&(c.boundingBox=e.boundingBox.clone()),c.boundingSphere=null,e.boundingSphere!==null&&(c.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let i=0,r=n.length;i<r;i++)n[i].active&&n[i].geometryIndex===t&&this.deleteInstance(i);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),r=this.geometry;for(let l=0,c=n.length;l<c;l++){const h=i[l],f=n[h];if(f.active!==!1){if(r.index!==null){if(f.indexStart!==e){const{indexStart:p,vertexStart:m,reservedIndexCount:g}=f,v=r.index,x=v.array,b=t-m;for(let S=p;S<p+g;S++)x[S]=x[S]+b;v.array.copyWithin(e,p,p+g),v.addUpdateRange(e,g),f.indexStart=e}e+=f.reservedIndexCount}if(f.vertexStart!==t){const{vertexStart:p,reservedVertexCount:m}=f,g=r.attributes;for(const v in g){const x=g[v],{array:b,itemSize:S}=x;b.copyWithin(t*S,p*S,(p+m)*S),x.addUpdateRange(t*S,m*S)}f.vertexStart=t}t+=f.reservedVertexCount,f.start=r.index?f.indexStart:f.vertexStart,this._nextIndexStart=r.index?f.indexStart+f.reservedIndexCount:0,this._nextVertexStart=f.vertexStart+f.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingBox===null){const r=new Gn,l=n.index,c=n.attributes.position;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;l&&(p=l.getX(p)),r.expandByPoint(bl.fromBufferAttribute(c,p))}i.boundingBox=r}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingSphere===null){const r=new Rn;this.getBoundingBoxAt(t,Mu),Mu.getCenter(r.center);const l=n.index,c=n.attributes.position;let h=0;for(let f=i.start,p=i.start+i.count;f<p;f++){let m=f;l&&(m=l.getX(m)),bl.fromBufferAttribute(c,m),h=Math.max(h,r.center.distanceToSquared(bl))}r.radius=Math.sqrt(h),i.boundingSphere=r}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(yp);e[e.length-1]===n.length-1;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const i=new Int32Array(t),r=new Int32Array(t);Xa(this._multiDrawCounts,i),Xa(this._multiDrawStarts,r),this._multiDrawCounts=i,this._multiDrawStarts=r,this._maxInstanceCount=t;const l=this._indirectTexture,c=this._matricesTexture,h=this._colorsTexture;l.dispose(),this._initIndirectTexture(),Xa(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),Xa(c.image.data,this._matricesTexture.image.data),h&&(h.dispose(),this._initColorsTexture(),Xa(h.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(h=>h.indexStart+h.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const r=this.geometry;r.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new xe,this._initializeGeometry(r));const l=this.geometry;r.index&&Xa(r.index.array,l.index.array);for(const c in r.attributes)Xa(r.attributes[c].array,l.attributes[c].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,r=this.matrixWorld,l=this.geometry;Bn.material=this.material,Bn.geometry.index=l.index,Bn.geometry.attributes=l.attributes,Bn.geometry.boundingBox===null&&(Bn.geometry.boundingBox=new Gn),Bn.geometry.boundingSphere===null&&(Bn.geometry.boundingSphere=new Rn);for(let c=0,h=n.length;c<h;c++){if(!n[c].visible||!n[c].active)continue;const f=n[c].geometryIndex,p=i[f];Bn.geometry.setDrawRange(p.start,p.count),this.getMatrixAt(c,Bn.matrixWorld).premultiply(r),this.getBoundingBoxAt(f,Bn.geometry.boundingBox),this.getBoundingSphereAt(f,Bn.geometry.boundingSphere),Bn.raycast(t,bu);for(let m=0,g=bu.length;m<g;m++){const v=bu[m];v.object=this,v.batchId=c,e.push(v)}bu.length=0}Bn.material=null,Bn.geometry.index=null,Bn.geometry.attributes={},Bn.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,h=this._instanceInfo,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._geometryInfo,g=this.perObjectFrustumCulled,v=this._indirectTexture,x=v.image.data,b=n.isArrayCamera?j1:n_;g&&!n.isArrayCamera&&(ii.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),n_.setFromProjectionMatrix(ii,n.coordinateSystem,n.reversedDepth));let S=0;if(this.sortObjects){ii.copy(this.matrixWorld).invert(),bl.setFromMatrixPosition(n.matrixWorld).applyMatrix4(ii),i_.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(ii);for(let A=0,T=h.length;A<T;A++)if(h[A].visible&&h[A].active){const N=h[A].geometryIndex;this.getMatrixAt(A,ii),this.getBoundingSphereAt(N,Wa).applyMatrix4(ii);let R=!1;if(g&&(R=!b.intersectsSphere(Wa,n)),!R){const L=m[N],z=K1.subVectors(Wa.center,bl).dot(i_);xp.push(L.start,L.count,z,A)}}const _=xp.list,E=this.customSort;E===null?_.sort(r.transparent?q1:X1):E.call(this,_,n);for(let A=0,T=_.length;A<T;A++){const N=_[A];f[S]=N.start*c,p[S]=N.count,x[S]=N.index,S++}xp.reset()}else for(let _=0,E=h.length;_<E;_++)if(h[_].visible&&h[_].active){const A=h[_].geometryIndex;let T=!1;if(g&&(this.getMatrixAt(_,ii),this.getBoundingSphereAt(A,Wa).applyMatrix4(ii),T=!b.intersectsSphere(Wa,n)),!T){const N=m[A];f[S]=N.start*c,p[S]=N.count,x[S]=_,S++}}v.needsUpdate=!0,this._multiDrawCount=S,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,r,l){this.onBeforeRender(t,null,i,r,l)}}class $n extends kn{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Xt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const zh=new I,Bh=new I,s_=new de,El=new gr,Eu=new Rn,Sp=new I,a_=new I;class ga extends Le{constructor(t=new xe,e=new $n){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)zh.fromBufferAttribute(e,i-1),Bh.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=zh.distanceTo(Bh);t.setAttribute("lineDistance",new $t(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Eu.copy(n.boundingSphere),Eu.applyMatrix4(i),Eu.radius+=r,t.ray.intersectsSphere(Eu)===!1)return;s_.copy(i).invert(),El.copy(t.ray).applyMatrix4(s_);const c=r/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,l.start),x=Math.min(p.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const _=p.getX(b),E=p.getX(b+1),A=Tu(this,t,El,h,_,E,b);A&&e.push(A)}if(this.isLineLoop){const b=p.getX(x-1),S=p.getX(v),_=Tu(this,t,El,h,b,S,x-1);_&&e.push(_)}}else{const v=Math.max(0,l.start),x=Math.min(g.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const _=Tu(this,t,El,h,b,b+1,b);_&&e.push(_)}if(this.isLineLoop){const b=Tu(this,t,El,h,x-1,v,x-1);b&&e.push(b)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,l=i.length;r<l;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}}function Tu(s,t,e,n,i,r,l){const c=s.geometry.attributes.position;if(zh.fromBufferAttribute(c,i),Bh.fromBufferAttribute(c,r),e.distanceSqToSegment(zh,Bh,Sp,a_)>n)return;Sp.applyMatrix4(s.matrixWorld);const f=t.ray.origin.distanceTo(Sp);if(!(f<t.near||f>t.far))return{distance:f,point:a_.clone().applyMatrix4(s.matrixWorld),index:l,face:null,faceIndex:null,barycoord:null,object:s}}const r_=new I,o_=new I;class fs extends ga{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,r=e.count;i<r;i+=2)r_.fromBufferAttribute(e,i),o_.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+r_.distanceTo(o_);t.setAttribute("lineDistance",new $t(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Px extends ga{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Xm extends kn{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Xt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const l_=new de,cm=new gr,Au=new Rn,wu=new I;class Lx extends Le{constructor(t=new xe,e=new Xm){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Au.copy(n.boundingSphere),Au.applyMatrix4(i),Au.radius+=r,t.ray.intersectsSphere(Au)===!1)return;l_.copy(i).invert(),cm.copy(t.ray).applyMatrix4(l_);const c=r/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),v=Math.min(f.count,l.start+l.count);for(let x=g,b=v;x<b;x++){const S=f.getX(x);wu.fromBufferAttribute(m,S),c_(wu,S,h,i,t,e,this)}}else{const g=Math.max(0,l.start),v=Math.min(m.count,l.start+l.count);for(let x=g,b=v;x<b;x++)wu.fromBufferAttribute(m,x),c_(wu,x,h,i,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,l=i.length;r<l;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}}function c_(s,t,e,n,i,r,l){const c=cm.distanceSqToPoint(s);if(c<e){const h=new I;cm.closestPointToPoint(s,h),h.applyMatrix4(n);const f=i.ray.origin.distanceTo(h);if(f<i.near||f>i.far)return;r.push({distance:f,distanceToRay:Math.sqrt(c),point:h,index:t,face:null,faceIndex:null,barycoord:null,object:l})}}class Ix extends ln{constructor(t,e,n,i,r=mn,l=mn,c,h,f){super(t,e,n,i,r,l,c,h,f),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const p=this;function m(){p.needsUpdate=!0,p._requestVideoFrameCallbackId=t.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in t&&(this._requestVideoFrameCallbackId=t.requestVideoFrameCallback(m))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){this._requestVideoFrameCallbackId!==0&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class Q1 extends Ix{constructor(t,e,n,i,r,l,c,h){super({},t,e,n,i,r,l,c,h),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class $1 extends ln{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=Cn,this.minFilter=Cn,this.generateMipmaps=!1,this.needsUpdate=!0}}class uf extends ln{constructor(t,e,n,i,r,l,c,h,f,p,m,g){super(null,l,c,h,f,p,i,r,m,g),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class tT extends uf{constructor(t,e,n,i,r,l){super(t,e,n,r,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Li,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class eT extends uf{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,Fs),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class nT extends ln{constructor(t,e,n,i,r,l,c,h,f){super(t,e,n,i,r,l,c,h,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}class qm extends ln{constructor(t,e,n=Hs,i,r,l,c=Cn,h=Cn,f,p=To,m=1){if(p!==To&&p!==Ao)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const g={width:t,height:e,depth:m};super(g,i,r,l,c,h,p,n,f),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new da(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class Ym extends ln{constructor(t=null){super(),this.sourceTexture=t,this.isExternalTexture=!0}copy(t){return super.copy(t),this.sourceTexture=t.sourceTexture,this}}class hf extends xe{constructor(t=1,e=1,n=4,i=8,r=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:i,heightSegments:r},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),r=Math.max(1,Math.floor(r));const l=[],c=[],h=[],f=[],p=e/2,m=Math.PI/2*t,g=e,v=2*m+g,x=n*2+r,b=i+1,S=new I,_=new I;for(let E=0;E<=x;E++){let A=0,T=0,N=0,R=0;if(E<=n){const C=E/n,w=C*Math.PI/2;T=-p-t*Math.cos(w),N=t*Math.sin(w),R=-t*Math.cos(w),A=C*m}else if(E<=n+r){const C=(E-n)/r;T=-p+C*e,N=t,R=0,A=m+C*g}else{const C=(E-n-r)/n,w=C*Math.PI/2;T=p+t*Math.sin(w),N=t*Math.cos(w),R=t*Math.sin(w),A=m+g+C*m}const L=Math.max(0,Math.min(1,A/v));let z=0;E===0?z=.5/i:E===x&&(z=-.5/i);for(let C=0;C<=i;C++){const w=C/i,B=w*Math.PI*2,Y=Math.sin(B),W=Math.cos(B);_.x=-N*W,_.y=T,_.z=N*Y,c.push(_.x,_.y,_.z),S.set(-N*W,R,N*Y),S.normalize(),h.push(S.x,S.y,S.z),f.push(w+z,L)}if(E>0){const C=(E-1)*b;for(let w=0;w<i;w++){const B=C+w,Y=C+w+1,W=E*b+w,$=E*b+w+1;l.push(B,Y,W),l.push(Y,$,W)}}}this.setIndex(l),this.setAttribute("position",new $t(c,3)),this.setAttribute("normal",new $t(h,3)),this.setAttribute("uv",new $t(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new hf(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class ff extends xe{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const r=[],l=[],c=[],h=[],f=new I,p=new dt;l.push(0,0,0),c.push(0,0,1),h.push(.5,.5);for(let m=0,g=3;m<=e;m++,g+=3){const v=n+m/e*i;f.x=t*Math.cos(v),f.y=t*Math.sin(v),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(l[g]/t+1)/2,p.y=(l[g+1]/t+1)/2,h.push(p.x,p.y)}for(let m=1;m<=e;m++)r.push(m,m+1,0);this.setIndex(r),this.setAttribute("position",new $t(l,3)),this.setAttribute("normal",new $t(c,3)),this.setAttribute("uv",new $t(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ff(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class lc extends xe{constructor(t=1,e=1,n=1,i=32,r=1,l=!1,c=0,h=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:l,thetaStart:c,thetaLength:h};const f=this;i=Math.floor(i),r=Math.floor(r);const p=[],m=[],g=[],v=[];let x=0;const b=[],S=n/2;let _=0;E(),l===!1&&(t>0&&A(!0),e>0&&A(!1)),this.setIndex(p),this.setAttribute("position",new $t(m,3)),this.setAttribute("normal",new $t(g,3)),this.setAttribute("uv",new $t(v,2));function E(){const T=new I,N=new I;let R=0;const L=(e-t)/n;for(let z=0;z<=r;z++){const C=[],w=z/r,B=w*(e-t)+t;for(let Y=0;Y<=i;Y++){const W=Y/i,$=W*h+c,et=Math.sin($),k=Math.cos($);N.x=B*et,N.y=-w*n+S,N.z=B*k,m.push(N.x,N.y,N.z),T.set(et,L,k).normalize(),g.push(T.x,T.y,T.z),v.push(W,1-w),C.push(x++)}b.push(C)}for(let z=0;z<i;z++)for(let C=0;C<r;C++){const w=b[C][z],B=b[C+1][z],Y=b[C+1][z+1],W=b[C][z+1];(t>0||C!==0)&&(p.push(w,B,W),R+=3),(e>0||C!==r-1)&&(p.push(B,Y,W),R+=3)}f.addGroup(_,R,0),_+=R}function A(T){const N=x,R=new dt,L=new I;let z=0;const C=T===!0?t:e,w=T===!0?1:-1;for(let Y=1;Y<=i;Y++)m.push(0,S*w,0),g.push(0,w,0),v.push(.5,.5),x++;const B=x;for(let Y=0;Y<=i;Y++){const $=Y/i*h+c,et=Math.cos($),k=Math.sin($);L.x=C*k,L.y=S*w,L.z=C*et,m.push(L.x,L.y,L.z),g.push(0,w,0),R.x=et*.5+.5,R.y=k*.5*w+.5,v.push(R.x,R.y),x++}for(let Y=0;Y<i;Y++){const W=N+Y,$=B+Y;T===!0?p.push($,$+1,W):p.push($+1,$,W),z+=3}f.addGroup(_,z,T===!0?1:2),_+=z}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new lc(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class cc extends lc{constructor(t=1,e=1,n=32,i=1,r=!1,l=0,c=Math.PI*2){super(0,t,e,n,i,r,l,c),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:l,thetaLength:c}}static fromJSON(t){return new cc(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class ya extends xe{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const r=[],l=[];c(i),f(n),p(),this.setAttribute("position",new $t(r,3)),this.setAttribute("normal",new $t(r.slice(),3)),this.setAttribute("uv",new $t(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const A=new I,T=new I,N=new I;for(let R=0;R<e.length;R+=3)v(e[R+0],A),v(e[R+1],T),v(e[R+2],N),h(A,T,N,E)}function h(E,A,T,N){const R=N+1,L=[];for(let z=0;z<=R;z++){L[z]=[];const C=E.clone().lerp(T,z/R),w=A.clone().lerp(T,z/R),B=R-z;for(let Y=0;Y<=B;Y++)Y===0&&z===R?L[z][Y]=C:L[z][Y]=C.clone().lerp(w,Y/B)}for(let z=0;z<R;z++)for(let C=0;C<2*(R-z)-1;C++){const w=Math.floor(C/2);C%2===0?(g(L[z][w+1]),g(L[z+1][w]),g(L[z][w])):(g(L[z][w+1]),g(L[z+1][w+1]),g(L[z+1][w]))}}function f(E){const A=new I;for(let T=0;T<r.length;T+=3)A.x=r[T+0],A.y=r[T+1],A.z=r[T+2],A.normalize().multiplyScalar(E),r[T+0]=A.x,r[T+1]=A.y,r[T+2]=A.z}function p(){const E=new I;for(let A=0;A<r.length;A+=3){E.x=r[A+0],E.y=r[A+1],E.z=r[A+2];const T=S(E)/2/Math.PI+.5,N=_(E)/Math.PI+.5;l.push(T,1-N)}x(),m()}function m(){for(let E=0;E<l.length;E+=6){const A=l[E+0],T=l[E+2],N=l[E+4],R=Math.max(A,T,N),L=Math.min(A,T,N);R>.9&&L<.1&&(A<.2&&(l[E+0]+=1),T<.2&&(l[E+2]+=1),N<.2&&(l[E+4]+=1))}}function g(E){r.push(E.x,E.y,E.z)}function v(E,A){const T=E*3;A.x=t[T+0],A.y=t[T+1],A.z=t[T+2]}function x(){const E=new I,A=new I,T=new I,N=new I,R=new dt,L=new dt,z=new dt;for(let C=0,w=0;C<r.length;C+=9,w+=6){E.set(r[C+0],r[C+1],r[C+2]),A.set(r[C+3],r[C+4],r[C+5]),T.set(r[C+6],r[C+7],r[C+8]),R.set(l[w+0],l[w+1]),L.set(l[w+2],l[w+3]),z.set(l[w+4],l[w+5]),N.copy(E).add(A).add(T).divideScalar(3);const B=S(N);b(R,w+0,E,B),b(L,w+2,A,B),b(z,w+4,T,B)}}function b(E,A,T,N){N<0&&E.x===1&&(l[A]=E.x-1),T.x===0&&T.z===0&&(l[A]=N/2/Math.PI+.5)}function S(E){return Math.atan2(E.z,-E.x)}function _(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ya(t.vertices,t.indices,t.radius,t.details)}}class df extends ya{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,l,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new df(t.radius,t.detail)}}const Cu=new I,Ru=new I,Mp=new I,Du=new ai;class Ox extends xe{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const i=Math.pow(10,4),r=Math.cos(ur*e),l=t.getIndex(),c=t.getAttribute("position"),h=l?l.count:c.count,f=[0,0,0],p=["a","b","c"],m=new Array(3),g={},v=[];for(let x=0;x<h;x+=3){l?(f[0]=l.getX(x),f[1]=l.getX(x+1),f[2]=l.getX(x+2)):(f[0]=x,f[1]=x+1,f[2]=x+2);const{a:b,b:S,c:_}=Du;if(b.fromBufferAttribute(c,f[0]),S.fromBufferAttribute(c,f[1]),_.fromBufferAttribute(c,f[2]),Du.getNormal(Mp),m[0]=`${Math.round(b.x*i)},${Math.round(b.y*i)},${Math.round(b.z*i)}`,m[1]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,m[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let E=0;E<3;E++){const A=(E+1)%3,T=m[E],N=m[A],R=Du[p[E]],L=Du[p[A]],z=`${T}_${N}`,C=`${N}_${T}`;C in g&&g[C]?(Mp.dot(g[C].normal)<=r&&(v.push(R.x,R.y,R.z),v.push(L.x,L.y,L.z)),g[C]=null):z in g||(g[z]={index0:f[E],index1:f[A],normal:Mp.clone()})}}for(const x in g)if(g[x]){const{index0:b,index1:S}=g[x];Cu.fromBufferAttribute(c,b),Ru.fromBufferAttribute(c,S),v.push(Cu.x,Cu.y,Cu.z),v.push(Ru.x,Ru.y,Ru.z)}this.setAttribute("position",new $t(v,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class Ji{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let l=1;l<=t;l++)n=this.getPoint(l/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let i=0;const r=n.length;let l;e?l=e:l=t*n[r-1];let c=0,h=r-1,f;for(;c<=h;)if(i=Math.floor(c+(h-c)/2),f=n[i]-l,f<0)c=i+1;else if(f>0)h=i-1;else{h=i;break}if(i=h,n[i]===l)return i/(r-1);const p=n[i],g=n[i+1]-p,v=(l-p)/g;return(i+v)/(r-1)}getTangent(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);const l=this.getPoint(i),c=this.getPoint(r),h=e||(l.isVector2?new dt:new I);return h.copy(c).sub(l).normalize(),h}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new I,i=[],r=[],l=[],c=new I,h=new de;for(let v=0;v<=t;v++){const x=v/t;i[v]=this.getTangentAt(x,new I)}r[0]=new I,l[0]=new I;let f=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),g=Math.abs(i[0].z);p<=f&&(f=p,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],c),l[0].crossVectors(i[0],r[0]);for(let v=1;v<=t;v++){if(r[v]=r[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(fe(i[v-1].dot(i[v]),-1,1));r[v].applyMatrix4(h.makeRotationAxis(c,x))}l[v].crossVectors(i[v],r[v])}if(e===!0){let v=Math.acos(fe(r[0].dot(r[t]),-1,1));v/=t,i[0].dot(c.crossVectors(r[0],r[t]))>0&&(v=-v);for(let x=1;x<=t;x++)r[x].applyMatrix4(h.makeRotationAxis(i[x],v*x)),l[x].crossVectors(i[x],r[x])}return{tangents:i,normals:r,binormals:l}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class pf extends Ji{constructor(t=0,e=0,n=1,i=1,r=0,l=Math.PI*2,c=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(t,e=new dt){const n=e,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const l=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(l?r=0:r=i),this.aClockwise===!0&&!l&&(r===i?r=-i:r=r-i);const c=this.aStartAngle+t*r;let h=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),g=h-this.aX,v=f-this.aY;h=g*p-v*m+this.aX,f=g*m+v*p+this.aY}return n.set(h,f)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class zx extends pf{constructor(t,e,n,i,r,l){super(t,e,n,n,i,r,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Zm(){let s=0,t=0,e=0,n=0;function i(r,l,c,h){s=r,t=c,e=-3*r+3*l-2*c-h,n=2*r-2*l+c+h}return{initCatmullRom:function(r,l,c,h,f){i(l,c,f*(c-r),f*(h-l))},initNonuniformCatmullRom:function(r,l,c,h,f,p,m){let g=(l-r)/f-(c-r)/(f+p)+(c-l)/p,v=(c-l)/p-(h-l)/(p+m)+(h-c)/m;g*=p,v*=p,i(l,c,g,v)},calc:function(r){const l=r*r,c=l*r;return s+t*r+e*l+n*c}}}const Nu=new I,bp=new Zm,Ep=new Zm,Tp=new Zm;class Bx extends Ji{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new I){const n=e,i=this.points,r=i.length,l=(r-(this.closed?0:1))*t;let c=Math.floor(l),h=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/r)+1)*r:h===0&&c===r-1&&(c=r-2,h=1);let f,p;this.closed||c>0?f=i[(c-1)%r]:(Nu.subVectors(i[0],i[1]).add(i[0]),f=Nu);const m=i[c%r],g=i[(c+1)%r];if(this.closed||c+2<r?p=i[(c+2)%r]:(Nu.subVectors(i[r-1],i[r-2]).add(i[r-1]),p=Nu),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(f.distanceToSquared(m),v),b=Math.pow(m.distanceToSquared(g),v),S=Math.pow(g.distanceToSquared(p),v);b<1e-4&&(b=1),x<1e-4&&(x=b),S<1e-4&&(S=b),bp.initNonuniformCatmullRom(f.x,m.x,g.x,p.x,x,b,S),Ep.initNonuniformCatmullRom(f.y,m.y,g.y,p.y,x,b,S),Tp.initNonuniformCatmullRom(f.z,m.z,g.z,p.z,x,b,S)}else this.curveType==="catmullrom"&&(bp.initCatmullRom(f.x,m.x,g.x,p.x,this.tension),Ep.initCatmullRom(f.y,m.y,g.y,p.y,this.tension),Tp.initCatmullRom(f.z,m.z,g.z,p.z,this.tension));return n.set(bp.calc(h),Ep.calc(h),Tp.calc(h)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new I().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function u_(s,t,e,n,i){const r=(n-t)*.5,l=(i-e)*.5,c=s*s,h=s*c;return(2*e-2*n+r+l)*h+(-3*e+3*n-2*r-l)*c+r*s+e}function iT(s,t){const e=1-s;return e*e*t}function sT(s,t){return 2*(1-s)*s*t}function aT(s,t){return s*s*t}function Bl(s,t,e,n){return iT(s,t)+sT(s,e)+aT(s,n)}function rT(s,t){const e=1-s;return e*e*e*t}function oT(s,t){const e=1-s;return 3*e*e*s*t}function lT(s,t){return 3*(1-s)*s*s*t}function cT(s,t){return s*s*s*t}function Fl(s,t,e,n,i){return rT(s,t)+oT(s,e)+lT(s,n)+cT(s,i)}class jm extends Ji{constructor(t=new dt,e=new dt,n=new dt,i=new dt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new dt){const n=e,i=this.v0,r=this.v1,l=this.v2,c=this.v3;return n.set(Fl(t,i.x,r.x,l.x,c.x),Fl(t,i.y,r.y,l.y,c.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Fx extends Ji{constructor(t=new I,e=new I,n=new I,i=new I){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new I){const n=e,i=this.v0,r=this.v1,l=this.v2,c=this.v3;return n.set(Fl(t,i.x,r.x,l.x,c.x),Fl(t,i.y,r.y,l.y,c.y),Fl(t,i.z,r.z,l.z,c.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Km extends Ji{constructor(t=new dt,e=new dt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new dt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new dt){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Hx extends Ji{constructor(t=new I,e=new I){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new I){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new I){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Jm extends Ji{constructor(t=new dt,e=new dt,n=new dt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new dt){const n=e,i=this.v0,r=this.v1,l=this.v2;return n.set(Bl(t,i.x,r.x,l.x),Bl(t,i.y,r.y,l.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Qm extends Ji{constructor(t=new I,e=new I,n=new I){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new I){const n=e,i=this.v0,r=this.v1,l=this.v2;return n.set(Bl(t,i.x,r.x,l.x),Bl(t,i.y,r.y,l.y),Bl(t,i.z,r.z,l.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class $m extends Ji{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new dt){const n=e,i=this.points,r=(i.length-1)*t,l=Math.floor(r),c=r-l,h=i[l===0?l:l-1],f=i[l],p=i[l>i.length-2?i.length-1:l+1],m=i[l>i.length-3?i.length-1:l+2];return n.set(u_(c,h.x,f.x,p.x,m.x),u_(c,h.y,f.y,p.y,m.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new dt().fromArray(i))}return this}}var Fh=Object.freeze({__proto__:null,ArcCurve:zx,CatmullRomCurve3:Bx,CubicBezierCurve:jm,CubicBezierCurve3:Fx,EllipseCurve:pf,LineCurve:Km,LineCurve3:Hx,QuadraticBezierCurve:Jm,QuadraticBezierCurve3:Qm,SplineCurve:$m});class Vx extends Ji{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Fh[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const l=i[r]-n,c=this.curves[r],h=c.getLength(),f=h===0?0:1-l/h;return c.getPointAt(f,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const l=r[i],c=l.isEllipseCurve?t*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?t*l.points.length:t,h=l.getPoints(c);for(let f=0;f<h.length;f++){const p=h[f];n&&n.equals(p)||(e.push(p),n=p)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Fh[i.type]().fromJSON(i))}return this}}class Hh extends Vx{constructor(t){super(),this.type="Path",this.currentPoint=new dt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Km(this.currentPoint.clone(),new dt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new Jm(this.currentPoint.clone(),new dt(t,e),new dt(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,l){const c=new jm(this.currentPoint.clone(),new dt(t,e),new dt(n,i),new dt(r,l));return this.curves.push(c),this.currentPoint.set(r,l),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new $m(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+c,e+h,n,i,r,l),this}absarc(t,e,n,i,r,l){return this.absellipse(t,e,n,n,i,r,l),this}ellipse(t,e,n,i,r,l,c,h){const f=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(t+f,e+p,n,i,r,l,c,h),this}absellipse(t,e,n,i,r,l,c,h){const f=new pf(t,e,n,i,r,l,c,h);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const p=f.getPoint(1);return this.currentPoint.copy(p),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class hr extends Hh{constructor(t){super(t),this.uuid=Mi(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Hh().fromJSON(i))}return this}}function uT(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let r=Gx(s,0,i,e,!0);const l=[];if(!r||r.next===r.prev)return l;let c,h,f;if(n&&(r=mT(s,t,r,e)),s.length>80*e){c=1/0,h=1/0;let p=-1/0,m=-1/0;for(let g=e;g<i;g+=e){const v=s[g],x=s[g+1];v<c&&(c=v),x<h&&(h=x),v>p&&(p=v),x>m&&(m=x)}f=Math.max(p-c,m-h),f=f!==0?32767/f:0}return Jl(r,l,e,c,h,f,0),l}function Gx(s,t,e,n,i){let r;if(i===AT(s,t,e,n)>0)for(let l=t;l<e;l+=n)r=h_(l/n|0,s[l],s[l+1],r);else for(let l=e-n;l>=t;l-=n)r=h_(l/n|0,s[l],s[l+1],r);return r&&Uo(r,r.next)&&($l(r),r=r.next),r}function pr(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(Uo(e,e.next)||nn(e.prev,e,e.next)===0)){if($l(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Jl(s,t,e,n,i,r,l){if(!s)return;!l&&r&&xT(s,n,i,r);let c=s;for(;s.prev!==s.next;){const h=s.prev,f=s.next;if(r?fT(s,n,i,r):hT(s)){t.push(h.i,s.i,f.i),$l(s),s=f.next,c=f.next;continue}if(s=f,s===c){l?l===1?(s=dT(pr(s),t),Jl(s,t,e,n,i,r,2)):l===2&&pT(s,t,e,n,i,r):Jl(pr(s),t,e,n,i,r,1);break}}}function hT(s){const t=s.prev,e=s,n=s.next;if(nn(t,e,n)>=0)return!1;const i=t.x,r=e.x,l=n.x,c=t.y,h=e.y,f=n.y,p=Math.min(i,r,l),m=Math.min(c,h,f),g=Math.max(i,r,l),v=Math.max(c,h,f);let x=n.next;for(;x!==t;){if(x.x>=p&&x.x<=g&&x.y>=m&&x.y<=v&&Rl(i,c,r,h,l,f,x.x,x.y)&&nn(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function fT(s,t,e,n){const i=s.prev,r=s,l=s.next;if(nn(i,r,l)>=0)return!1;const c=i.x,h=r.x,f=l.x,p=i.y,m=r.y,g=l.y,v=Math.min(c,h,f),x=Math.min(p,m,g),b=Math.max(c,h,f),S=Math.max(p,m,g),_=um(v,x,t,e,n),E=um(b,S,t,e,n);let A=s.prevZ,T=s.nextZ;for(;A&&A.z>=_&&T&&T.z<=E;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Rl(c,p,h,m,f,g,A.x,A.y)&&nn(A.prev,A,A.next)>=0||(A=A.prevZ,T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Rl(c,p,h,m,f,g,T.x,T.y)&&nn(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;A&&A.z>=_;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Rl(c,p,h,m,f,g,A.x,A.y)&&nn(A.prev,A,A.next)>=0)return!1;A=A.prevZ}for(;T&&T.z<=E;){if(T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Rl(c,p,h,m,f,g,T.x,T.y)&&nn(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function dT(s,t){let e=s;do{const n=e.prev,i=e.next.next;!Uo(n,i)&&Wx(n,e,e.next,i)&&Ql(n,i)&&Ql(i,n)&&(t.push(n.i,e.i,i.i),$l(e),$l(e.next),e=s=i),e=e.next}while(e!==s);return pr(e)}function pT(s,t,e,n,i,r){let l=s;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&bT(l,c)){let h=Xx(l,c);l=pr(l,l.next),h=pr(h,h.next),Jl(l,t,e,n,i,r,0),Jl(h,t,e,n,i,r,0);return}c=c.next}l=l.next}while(l!==s)}function mT(s,t,e,n){const i=[];for(let r=0,l=t.length;r<l;r++){const c=t[r]*n,h=r<l-1?t[r+1]*n:s.length,f=Gx(s,c,h,n,!1);f===f.next&&(f.steiner=!0),i.push(MT(f))}i.sort(gT);for(let r=0;r<i.length;r++)e=vT(i[r],e);return e}function gT(s,t){let e=s.x-t.x;if(e===0&&(e=s.y-t.y,e===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(t.next.y-t.y)/(t.next.x-t.x);e=n-i}return e}function vT(s,t){const e=_T(s,t);if(!e)return t;const n=Xx(e,s);return pr(n,n.next),pr(e,e.next)}function _T(s,t){let e=t;const n=s.x,i=s.y;let r=-1/0,l;if(Uo(s,e))return e;do{if(Uo(s,e.next))return e.next;if(i<=e.y&&i>=e.next.y&&e.next.y!==e.y){const m=e.x+(i-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(m<=n&&m>r&&(r=m,l=e.x<e.next.x?e:e.next,m===n))return l}e=e.next}while(e!==t);if(!l)return null;const c=l,h=l.x,f=l.y;let p=1/0;e=l;do{if(n>=e.x&&e.x>=h&&n!==e.x&&kx(i<f?n:r,i,h,f,i<f?r:n,i,e.x,e.y)){const m=Math.abs(i-e.y)/(n-e.x);Ql(e,s)&&(m<p||m===p&&(e.x>l.x||e.x===l.x&&yT(l,e)))&&(l=e,p=m)}e=e.next}while(e!==c);return l}function yT(s,t){return nn(s.prev,s,t.prev)<0&&nn(t.next,s,s.next)<0}function xT(s,t,e,n){let i=s;do i.z===0&&(i.z=um(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,ST(i)}function ST(s){let t,e=1;do{let n=s,i;s=null;let r=null;for(t=0;n;){t++;let l=n,c=0;for(let f=0;f<e&&(c++,l=l.nextZ,!!l);f++);let h=e;for(;c>0||h>0&&l;)c!==0&&(h===0||!l||n.z<=l.z)?(i=n,n=n.nextZ,c--):(i=l,l=l.nextZ,h--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;n=l}r.nextZ=null,e*=2}while(t>1);return s}function um(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function MT(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function kx(s,t,e,n,i,r,l,c){return(i-l)*(t-c)>=(s-l)*(r-c)&&(s-l)*(n-c)>=(e-l)*(t-c)&&(e-l)*(r-c)>=(i-l)*(n-c)}function Rl(s,t,e,n,i,r,l,c){return!(s===l&&t===c)&&kx(s,t,e,n,i,r,l,c)}function bT(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!ET(s,t)&&(Ql(s,t)&&Ql(t,s)&&TT(s,t)&&(nn(s.prev,s,t.prev)||nn(s,t.prev,t))||Uo(s,t)&&nn(s.prev,s,s.next)>0&&nn(t.prev,t,t.next)>0)}function nn(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function Uo(s,t){return s.x===t.x&&s.y===t.y}function Wx(s,t,e,n){const i=Pu(nn(s,t,e)),r=Pu(nn(s,t,n)),l=Pu(nn(e,n,s)),c=Pu(nn(e,n,t));return!!(i!==r&&l!==c||i===0&&Uu(s,e,t)||r===0&&Uu(s,n,t)||l===0&&Uu(e,s,n)||c===0&&Uu(e,t,n))}function Uu(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function Pu(s){return s>0?1:s<0?-1:0}function ET(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&Wx(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function Ql(s,t){return nn(s.prev,s,s.next)<0?nn(s,t,s.next)>=0&&nn(s,s.prev,t)>=0:nn(s,t,s.prev)<0||nn(s,s.next,t)<0}function TT(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,r=(s.y+t.y)/2;do e.y>r!=e.next.y>r&&e.next.y!==e.y&&i<(e.next.x-e.x)*(r-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function Xx(s,t){const e=hm(s.i,s.x,s.y),n=hm(t.i,t.x,t.y),i=s.next,r=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,r.next=n,n.prev=r,n}function h_(s,t,e,n){const i=hm(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function $l(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function hm(s,t,e){return{i:s,x:t,y:e,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function AT(s,t,e,n){let i=0;for(let r=t,l=e-n;r<e;r+=n)i+=(s[l]-s[r])*(s[r+1]+s[l+1]),l=r;return i}class wT{static triangulate(t,e,n=2){return uT(t,e,n)}}class ji{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5}static isClockWise(t){return ji.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];f_(t),d_(n,t);let l=t.length;e.forEach(f_);for(let h=0;h<e.length;h++)i.push(l),l+=e[h].length,d_(n,e[h]);const c=wT.triangulate(n,i);for(let h=0;h<c.length;h+=3)r.push(c.slice(h,h+3));return r}}function f_(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function d_(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class mf extends xe{constructor(t=new hr([new dt(.5,.5),new dt(-.5,.5),new dt(-.5,-.5),new dt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let c=0,h=t.length;c<h;c++){const f=t[c];l(f)}this.setAttribute("position",new $t(i,3)),this.setAttribute("uv",new $t(r,2)),this.computeVertexNormals();function l(c){const h=[],f=e.curveSegments!==void 0?e.curveSegments:12,p=e.steps!==void 0?e.steps:1,m=e.depth!==void 0?e.depth:1;let g=e.bevelEnabled!==void 0?e.bevelEnabled:!0,v=e.bevelThickness!==void 0?e.bevelThickness:.2,x=e.bevelSize!==void 0?e.bevelSize:v-.1,b=e.bevelOffset!==void 0?e.bevelOffset:0,S=e.bevelSegments!==void 0?e.bevelSegments:3;const _=e.extrudePath,E=e.UVGenerator!==void 0?e.UVGenerator:CT;let A,T=!1,N,R,L,z;_&&(A=_.getSpacedPoints(p),T=!0,g=!1,N=_.computeFrenetFrames(p,!1),R=new I,L=new I,z=new I),g||(S=0,v=0,x=0,b=0);const C=c.extractPoints(f);let w=C.shape;const B=C.holes;if(!ji.isClockWise(w)){w=w.reverse();for(let gt=0,ht=B.length;gt<ht;gt++){const ft=B[gt];ji.isClockWise(ft)&&(B[gt]=ft.reverse())}}function W(gt){const ft=10000000000000001e-36;let ot=gt[0];for(let Nt=1;Nt<=gt.length;Nt++){const Mt=Nt%gt.length,Tt=gt[Mt],re=Tt.x-ot.x,ce=Tt.y-ot.y,O=re*re+ce*ce,D=Math.max(Math.abs(Tt.x),Math.abs(Tt.y),Math.abs(ot.x),Math.abs(ot.y)),K=ft*D*D;if(O<=K){gt.splice(Mt,1),Nt--;continue}ot=Tt}}W(w),B.forEach(W);const $=B.length,et=w;for(let gt=0;gt<$;gt++){const ht=B[gt];w=w.concat(ht)}function k(gt,ht,ft){return ht||console.error("THREE.ExtrudeGeometry: vec does not exist"),gt.clone().addScaledVector(ht,ft)}const Q=w.length;function X(gt,ht,ft){let ot,Nt,Mt;const Tt=gt.x-ht.x,re=gt.y-ht.y,ce=ft.x-gt.x,O=ft.y-gt.y,D=Tt*Tt+re*re,K=Tt*O-re*ce;if(Math.abs(K)>Number.EPSILON){const rt=Math.sqrt(D),mt=Math.sqrt(ce*ce+O*O),ct=ht.x-re/rt,Qt=ht.y+Tt/rt,Ut=ft.x-O/mt,jt=ft.y+ce/mt,Kt=((Ut-ct)*O-(jt-Qt)*ce)/(Tt*O-re*ce);ot=ct+Tt*Kt-gt.x,Nt=Qt+re*Kt-gt.y;const bt=ot*ot+Nt*Nt;if(bt<=2)return new dt(ot,Nt);Mt=Math.sqrt(bt/2)}else{let rt=!1;Tt>Number.EPSILON?ce>Number.EPSILON&&(rt=!0):Tt<-Number.EPSILON?ce<-Number.EPSILON&&(rt=!0):Math.sign(re)===Math.sign(O)&&(rt=!0),rt?(ot=-re,Nt=Tt,Mt=Math.sqrt(D)):(ot=Tt,Nt=re,Mt=Math.sqrt(D/2))}return new dt(ot/Mt,Nt/Mt)}const lt=[];for(let gt=0,ht=et.length,ft=ht-1,ot=gt+1;gt<ht;gt++,ft++,ot++)ft===ht&&(ft=0),ot===ht&&(ot=0),lt[gt]=X(et[gt],et[ft],et[ot]);const _t=[];let St,Lt=lt.concat();for(let gt=0,ht=$;gt<ht;gt++){const ft=B[gt];St=[];for(let ot=0,Nt=ft.length,Mt=Nt-1,Tt=ot+1;ot<Nt;ot++,Mt++,Tt++)Mt===Nt&&(Mt=0),Tt===Nt&&(Tt=0),St[ot]=X(ft[ot],ft[Mt],ft[Tt]);_t.push(St),Lt=Lt.concat(St)}let Yt;if(S===0)Yt=ji.triangulateShape(et,B);else{const gt=[],ht=[];for(let ft=0;ft<S;ft++){const ot=ft/S,Nt=v*Math.cos(ot*Math.PI/2),Mt=x*Math.sin(ot*Math.PI/2)+b;for(let Tt=0,re=et.length;Tt<re;Tt++){const ce=k(et[Tt],lt[Tt],Mt);te(ce.x,ce.y,-Nt),ot===0&&gt.push(ce)}for(let Tt=0,re=$;Tt<re;Tt++){const ce=B[Tt];St=_t[Tt];const O=[];for(let D=0,K=ce.length;D<K;D++){const rt=k(ce[D],St[D],Mt);te(rt.x,rt.y,-Nt),ot===0&&O.push(rt)}ot===0&&ht.push(O)}}Yt=ji.triangulateShape(gt,ht)}const Zt=Yt.length,ie=x+b;for(let gt=0;gt<Q;gt++){const ht=g?k(w[gt],Lt[gt],ie):w[gt];T?(L.copy(N.normals[0]).multiplyScalar(ht.x),R.copy(N.binormals[0]).multiplyScalar(ht.y),z.copy(A[0]).add(L).add(R),te(z.x,z.y,z.z)):te(ht.x,ht.y,0)}for(let gt=1;gt<=p;gt++)for(let ht=0;ht<Q;ht++){const ft=g?k(w[ht],Lt[ht],ie):w[ht];T?(L.copy(N.normals[gt]).multiplyScalar(ft.x),R.copy(N.binormals[gt]).multiplyScalar(ft.y),z.copy(A[gt]).add(L).add(R),te(z.x,z.y,z.z)):te(ft.x,ft.y,m/p*gt)}for(let gt=S-1;gt>=0;gt--){const ht=gt/S,ft=v*Math.cos(ht*Math.PI/2),ot=x*Math.sin(ht*Math.PI/2)+b;for(let Nt=0,Mt=et.length;Nt<Mt;Nt++){const Tt=k(et[Nt],lt[Nt],ot);te(Tt.x,Tt.y,m+ft)}for(let Nt=0,Mt=B.length;Nt<Mt;Nt++){const Tt=B[Nt];St=_t[Nt];for(let re=0,ce=Tt.length;re<ce;re++){const O=k(Tt[re],St[re],ot);T?te(O.x,O.y+A[p-1].y,A[p-1].x+ft):te(O.x,O.y,m+ft)}}}ut(),xt();function ut(){const gt=i.length/3;if(g){let ht=0,ft=Q*ht;for(let ot=0;ot<Zt;ot++){const Nt=Yt[ot];Bt(Nt[2]+ft,Nt[1]+ft,Nt[0]+ft)}ht=p+S*2,ft=Q*ht;for(let ot=0;ot<Zt;ot++){const Nt=Yt[ot];Bt(Nt[0]+ft,Nt[1]+ft,Nt[2]+ft)}}else{for(let ht=0;ht<Zt;ht++){const ft=Yt[ht];Bt(ft[2],ft[1],ft[0])}for(let ht=0;ht<Zt;ht++){const ft=Yt[ht];Bt(ft[0]+Q*p,ft[1]+Q*p,ft[2]+Q*p)}}n.addGroup(gt,i.length/3-gt,0)}function xt(){const gt=i.length/3;let ht=0;zt(et,ht),ht+=et.length;for(let ft=0,ot=B.length;ft<ot;ft++){const Nt=B[ft];zt(Nt,ht),ht+=Nt.length}n.addGroup(gt,i.length/3-gt,1)}function zt(gt,ht){let ft=gt.length;for(;--ft>=0;){const ot=ft;let Nt=ft-1;Nt<0&&(Nt=gt.length-1);for(let Mt=0,Tt=p+S*2;Mt<Tt;Mt++){const re=Q*Mt,ce=Q*(Mt+1),O=ht+ot+re,D=ht+Nt+re,K=ht+Nt+ce,rt=ht+ot+ce;kt(O,D,K,rt)}}}function te(gt,ht,ft){h.push(gt),h.push(ht),h.push(ft)}function Bt(gt,ht,ft){ge(gt),ge(ht),ge(ft);const ot=i.length/3,Nt=E.generateTopUV(n,i,ot-3,ot-2,ot-1);F(Nt[0]),F(Nt[1]),F(Nt[2])}function kt(gt,ht,ft,ot){ge(gt),ge(ht),ge(ot),ge(ht),ge(ft),ge(ot);const Nt=i.length/3,Mt=E.generateSideWallUV(n,i,Nt-6,Nt-3,Nt-2,Nt-1);F(Mt[0]),F(Mt[1]),F(Mt[3]),F(Mt[1]),F(Mt[2]),F(Mt[3])}function ge(gt){i.push(h[gt*3+0]),i.push(h[gt*3+1]),i.push(h[gt*3+2])}function F(gt){r.push(gt.x),r.push(gt.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return RT(e,n,t)}static fromJSON(t,e){const n=[];for(let r=0,l=t.shapes.length;r<l;r++){const c=e[t.shapes[r]];n.push(c)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new Fh[i.type]().fromJSON(i)),new mf(n,t.options)}}const CT={generateTopUV:function(s,t,e,n,i){const r=t[e*3],l=t[e*3+1],c=t[n*3],h=t[n*3+1],f=t[i*3],p=t[i*3+1];return[new dt(r,l),new dt(c,h),new dt(f,p)]},generateSideWallUV:function(s,t,e,n,i,r){const l=t[e*3],c=t[e*3+1],h=t[e*3+2],f=t[n*3],p=t[n*3+1],m=t[n*3+2],g=t[i*3],v=t[i*3+1],x=t[i*3+2],b=t[r*3],S=t[r*3+1],_=t[r*3+2];return Math.abs(c-p)<Math.abs(l-f)?[new dt(l,1-h),new dt(f,1-m),new dt(g,1-x),new dt(b,1-_)]:[new dt(c,1-h),new dt(p,1-m),new dt(v,1-x),new dt(S,1-_)]}};function RT(s,t,e){if(e.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];e.shapes.push(r.uuid)}else e.shapes.push(s.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class gf extends ya{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new gf(t.radius,t.detail)}}class vf extends xe{constructor(t=[new dt(0,-.5),new dt(.5,0),new dt(0,.5)],e=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=fe(i,0,Math.PI*2);const r=[],l=[],c=[],h=[],f=[],p=1/e,m=new I,g=new dt,v=new I,x=new I,b=new I;let S=0,_=0;for(let E=0;E<=t.length-1;E++)switch(E){case 0:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,b.copy(v),v.normalize(),h.push(v.x,v.y,v.z);break;case t.length-1:h.push(b.x,b.y,b.z);break;default:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,x.copy(v),v.x+=b.x,v.y+=b.y,v.z+=b.z,v.normalize(),h.push(v.x,v.y,v.z),b.copy(x)}for(let E=0;E<=e;E++){const A=n+E*p*i,T=Math.sin(A),N=Math.cos(A);for(let R=0;R<=t.length-1;R++){m.x=t[R].x*T,m.y=t[R].y,m.z=t[R].x*N,l.push(m.x,m.y,m.z),g.x=E/e,g.y=R/(t.length-1),c.push(g.x,g.y);const L=h[3*R+0]*T,z=h[3*R+1],C=h[3*R+0]*N;f.push(L,z,C)}}for(let E=0;E<e;E++)for(let A=0;A<t.length-1;A++){const T=A+E*t.length,N=T,R=T+t.length,L=T+t.length+1,z=T+1;r.push(N,R,z),r.push(L,z,R)}this.setIndex(r),this.setAttribute("position",new $t(l,3)),this.setAttribute("uv",new $t(c,2)),this.setAttribute("normal",new $t(f,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new vf(t.points,t.segments,t.phiStart,t.phiLength)}}class uc extends ya{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new uc(t.radius,t.detail)}}class zo extends xe{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,l=e/2,c=Math.floor(n),h=Math.floor(i),f=c+1,p=h+1,m=t/c,g=e/h,v=[],x=[],b=[],S=[];for(let _=0;_<p;_++){const E=_*g-l;for(let A=0;A<f;A++){const T=A*m-r;x.push(T,-E,0),b.push(0,0,1),S.push(A/c),S.push(1-_/h)}}for(let _=0;_<h;_++)for(let E=0;E<c;E++){const A=E+f*_,T=E+f*(_+1),N=E+1+f*(_+1),R=E+1+f*_;v.push(A,T,R),v.push(T,N,R)}this.setIndex(v),this.setAttribute("position",new $t(x,3)),this.setAttribute("normal",new $t(b,3)),this.setAttribute("uv",new $t(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new zo(t.width,t.height,t.widthSegments,t.heightSegments)}}class _f extends xe{constructor(t=.5,e=1,n=32,i=1,r=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],h=[],f=[],p=[];let m=t;const g=(e-t)/i,v=new I,x=new dt;for(let b=0;b<=i;b++){for(let S=0;S<=n;S++){const _=r+S/n*l;v.x=m*Math.cos(_),v.y=m*Math.sin(_),h.push(v.x,v.y,v.z),f.push(0,0,1),x.x=(v.x/e+1)/2,x.y=(v.y/e+1)/2,p.push(x.x,x.y)}m+=g}for(let b=0;b<i;b++){const S=b*(n+1);for(let _=0;_<n;_++){const E=_+S,A=E,T=E+n+1,N=E+n+2,R=E+1;c.push(A,T,R),c.push(T,N,R)}}this.setIndex(c),this.setAttribute("position",new $t(h,3)),this.setAttribute("normal",new $t(f,3)),this.setAttribute("uv",new $t(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new _f(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class yf extends xe{constructor(t=new hr([new dt(0,.5),new dt(-.5,-.5),new dt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],l=[];let c=0,h=0;if(Array.isArray(t)===!1)f(t);else for(let p=0;p<t.length;p++)f(t[p]),this.addGroup(c,h,p),c+=h,h=0;this.setIndex(n),this.setAttribute("position",new $t(i,3)),this.setAttribute("normal",new $t(r,3)),this.setAttribute("uv",new $t(l,2));function f(p){const m=i.length/3,g=p.extractPoints(e);let v=g.shape;const x=g.holes;ji.isClockWise(v)===!1&&(v=v.reverse());for(let S=0,_=x.length;S<_;S++){const E=x[S];ji.isClockWise(E)===!0&&(x[S]=E.reverse())}const b=ji.triangulateShape(v,x);for(let S=0,_=x.length;S<_;S++){const E=x[S];v=v.concat(E)}for(let S=0,_=v.length;S<_;S++){const E=v[S];i.push(E.x,E.y,0),r.push(0,0,1),l.push(E.x,E.y)}for(let S=0,_=b.length;S<_;S++){const E=b[S],A=E[0]+m,T=E[1]+m,N=E[2]+m;n.push(A,T,N),h+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return DT(e,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const l=e[t.shapes[i]];n.push(l)}return new yf(n,t.curveSegments)}}function DT(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class hc extends xe{constructor(t=1,e=32,n=16,i=0,r=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:l,thetaLength:c},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const h=Math.min(l+c,Math.PI);let f=0;const p=[],m=new I,g=new I,v=[],x=[],b=[],S=[];for(let _=0;_<=n;_++){const E=[],A=_/n;let T=0;_===0&&l===0?T=.5/e:_===n&&h===Math.PI&&(T=-.5/e);for(let N=0;N<=e;N++){const R=N/e;m.x=-t*Math.cos(i+R*r)*Math.sin(l+A*c),m.y=t*Math.cos(l+A*c),m.z=t*Math.sin(i+R*r)*Math.sin(l+A*c),x.push(m.x,m.y,m.z),g.copy(m).normalize(),b.push(g.x,g.y,g.z),S.push(R+T,1-A),E.push(f++)}p.push(E)}for(let _=0;_<n;_++)for(let E=0;E<e;E++){const A=p[_][E+1],T=p[_][E],N=p[_+1][E],R=p[_+1][E+1];(_!==0||l>0)&&v.push(A,T,R),(_!==n-1||h<Math.PI)&&v.push(T,N,R)}this.setIndex(v),this.setAttribute("position",new $t(x,3)),this.setAttribute("normal",new $t(b,3)),this.setAttribute("uv",new $t(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new hc(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class xf extends ya{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new xf(t.radius,t.detail)}}class Sf extends xe{constructor(t=1,e=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],h=[],f=[],p=new I,m=new I,g=new I;for(let v=0;v<=n;v++)for(let x=0;x<=i;x++){const b=x/i*r,S=v/n*Math.PI*2;m.x=(t+e*Math.cos(S))*Math.cos(b),m.y=(t+e*Math.cos(S))*Math.sin(b),m.z=e*Math.sin(S),c.push(m.x,m.y,m.z),p.x=t*Math.cos(b),p.y=t*Math.sin(b),g.subVectors(m,p).normalize(),h.push(g.x,g.y,g.z),f.push(x/i),f.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const b=(i+1)*v+x-1,S=(i+1)*(v-1)+x-1,_=(i+1)*(v-1)+x,E=(i+1)*v+x;l.push(b,S,E),l.push(S,_,E)}this.setIndex(l),this.setAttribute("position",new $t(c,3)),this.setAttribute("normal",new $t(h,3)),this.setAttribute("uv",new $t(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Sf(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Mf extends xe{constructor(t=1,e=.4,n=64,i=8,r=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],h=[],f=[],p=[],m=new I,g=new I,v=new I,x=new I,b=new I,S=new I,_=new I;for(let A=0;A<=n;++A){const T=A/n*r*Math.PI*2;E(T,r,l,t,v),E(T+.01,r,l,t,x),S.subVectors(x,v),_.addVectors(x,v),b.crossVectors(S,_),_.crossVectors(b,S),b.normalize(),_.normalize();for(let N=0;N<=i;++N){const R=N/i*Math.PI*2,L=-e*Math.cos(R),z=e*Math.sin(R);m.x=v.x+(L*_.x+z*b.x),m.y=v.y+(L*_.y+z*b.y),m.z=v.z+(L*_.z+z*b.z),h.push(m.x,m.y,m.z),g.subVectors(m,v).normalize(),f.push(g.x,g.y,g.z),p.push(A/n),p.push(N/i)}}for(let A=1;A<=n;A++)for(let T=1;T<=i;T++){const N=(i+1)*(A-1)+(T-1),R=(i+1)*A+(T-1),L=(i+1)*A+T,z=(i+1)*(A-1)+T;c.push(N,R,z),c.push(R,L,z)}this.setIndex(c),this.setAttribute("position",new $t(h,3)),this.setAttribute("normal",new $t(f,3)),this.setAttribute("uv",new $t(p,2));function E(A,T,N,R,L){const z=Math.cos(A),C=Math.sin(A),w=N/T*A,B=Math.cos(w);L.x=R*(2+B)*.5*z,L.y=R*(2+B)*C*.5,L.z=R*Math.sin(w)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Mf(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class bf extends xe{constructor(t=new Qm(new I(-1,-1,0),new I(-1,1,0),new I(1,1,0)),e=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r};const l=t.computeFrenetFrames(e,r);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new I,h=new I,f=new dt;let p=new I;const m=[],g=[],v=[],x=[];b(),this.setIndex(x),this.setAttribute("position",new $t(m,3)),this.setAttribute("normal",new $t(g,3)),this.setAttribute("uv",new $t(v,2));function b(){for(let A=0;A<e;A++)S(A);S(r===!1?e:0),E(),_()}function S(A){p=t.getPointAt(A/e,p);const T=l.normals[A],N=l.binormals[A];for(let R=0;R<=i;R++){const L=R/i*Math.PI*2,z=Math.sin(L),C=-Math.cos(L);h.x=C*T.x+z*N.x,h.y=C*T.y+z*N.y,h.z=C*T.z+z*N.z,h.normalize(),g.push(h.x,h.y,h.z),c.x=p.x+n*h.x,c.y=p.y+n*h.y,c.z=p.z+n*h.z,m.push(c.x,c.y,c.z)}}function _(){for(let A=1;A<=e;A++)for(let T=1;T<=i;T++){const N=(i+1)*(A-1)+(T-1),R=(i+1)*A+(T-1),L=(i+1)*A+T,z=(i+1)*(A-1)+T;x.push(N,R,z),x.push(R,L,z)}}function E(){for(let A=0;A<=e;A++)for(let T=0;T<=i;T++)f.x=A/e,f.y=T/i,v.push(f.x,f.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new bf(new Fh[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class qx extends xe{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,i=new I,r=new I;if(t.index!==null){const l=t.attributes.position,c=t.index;let h=t.groups;h.length===0&&(h=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,p=h.length;f<p;++f){const m=h[f],g=m.start,v=m.count;for(let x=g,b=g+v;x<b;x+=3)for(let S=0;S<3;S++){const _=c.getX(x+S),E=c.getX(x+(S+1)%3);i.fromBufferAttribute(l,_),r.fromBufferAttribute(l,E),p_(i,r,n)===!0&&(e.push(i.x,i.y,i.z),e.push(r.x,r.y,r.z))}}}else{const l=t.attributes.position;for(let c=0,h=l.count/3;c<h;c++)for(let f=0;f<3;f++){const p=3*c+f,m=3*c+(f+1)%3;i.fromBufferAttribute(l,p),r.fromBufferAttribute(l,m),p_(i,r,n)===!0&&(e.push(i.x,i.y,i.z),e.push(r.x,r.y,r.z))}}this.setAttribute("position",new $t(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function p_(s,t,e){const n=`${s.x},${s.y},${s.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${s.x},${s.y},${s.z}`;return e.has(n)===!0||e.has(i)===!0?!1:(e.add(n),e.add(i),!0)}var m_=Object.freeze({__proto__:null,BoxGeometry:vr,CapsuleGeometry:hf,CircleGeometry:ff,ConeGeometry:cc,CylinderGeometry:lc,DodecahedronGeometry:df,EdgesGeometry:Ox,ExtrudeGeometry:mf,IcosahedronGeometry:gf,LatheGeometry:vf,OctahedronGeometry:uc,PlaneGeometry:zo,PolyhedronGeometry:ya,RingGeometry:_f,ShapeGeometry:yf,SphereGeometry:hc,TetrahedronGeometry:xf,TorusGeometry:Sf,TorusKnotGeometry:Mf,TubeGeometry:bf,WireframeGeometry:qx});class Yx extends kn{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Xt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Zx extends Ki{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class tg extends kn{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Xt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=va,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class jx extends tg{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new dt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return fe(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Xt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Xt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Xt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class Kx extends kn{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Xt(16777215),this.specular=new Xt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=va,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.combine=ac,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Jx extends kn{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Xt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=va,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Qx extends kn{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=va,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class $x extends kn{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Xt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=va,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.combine=ac,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class eg extends kn{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=cx,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class ng extends kn{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class tS extends kn{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Xt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=va,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class eS extends $n{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function or(s,t){return!s||s.constructor===t?s:typeof t.BYTES_PER_ELEMENT=="number"?new t(s):Array.prototype.slice.call(s)}function nS(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function iS(s){function t(i,r){return s[i]-s[r]}const e=s.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n}function fm(s,t,e){const n=s.length,i=new s.constructor(n);for(let r=0,l=0;l!==n;++r){const c=e[r]*t;for(let h=0;h!==t;++h)i[l++]=s[c+h]}return i}function ig(s,t,e,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let l=r[n];if(l!==void 0)if(Array.isArray(l))do l=r[n],l!==void 0&&(t.push(r.time),e.push(...l)),r=s[i++];while(r!==void 0);else if(l.toArray!==void 0)do l=r[n],l!==void 0&&(t.push(r.time),l.toArray(e,e.length)),r=s[i++];while(r!==void 0);else do l=r[n],l!==void 0&&(t.push(r.time),e.push(l)),r=s[i++];while(r!==void 0)}function NT(s,t,e,n,i=30){const r=s.clone();r.name=t;const l=[];for(let h=0;h<r.tracks.length;++h){const f=r.tracks[h],p=f.getValueSize(),m=[],g=[];for(let v=0;v<f.times.length;++v){const x=f.times[v]*i;if(!(x<e||x>=n)){m.push(f.times[v]);for(let b=0;b<p;++b)g.push(f.values[v*p+b])}}m.length!==0&&(f.times=or(m,f.times.constructor),f.values=or(g,f.values.constructor),l.push(f))}r.tracks=l;let c=1/0;for(let h=0;h<r.tracks.length;++h)c>r.tracks[h].times[0]&&(c=r.tracks[h].times[0]);for(let h=0;h<r.tracks.length;++h)r.tracks[h].shift(-1*c);return r.resetDuration(),r}function UT(s,t=0,e=s,n=30){n<=0&&(n=30);const i=e.tracks.length,r=t/n;for(let l=0;l<i;++l){const c=e.tracks[l],h=c.ValueTypeName;if(h==="bool"||h==="string")continue;const f=s.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===h});if(f===void 0)continue;let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let g=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=v/3);const x=c.times.length-1;let b;if(r<=c.times[0]){const _=p,E=m-p;b=c.values.slice(_,E)}else if(r>=c.times[x]){const _=x*m+p,E=_+m-p;b=c.values.slice(_,E)}else{const _=c.createInterpolant(),E=p,A=m-p;_.evaluate(r),b=_.resultBuffer.slice(E,A)}h==="quaternion"&&new Vn().fromArray(b).normalize().conjugate().toArray(b);const S=f.times.length;for(let _=0;_<S;++_){const E=_*v+g;if(h==="quaternion")Vn.multiplyQuaternionsFlat(f.values,E,b,0,f.values,E);else{const A=v-g*2;for(let T=0;T<A;++T)f.values[E+T]-=b[T]}}}return s.blendMode=Om,s}class PT{static convertArray(t,e){return or(t,e)}static isTypedArray(t){return nS(t)}static getKeyframeOrder(t){return iS(t)}static sortedArray(t,e,n){return fm(t,e,n)}static flattenJSON(t,e,n,i){ig(t,e,n,i)}static subclip(t,e,n,i,r=30){return NT(t,e,n,i,r)}static makeClipAdditive(t,e=0,n=t,i=30){return UT(t,e,n,i)}}class fc{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let l;n:{i:if(!(t<i)){for(let c=n+2;;){if(i===void 0){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(r=i,i=e[++n],t<i)break e}l=e.length;break n}if(!(t>=r)){const c=e[1];t<c&&(n=2,r=c);for(let h=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===h)break;if(i=r,r=e[--n-1],t>=r)break e}l=n,n=0;break n}break t}for(;n<l;){const c=n+l>>>1;t<e[c]?l=c:n=c+1}if(i=e[n],r=e[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let l=0;l!==i;++l)e[l]=n[r+l];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class sS extends fc{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ar,endingEnd:ar}}intervalChanged_(t,e,n){const i=this.parameterPositions;let r=t-2,l=t+1,c=i[r],h=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case rr:r=t,c=2*e-n;break;case ql:r=i.length-2,c=e+i[r]-i[r+1];break;default:r=t,c=n}if(h===void 0)switch(this.getSettings_().endingEnd){case rr:l=t,h=2*n-e;break;case ql:l=1,h=n+i[1]-i[0];break;default:l=t-1,h=e}const f=(n-e)*.5,p=this.valueSize;this._weightPrev=f/(e-c),this._weightNext=f/(h-n),this._offsetPrev=r*p,this._offsetNext=l*p}interpolate_(t,e,n,i){const r=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,v=this._weightNext,x=(n-e)/(i-e),b=x*x,S=b*x,_=-g*S+2*g*b-g*x,E=(1+g)*S+(-1.5-2*g)*b+(-.5+g)*x+1,A=(-1-v)*S+(1.5+v)*b+.5*x,T=v*S-v*b;for(let N=0;N!==c;++N)r[N]=_*l[p+N]+E*l[f+N]+A*l[h+N]+T*l[m+N];return r}}class sg extends fc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=(n-e)/(i-e),m=1-p;for(let g=0;g!==c;++g)r[g]=l[f+g]*m+l[h+g]*p;return r}}class aS extends fc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Oi{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=or(e,this.TimeBufferType),this.values=or(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:or(t.times,Array),values:or(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new aS(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new sg(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new sS(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Xl:e=this.InterpolantFactoryMethodDiscrete;break;case Oh:e=this.InterpolantFactoryMethodLinear;break;case Yu:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Xl;case this.InterpolantFactoryMethodLinear:return Oh;case this.InterpolantFactoryMethodSmooth:return Yu}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let r=0,l=i-1;for(;r!==i&&n[r]<t;)++r;for(;l!==-1&&n[l]>e;)--l;if(++l,r!==0||l!==i){r>=l&&(l=Math.max(l,1),r=l-1);const c=this.getValueSize();this.times=n.slice(r,l),this.values=this.values.slice(r*c,l*c)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let c=0;c!==r;c++){const h=n[c];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,h),t=!1;break}if(l!==null&&l>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,h,l),t=!1;break}l=h}if(i!==void 0&&nS(i))for(let c=0,h=i.length;c!==h;++c){const f=i[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Yu,r=t.length-1;let l=1;for(let c=1;c<r;++c){let h=!1;const f=t[c],p=t[c+1];if(f!==p&&(c!==1||f!==t[0]))if(i)h=!0;else{const m=c*n,g=m-n,v=m+n;for(let x=0;x!==n;++x){const b=e[m+x];if(b!==e[g+x]||b!==e[v+x]){h=!0;break}}}if(h){if(c!==l){t[l]=t[c];const m=c*n,g=l*n;for(let v=0;v!==n;++v)e[g+v]=e[m+v]}++l}}if(r>0){t[l]=t[r];for(let c=r*n,h=l*n,f=0;f!==n;++f)e[h+f]=e[c+f];++l}return l!==t.length?(this.times=t.slice(0,l),this.values=e.slice(0,l*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}Oi.prototype.ValueTypeName="";Oi.prototype.TimeBufferType=Float32Array;Oi.prototype.ValueBufferType=Float32Array;Oi.prototype.DefaultInterpolation=Oh;class _r extends Oi{constructor(t,e,n){super(t,e,n)}}_r.prototype.ValueTypeName="bool";_r.prototype.ValueBufferType=Array;_r.prototype.DefaultInterpolation=Xl;_r.prototype.InterpolantFactoryMethodLinear=void 0;_r.prototype.InterpolantFactoryMethodSmooth=void 0;class ag extends Oi{constructor(t,e,n,i){super(t,e,n,i)}}ag.prototype.ValueTypeName="color";class tc extends Oi{constructor(t,e,n,i){super(t,e,n,i)}}tc.prototype.ValueTypeName="number";class rS extends fc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(n-e)/(i-e);let f=t*c;for(let p=f+c;f!==p;f+=4)Vn.slerpFlat(r,0,l,f-c,l,f,h);return r}}class dc extends Oi{constructor(t,e,n,i){super(t,e,n,i)}InterpolantFactoryMethodLinear(t){return new rS(this.times,this.values,this.getValueSize(),t)}}dc.prototype.ValueTypeName="quaternion";dc.prototype.InterpolantFactoryMethodSmooth=void 0;class yr extends Oi{constructor(t,e,n){super(t,e,n)}}yr.prototype.ValueTypeName="string";yr.prototype.ValueBufferType=Array;yr.prototype.DefaultInterpolation=Xl;yr.prototype.InterpolantFactoryMethodLinear=void 0;yr.prototype.InterpolantFactoryMethodSmooth=void 0;class ec extends Oi{constructor(t,e,n,i){super(t,e,n,i)}}ec.prototype.ValueTypeName="vector";class nc{constructor(t="",e=-1,n=[],i=tf){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=Mi(),this.userData={},this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let l=0,c=n.length;l!==c;++l)e.push(IT(n[l]).scale(i));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r.userData=JSON.parse(t.userData||"{}"),r}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode,userData:JSON.stringify(t.userData)};for(let r=0,l=n.length;r!==l;++r)e.push(Oi.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const r=e.length,l=[];for(let c=0;c<r;c++){let h=[],f=[];h.push((c+r-1)%r,c,(c+1)%r),f.push(0,1,0);const p=iS(h);h=fm(h,1,p),f=fm(f,1,p),!i&&h[0]===0&&(h.push(r),f.push(f[0])),l.push(new tc(".morphTargetInfluences["+e[c].name+"]",h,f).scale(1/n))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let c=0,h=t.length;c<h;c++){const f=t[c],p=f.name.match(r);if(p&&p.length>1){const m=p[1];let g=i[m];g||(i[m]=g=[]),g.push(f)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],e,n));return l}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,g,v,x,b){if(v.length!==0){const S=[],_=[];ig(v,S,_,x),S.length!==0&&b.push(new m(g,S,_))}},i=[],r=t.name||"default",l=t.fps||30,c=t.blendMode;let h=t.length||-1;const f=t.hierarchy||[];for(let m=0;m<f.length;m++){const g=f[m].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const v={};let x;for(x=0;x<g.length;x++)if(g[x].morphTargets)for(let b=0;b<g[x].morphTargets.length;b++)v[g[x].morphTargets[b]]=-1;for(const b in v){const S=[],_=[];for(let E=0;E!==g[x].morphTargets.length;++E){const A=g[x];S.push(A.time),_.push(A.morphTarget===b?1:0)}i.push(new tc(".morphTargetInfluence["+b+"]",S,_))}h=v.length*l}else{const v=".bones["+e[m].name+"]";n(ec,v+".position",g,"pos",i),n(dc,v+".quaternion",g,"rot",i),n(ec,v+".scale",g,"scl",i)}}return i.length===0?null:new this(r,h,i,c)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let n=0;n<this.tracks.length;n++)t.push(this.tracks[n].clone());const e=new this.constructor(this.name,this.duration,t,this.blendMode);return e.userData=JSON.parse(JSON.stringify(this.userData)),e}toJSON(){return this.constructor.toJSON(this)}}function LT(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return tc;case"vector":case"vector2":case"vector3":case"vector4":return ec;case"color":return ag;case"quaternion":return dc;case"bool":case"boolean":return _r;case"string":return yr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function IT(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=LT(s.type);if(s.times===void 0){const e=[],n=[];ig(s.keys,e,n,"value"),s.times=e,s.values=n}return t.parse!==void 0?t.parse(s):new t(s.name,s.times,s.values,s.interpolation)}const rs={enabled:!1,files:{},add:function(s,t){this.enabled!==!1&&(this.files[s]=t)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class rg{constructor(t,e,n){const i=this;let r=!1,l=0,c=0,h;const f=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.abortController=new AbortController,this.itemStart=function(p){c++,r===!1&&i.onStart!==void 0&&i.onStart(p,l,c),r=!0},this.itemEnd=function(p){l++,i.onProgress!==void 0&&i.onProgress(p,l,c),l===c&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return h?h(p):p},this.setURLModifier=function(p){return h=p,this},this.addHandler=function(p,m){return f.push(p,m),this},this.removeHandler=function(p){const m=f.indexOf(p);return m!==-1&&f.splice(m,2),this},this.getHandler=function(p){for(let m=0,g=f.length;m<g;m+=2){const v=f[m],x=f[m+1];if(v.global&&(v.lastIndex=0),v.test(p))return x}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const xo=new rg;class oi{constructor(t){this.manager=t!==void 0?t:xo,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,r){n.load(t,i,e,r)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}abort(){return this}}oi.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ns={};class OT extends Error{constructor(t,e){super(t),this.response=e}}class Vs extends oi{constructor(t){super(t),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=rs.get(`file:${t}`);if(r!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(r),this.manager.itemEnd(t)},0),r;if(Ns[t]!==void 0){Ns[t].push({onLoad:e,onProgress:n,onError:i});return}Ns[t]=[],Ns[t].push({onLoad:e,onProgress:n,onError:i});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),c=this.mimeType,h=this.responseType;fetch(l).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const p=Ns[t],m=f.body.getReader(),g=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=g?parseInt(g):0,x=v!==0;let b=0;const S=new ReadableStream({start(_){E();function E(){m.read().then(({done:A,value:T})=>{if(A)_.close();else{b+=T.byteLength;const N=new ProgressEvent("progress",{lengthComputable:x,loaded:b,total:v});for(let R=0,L=p.length;R<L;R++){const z=p[R];z.onProgress&&z.onProgress(N)}_.enqueue(T),E()}},A=>{_.error(A)})}}});return new Response(S)}else throw new OT(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(h){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(p=>new DOMParser().parseFromString(p,c));case"json":return f.json();default:if(c==="")return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),g=m&&m[1]?m[1].toLowerCase():void 0,v=new TextDecoder(g);return f.arrayBuffer().then(x=>v.decode(x))}}}).then(f=>{rs.add(`file:${t}`,f);const p=Ns[t];delete Ns[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onLoad&&v.onLoad(f)}}).catch(f=>{const p=Ns[t];if(p===void 0)throw this.manager.itemError(t),f;delete Ns[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onError&&v.onError(f)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class zT extends oi{constructor(t){super(t)}load(t,e,n,i){const r=this,l=new Vs(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(c){try{e(r.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),r.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=nc.parse(t[n]);e.push(i)}return e}}class BT extends oi{constructor(t){super(t)}load(t,e,n,i){const r=this,l=[],c=new uf,h=new Vs(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(r.withCredentials);let f=0;function p(m){h.load(t[m],function(g){const v=r.parse(g,!0);l[m]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},f+=1,f===6&&(v.mipmapCount===1&&(c.minFilter=mn),c.image=l,c.format=v.format,c.needsUpdate=!0,e&&e(c))},n,i)}if(Array.isArray(t))for(let m=0,g=t.length;m<g;++m)p(m);else h.load(t,function(m){const g=r.parse(m,!0);if(g.isCubemap){const v=g.mipmaps.length/g.mipmapCount;for(let x=0;x<v;x++){l[x]={mipmaps:[]};for(let b=0;b<g.mipmapCount;b++)l[x].mipmaps.push(g.mipmaps[x*g.mipmapCount+b]),l[x].format=g.format,l[x].width=g.width,l[x].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=mn),c.format=g.format,c.needsUpdate=!0,e&&e(c)},n,i);return c}}const co=new WeakMap;class ic extends oi{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,l=rs.get(`image:${t}`);if(l!==void 0){if(l.complete===!0)r.manager.itemStart(t),setTimeout(function(){e&&e(l),r.manager.itemEnd(t)},0);else{let m=co.get(l);m===void 0&&(m=[],co.set(l,m)),m.push({onLoad:e,onError:i})}return l}const c=jl("img");function h(){p(),e&&e(this);const m=co.get(this)||[];for(let g=0;g<m.length;g++){const v=m[g];v.onLoad&&v.onLoad(this)}co.delete(this),r.manager.itemEnd(t)}function f(m){p(),i&&i(m),rs.remove(`image:${t}`);const g=co.get(this)||[];for(let v=0;v<g.length;v++){const x=g[v];x.onError&&x.onError(m)}co.delete(this),r.manager.itemError(t),r.manager.itemEnd(t)}function p(){c.removeEventListener("load",h,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",h,!1),c.addEventListener("error",f,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),rs.add(`image:${t}`,c),r.manager.itemStart(t),c.src=t,c}}class FT extends oi{constructor(t){super(t)}load(t,e,n,i){const r=new oc;r.colorSpace=Fn;const l=new ic(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function h(f){l.load(t[f],function(p){r.images[f]=p,c++,c===6&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(let f=0;f<t.length;++f)h(f);return r}}class HT extends oi{constructor(t){super(t)}load(t,e,n,i){const r=this,l=new ls,c=new Vs(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(r.withCredentials),c.load(t,function(h){let f;try{f=r.parse(h)}catch(p){if(i!==void 0)i(p);else{console.error(p);return}}f.image!==void 0?l.image=f.image:f.data!==void 0&&(l.image.width=f.width,l.image.height=f.height,l.image.data=f.data),l.wrapS=f.wrapS!==void 0?f.wrapS:Li,l.wrapT=f.wrapT!==void 0?f.wrapT:Li,l.magFilter=f.magFilter!==void 0?f.magFilter:mn,l.minFilter=f.minFilter!==void 0?f.minFilter:mn,l.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.colorSpace!==void 0&&(l.colorSpace=f.colorSpace),f.flipY!==void 0&&(l.flipY=f.flipY),f.format!==void 0&&(l.format=f.format),f.type!==void 0&&(l.type=f.type),f.mipmaps!==void 0&&(l.mipmaps=f.mipmaps,l.minFilter=as),f.mipmapCount===1&&(l.minFilter=mn),f.generateMipmaps!==void 0&&(l.generateMipmaps=f.generateMipmaps),l.needsUpdate=!0,e&&e(l,f)},n,i),l}}class VT extends oi{constructor(t){super(t)}load(t,e,n,i){const r=new ln,l=new ic(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(t,function(c){r.image=c,r.needsUpdate=!0,e!==void 0&&e(r)},n,i),r}}class xa extends Le{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Xt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class oS extends xa{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Xt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const Ap=new de,g_=new I,v_=new I;class og{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new dt(512,512),this.mapType=Ii,this.map=null,this.mapPass=null,this.matrix=new de,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Oo,this._frameExtents=new dt(1,1),this._viewportCount=1,this._viewports=[new Pe(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;g_.setFromMatrixPosition(t.matrixWorld),e.position.copy(g_),v_.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(v_),e.updateMatrixWorld(),Ap.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ap,e.coordinateSystem,e.reversedDepth),e.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Ap)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class GT extends og{constructor(){super(new en(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=Co*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,r=t.distance||e.far;(n!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class lS extends xa{constructor(t,e,n=0,i=Math.PI/3,r=0,l=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.target=new Le,this.distance=n,this.angle=i,this.penumbra=r,this.decay=l,this.map=null,this.shadow=new GT}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const __=new de,Tl=new I,wp=new I;class kT extends og{constructor(){super(new en(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new dt(4,2),this._viewportCount=6,this._viewports=[new Pe(2,1,1,1),new Pe(0,1,1,1),new Pe(3,1,1,1),new Pe(1,1,1,1),new Pe(3,0,1,1),new Pe(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Tl.setFromMatrixPosition(t.matrixWorld),n.position.copy(Tl),wp.copy(n.position),wp.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(wp),n.updateMatrixWorld(),i.makeTranslation(-Tl.x,-Tl.y,-Tl.z),__.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(__,n.coordinateSystem,n.reversedDepth)}}class cS extends xa{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new kT}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class cs extends sf{constructor(t=-1,e=1,n=1,i=-1,r=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=l,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,l=n+t,c=i+e,h=i-e;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=f*this.view.offsetX,l=r+f*this.view.width,c-=p*this.view.offsetY,h=c-p*this.view.height}this.projectionMatrix.makeOrthographic(r,l,c,h,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class WT extends og{constructor(){super(new cs(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class uS extends xa{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.target=new Le,this.shadow=new WT}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class hS extends xa{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class fS extends xa{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class dS{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new I)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.282095),e.addScaledVector(l[1],.488603*i),e.addScaledVector(l[2],.488603*r),e.addScaledVector(l[3],.488603*n),e.addScaledVector(l[4],1.092548*(n*i)),e.addScaledVector(l[5],1.092548*(i*r)),e.addScaledVector(l[6],.315392*(3*r*r-1)),e.addScaledVector(l[7],1.092548*(n*r)),e.addScaledVector(l[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.886227),e.addScaledVector(l[1],2*.511664*i),e.addScaledVector(l[2],2*.511664*r),e.addScaledVector(l[3],2*.511664*n),e.addScaledVector(l[4],2*.429043*n*i),e.addScaledVector(l[5],2*.429043*i*r),e.addScaledVector(l[6],.743125*r*r-.247708),e.addScaledVector(l[7],2*.429043*n*r),e.addScaledVector(l[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}class pS extends xa{constructor(t=new dS,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class Ef extends oi{constructor(t){super(t),this.textures={}}load(t,e,n,i){const r=this,l=new Vs(r.manager);l.setPath(r.path),l.setRequestHeader(r.requestHeader),l.setWithCredentials(r.withCredentials),l.load(t,function(c){try{e(r.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),r.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(r){return e[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),e[r]}const i=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=t.sheen),t.sheenColor!==void 0&&(i.sheenColor=new Xt().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(i.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.specularIntensity!==void 0&&(i.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(i.dispersion=t.dispersion),t.iridescence!==void 0&&(i.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(i.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(i.transmission=t.transmission),t.thickness!==void 0&&(i.thickness=t.thickness),t.attenuationDistance!==void 0&&(i.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(i.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(i.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.shadowSide!==void 0&&(i.shadowSide=t.shadowSide),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(i.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(i.depthFunc=t.depthFunc),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(i.blendSrc=t.blendSrc),t.blendDst!==void 0&&(i.blendDst=t.blendDst),t.blendEquation!==void 0&&(i.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(i.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(i.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==void 0&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(i.dithering=t.dithering),t.alphaToCoverage!==void 0&&(i.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(i.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const r in t.uniforms){const l=t.uniforms[r];switch(i.uniforms[r]={},l.type){case"t":i.uniforms[r].value=n(l.value);break;case"c":i.uniforms[r].value=new Xt().setHex(l.value);break;case"v2":i.uniforms[r].value=new dt().fromArray(l.value);break;case"v3":i.uniforms[r].value=new I().fromArray(l.value);break;case"v4":i.uniforms[r].value=new Pe().fromArray(l.value);break;case"m3":i.uniforms[r].value=new ve().fromArray(l.value);break;case"m4":i.uniforms[r].value=new de().fromArray(l.value);break;default:i.uniforms[r].value=l.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(i.glslVersion=t.glslVersion),t.extensions!==void 0)for(const r in t.extensions)i.extensions[r]=t.extensions[r];if(t.lights!==void 0&&(i.lights=t.lights),t.clipping!==void 0&&(i.clipping=t.clipping),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let r=t.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new dt().fromArray(r)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(i.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapRotation!==void 0&&i.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new dt().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(i.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(i.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(i.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(i.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return Ef.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:Yx,SpriteMaterial:km,RawShaderMaterial:Zx,ShaderMaterial:Ki,PointsMaterial:Xm,MeshPhysicalMaterial:jx,MeshStandardMaterial:tg,MeshPhongMaterial:Kx,MeshToonMaterial:Jx,MeshNormalMaterial:Qx,MeshLambertMaterial:$x,MeshDepthMaterial:eg,MeshDistanceMaterial:ng,MeshBasicMaterial:_a,MeshMatcapMaterial:tS,LineDashedMaterial:eS,LineBasicMaterial:$n,Material:kn};return new e[t]}}class dm{static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class mS extends xe{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class gS extends oi{constructor(t){super(t)}load(t,e,n,i){const r=this,l=new Vs(r.manager);l.setPath(r.path),l.setRequestHeader(r.requestHeader),l.setWithCredentials(r.withCredentials),l.load(t,function(c){try{e(r.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),r.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(v,x){if(e[x]!==void 0)return e[x];const S=v.interleavedBuffers[x],_=r(v,S.buffer),E=_o(S.type,_),A=new of(E,S.stride);return A.uuid=S.uuid,e[x]=A,A}function r(v,x){if(n[x]!==void 0)return n[x];const S=v.arrayBuffers[x],_=new Uint32Array(S).buffer;return n[x]=_,_}const l=t.isInstancedBufferGeometry?new mS:new xe,c=t.data.index;if(c!==void 0){const v=_o(c.type,c.array);l.setIndex(new Xe(v,1))}const h=t.data.attributes;for(const v in h){const x=h[v];let b;if(x.isInterleavedBufferAttribute){const S=i(t.data,x.data);b=new dr(S,x.itemSize,x.offset,x.normalized)}else{const S=_o(x.type,x.array),_=x.isInstancedBufferAttribute?No:Xe;b=new _(S,x.itemSize,x.normalized)}x.name!==void 0&&(b.name=x.name),x.usage!==void 0&&b.setUsage(x.usage),l.setAttribute(v,b)}const f=t.data.morphAttributes;if(f)for(const v in f){const x=f[v],b=[];for(let S=0,_=x.length;S<_;S++){const E=x[S];let A;if(E.isInterleavedBufferAttribute){const T=i(t.data,E.data);A=new dr(T,E.itemSize,E.offset,E.normalized)}else{const T=_o(E.type,E.array);A=new Xe(T,E.itemSize,E.normalized)}E.name!==void 0&&(A.name=E.name),b.push(A)}l.morphAttributes[v]=b}t.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const m=t.data.groups||t.data.drawcalls||t.data.offsets;if(m!==void 0)for(let v=0,x=m.length;v!==x;++v){const b=m[v];l.addGroup(b.start,b.count,b.materialIndex)}const g=t.data.boundingSphere;return g!==void 0&&(l.boundingSphere=new Rn().fromJSON(g)),t.name&&(l.name=t.name),t.userData&&(l.userData=t.userData),l}}class XT extends oi{constructor(t){super(t)}load(t,e,n,i){const r=this,l=this.path===""?dm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||l;const c=new Vs(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(t,function(h){let f=null;try{f=JSON.parse(h)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+t+".",m.message);return}const p=f.metadata;if(p===void 0||p.type===void 0||p.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}r.parse(f,e)},n,i)}async loadAsync(t,e){const n=this,i=this.path===""?dm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const r=new Vs(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const l=await r.loadAsync(t,e),c=JSON.parse(l),h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(c)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,i),l=this.parseImages(t.images,function(){e!==void 0&&e(f)}),c=this.parseTextures(t.textures,l),h=this.parseMaterials(t.materials,c),f=this.parseObject(t.object,r,h,c,n),p=this.parseSkeletons(t.skeletons,f);if(this.bindSkeletons(f,p),this.bindLightTargets(f),e!==void 0){let m=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){m=!0;break}m===!1&&e(f)}return f}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),r=await this.parseImagesAsync(t.images),l=this.parseTextures(t.textures,r),c=this.parseMaterials(t.materials,l),h=this.parseObject(t.object,i,c,l,e),f=this.parseSkeletons(t.skeletons,h);return this.bindSkeletons(h,f),this.bindLightTargets(h),h}parseShapes(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const r=new hr().fromJSON(t[n]);e[r.uuid]=r}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),t!==void 0)for(let r=0,l=t.length;r<l;r++){const c=new lf().fromJSON(t[r],i);n[c.uuid]=c}return n}parseGeometries(t,e){const n={};if(t!==void 0){const i=new gS;for(let r=0,l=t.length;r<l;r++){let c;const h=t[r];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(h);break;default:h.type in m_?c=m_[h.type].fromJSON(h,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}c.uuid=h.uuid,h.name!==void 0&&(c.name=h.name),h.userData!==void 0&&(c.userData=h.userData),n[h.uuid]=c}}return n}parseMaterials(t,e){const n={},i={};if(t!==void 0){const r=new Ef;r.setTextures(e);for(let l=0,c=t.length;l<c;l++){const h=t[l];n[h.uuid]===void 0&&(n[h.uuid]=r.parse(h)),i[h.uuid]=n[h.uuid]}}return i}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const i=t[n],r=nc.parse(i);e[r.uuid]=r}return e}parseImages(t,e){const n=this,i={};let r;function l(h){return n.manager.itemStart(h),r.load(h,function(){n.manager.itemEnd(h)},void 0,function(){n.manager.itemError(h),n.manager.itemEnd(h)})}function c(h){if(typeof h=="string"){const f=h,p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return l(p)}else return h.data?{data:_o(h.type,h.data),width:h.width,height:h.height}:null}if(t!==void 0&&t.length>0){const h=new rg(e);r=new ic(h),r.setCrossOrigin(this.crossOrigin);for(let f=0,p=t.length;f<p;f++){const m=t[f],g=m.url;if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x],_=c(S);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new ls(_.data,_.width,_.height)))}i[m.uuid]=new da(v)}else{const v=c(m.url);i[m.uuid]=new da(v)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function r(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:e.resourcePath+c;return await i.loadAsync(h)}else return l.data?{data:_o(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){i=new ic(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=t.length;l<c;l++){const h=t[l],f=h.url;if(Array.isArray(f)){const p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m],x=await r(v);x!==null&&(x instanceof HTMLImageElement?p.push(x):p.push(new ls(x.data,x.width,x.height)))}n[h.uuid]=new da(p)}else{const p=await r(h.url);n[h.uuid]=new da(p)}}}return n}parseTextures(t,e){function n(r,l){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),l[r])}const i={};if(t!==void 0)for(let r=0,l=t.length;r<l;r++){const c=t[r];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),e[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const h=e[c.image],f=h.data;let p;Array.isArray(f)?(p=new oc,f.length===6&&(p.needsUpdate=!0)):(f&&f.data?p=new ls:p=new ln,f&&(p.needsUpdate=!0)),p.source=h,p.uuid=c.uuid,c.name!==void 0&&(p.name=c.name),c.mapping!==void 0&&(p.mapping=n(c.mapping,qT)),c.channel!==void 0&&(p.channel=c.channel),c.offset!==void 0&&p.offset.fromArray(c.offset),c.repeat!==void 0&&p.repeat.fromArray(c.repeat),c.center!==void 0&&p.center.fromArray(c.center),c.rotation!==void 0&&(p.rotation=c.rotation),c.wrap!==void 0&&(p.wrapS=n(c.wrap[0],y_),p.wrapT=n(c.wrap[1],y_)),c.format!==void 0&&(p.format=c.format),c.internalFormat!==void 0&&(p.internalFormat=c.internalFormat),c.type!==void 0&&(p.type=c.type),c.colorSpace!==void 0&&(p.colorSpace=c.colorSpace),c.minFilter!==void 0&&(p.minFilter=n(c.minFilter,x_)),c.magFilter!==void 0&&(p.magFilter=n(c.magFilter,x_)),c.anisotropy!==void 0&&(p.anisotropy=c.anisotropy),c.flipY!==void 0&&(p.flipY=c.flipY),c.generateMipmaps!==void 0&&(p.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(p.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(p.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(p.compareFunction=c.compareFunction),c.userData!==void 0&&(p.userData=c.userData),i[c.uuid]=p}return i}parseObject(t,e,n,i,r){let l;function c(g){return e[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),e[g]}function h(g){if(g!==void 0){if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),v.push(n[S])}return v}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}function f(g){return i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),i[g]}let p,m;switch(t.type){case"Scene":l=new Gm,t.background!==void 0&&(Number.isInteger(t.background)?l.background=new Xt(t.background):l.background=f(t.background)),t.environment!==void 0&&(l.environment=f(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?l.fog=new rf(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(l.fog=new af(t.fog.color,t.fog.density)),t.fog.name!==""&&(l.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(l.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(l.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&l.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":l=new en(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(l.focus=t.focus),t.zoom!==void 0&&(l.zoom=t.zoom),t.filmGauge!==void 0&&(l.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(l.filmOffset=t.filmOffset),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"OrthographicCamera":l=new cs(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(l.zoom=t.zoom),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"AmbientLight":l=new hS(t.color,t.intensity);break;case"DirectionalLight":l=new uS(t.color,t.intensity),l.target=t.target||"";break;case"PointLight":l=new cS(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":l=new fS(t.color,t.intensity,t.width,t.height);break;case"SpotLight":l=new lS(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),l.target=t.target||"";break;case"HemisphereLight":l=new oS(t.color,t.groundColor,t.intensity);break;case"LightProbe":l=new pS().fromJSON(t);break;case"SkinnedMesh":p=c(t.geometry),m=h(t.material),l=new Dx(p,m),t.bindMode!==void 0&&(l.bindMode=t.bindMode),t.bindMatrix!==void 0&&l.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(l.skeleton=t.skeleton);break;case"Mesh":p=c(t.geometry),m=h(t.material),l=new dn(p,m);break;case"InstancedMesh":p=c(t.geometry),m=h(t.material);const g=t.count,v=t.instanceMatrix,x=t.instanceColor;l=new Nx(p,m,g),l.instanceMatrix=new No(new Float32Array(v.array),16),x!==void 0&&(l.instanceColor=new No(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":p=c(t.geometry),m=h(t.material),l=new Ux(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,m),l.geometry=p,l.perObjectFrustumCulled=t.perObjectFrustumCulled,l.sortObjects=t.sortObjects,l._drawRanges=t.drawRanges,l._reservedRanges=t.reservedRanges,l._geometryInfo=t.geometryInfo.map(b=>{let S=null,_=null;return b.boundingBox!==void 0&&(S=new Gn().fromJSON(b.boundingBox)),b.boundingSphere!==void 0&&(_=new Rn().fromJSON(b.boundingSphere)),{...b,boundingBox:S,boundingSphere:_}}),l._instanceInfo=t.instanceInfo,l._availableInstanceIds=t._availableInstanceIds,l._availableGeometryIds=t._availableGeometryIds,l._nextIndexStart=t.nextIndexStart,l._nextVertexStart=t.nextVertexStart,l._geometryCount=t.geometryCount,l._maxInstanceCount=t.maxInstanceCount,l._maxVertexCount=t.maxVertexCount,l._maxIndexCount=t.maxIndexCount,l._geometryInitialized=t.geometryInitialized,l._matricesTexture=f(t.matricesTexture.uuid),l._indirectTexture=f(t.indirectTexture.uuid),t.colorsTexture!==void 0&&(l._colorsTexture=f(t.colorsTexture.uuid)),t.boundingSphere!==void 0&&(l.boundingSphere=new Rn().fromJSON(t.boundingSphere)),t.boundingBox!==void 0&&(l.boundingBox=new Gn().fromJSON(t.boundingBox));break;case"LOD":l=new Rx;break;case"Line":l=new ga(c(t.geometry),h(t.material));break;case"LineLoop":l=new Px(c(t.geometry),h(t.material));break;case"LineSegments":l=new fs(c(t.geometry),h(t.material));break;case"PointCloud":case"Points":l=new Lx(c(t.geometry),h(t.material));break;case"Sprite":l=new Cx(h(t.material));break;case"Group":l=new yo;break;case"Bone":l=new Wm;break;default:l=new Le}if(l.uuid=t.uuid,t.name!==void 0&&(l.name=t.name),t.matrix!==void 0?(l.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=t.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(t.position!==void 0&&l.position.fromArray(t.position),t.rotation!==void 0&&l.rotation.fromArray(t.rotation),t.quaternion!==void 0&&l.quaternion.fromArray(t.quaternion),t.scale!==void 0&&l.scale.fromArray(t.scale)),t.up!==void 0&&l.up.fromArray(t.up),t.castShadow!==void 0&&(l.castShadow=t.castShadow),t.receiveShadow!==void 0&&(l.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(l.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(l.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(l.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(l.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(l.visible=t.visible),t.frustumCulled!==void 0&&(l.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(l.renderOrder=t.renderOrder),t.userData!==void 0&&(l.userData=t.userData),t.layers!==void 0&&(l.layers.mask=t.layers),t.children!==void 0){const g=t.children;for(let v=0;v<g.length;v++)l.add(this.parseObject(g[v],e,n,i,r))}if(t.animations!==void 0){const g=t.animations;for(let v=0;v<g.length;v++){const x=g[v];l.animations.push(r[x])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(l.autoUpdate=t.autoUpdate);const g=t.levels;for(let v=0;v<g.length;v++){const x=g[v],b=l.getObjectByProperty("uuid",x.object);b!==void 0&&l.addLevel(b,x.distance,x.hysteresis)}}return l}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=e[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);i!==void 0?e.target=i:e.target=new Le}})}}const qT={UVMapping:Yh,CubeReflectionMapping:Fs,CubeRefractionMapping:pa,EquirectangularReflectionMapping:Vl,EquirectangularRefractionMapping:Gl,CubeUVReflectionMapping:Lo},y_={RepeatWrapping:kl,ClampToEdgeWrapping:Li,MirroredRepeatWrapping:Wl},x_={NearestFilter:Cn,NearestMipmapNearestFilter:Cm,NearestMipmapLinearFilter:vo,LinearFilter:mn,LinearMipmapNearestFilter:Ul,LinearMipmapLinearFilter:as},Cp=new WeakMap;class YT extends oi{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,l=rs.get(`image-bitmap:${t}`);if(l!==void 0){if(r.manager.itemStart(t),l.then){l.then(f=>{if(Cp.has(l)===!0)i&&i(Cp.get(l)),r.manager.itemError(t),r.manager.itemEnd(t);else return e&&e(f),r.manager.itemEnd(t),f});return}return setTimeout(function(){e&&e(l),r.manager.itemEnd(t)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,c.signal=typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const h=fetch(t,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(f){return rs.add(`image-bitmap:${t}`,f),e&&e(f),r.manager.itemEnd(t),f}).catch(function(f){i&&i(f),Cp.set(h,f),rs.remove(`image-bitmap:${t}`),r.manager.itemError(t),r.manager.itemEnd(t)});rs.add(`image-bitmap:${t}`,h),r.manager.itemStart(t)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}let Lu;class lg{static getContext(){return Lu===void 0&&(Lu=new(window.AudioContext||window.webkitAudioContext)),Lu}static setContext(t){Lu=t}}class ZT extends oi{constructor(t){super(t)}load(t,e,n,i){const r=this,l=new Vs(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(h){try{const f=h.slice(0);lg.getContext().decodeAudioData(f,function(m){e(m)}).catch(c)}catch(f){c(f)}},n,i);function c(h){i?i(h):console.error(h),r.manager.itemError(t)}}}const S_=new de,M_=new de,qa=new de;class jT{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new en,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new en,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,qa.copy(t.projectionMatrix);const i=e.eyeSep/2,r=i*e.near/e.focus,l=e.near*Math.tan(ur*e.fov*.5)/e.zoom;let c,h;M_.elements[12]=-i,S_.elements[12]=i,c=-l*e.aspect+r,h=l*e.aspect+r,qa.elements[0]=2*e.near/(h-c),qa.elements[8]=(h+c)/(h-c),this.cameraL.projectionMatrix.copy(qa),c=-l*e.aspect-r,h=l*e.aspect-r,qa.elements[0]=2*e.near/(h-c),qa.elements[8]=(h+c)/(h-c),this.cameraR.projectionMatrix.copy(qa)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(M_),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(S_)}}class vS extends en{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class cg{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=performance.now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}const Ya=new I,Rp=new Vn,KT=new I,Za=new I,ja=new I;class JT extends Le{constructor(){super(),this.type="AudioListener",this.context=lg.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new cg}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ya,Rp,KT),Za.set(0,0,-1).applyQuaternion(Rp),ja.set(0,1,0).applyQuaternion(Rp),e.positionX){const n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Ya.x,n),e.positionY.linearRampToValueAtTime(Ya.y,n),e.positionZ.linearRampToValueAtTime(Ya.z,n),e.forwardX.linearRampToValueAtTime(Za.x,n),e.forwardY.linearRampToValueAtTime(Za.y,n),e.forwardZ.linearRampToValueAtTime(Za.z,n),e.upX.linearRampToValueAtTime(ja.x,n),e.upY.linearRampToValueAtTime(ja.y,n),e.upZ.linearRampToValueAtTime(ja.z,n)}else e.setPosition(Ya.x,Ya.y,Ya.z),e.setOrientation(Za.x,Za.y,Za.z,ja.x,ja.y,ja.z)}}class _S extends Le{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const Ka=new I,b_=new Vn,QT=new I,Ja=new I;class $T extends _S{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ka,b_,QT),Ja.set(0,0,1).applyQuaternion(b_);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Ka.x,n),e.positionY.linearRampToValueAtTime(Ka.y,n),e.positionZ.linearRampToValueAtTime(Ka.z,n),e.orientationX.linearRampToValueAtTime(Ja.x,n),e.orientationY.linearRampToValueAtTime(Ja.y,n),e.orientationZ.linearRampToValueAtTime(Ja.z,n)}else e.setPosition(Ka.x,Ka.y,Ka.z),e.setOrientation(Ja.x,Ja.y,Ja.z)}}class tA{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class yS{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,r,l;switch(e){case"quaternion":i=this._slerp,r=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[r+c]=n[c];l=e}else{l+=e;const c=e/l;this._mixBufferRegion(n,r,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const h=e*this._origIndex;this._mixBufferRegion(n,i,h,1-r,e)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let h=e,f=e+e;h!==f;++h)if(n[h]!==n[h+e]){c.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let r=n,l=i;r!==l;++r)e[r]=e[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,r){if(i>=.5)for(let l=0;l!==r;++l)t[e+l]=t[n+l]}_slerp(t,e,n,i){Vn.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,r){const l=this._workIndex*r;Vn.multiplyQuaternionsFlat(t,l,t,e,t,n),Vn.slerpFlat(t,e,t,e,t,l,i)}_lerp(t,e,n,i,r){const l=1-i;for(let c=0;c!==r;++c){const h=e+c;t[h]=t[h]*l+t[n+c]*i}}_lerpAdditive(t,e,n,i,r){for(let l=0;l!==r;++l){const c=e+l;t[c]=t[c]+t[n+l]*i}}}const ug="\\[\\]\\.:\\/",eA=new RegExp("["+ug+"]","g"),hg="[^"+ug+"]",nA="[^"+ug.replace("\\.","")+"]",iA=/((?:WC+[\/:])*)/.source.replace("WC",hg),sA=/(WCOD+)?/.source.replace("WCOD",nA),aA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",hg),rA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",hg),oA=new RegExp("^"+iA+sA+aA+rA+"$"),lA=["material","materials","bones","map"];class cA{constructor(t,e,n){const i=n||Ue.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Ue{constructor(t,e,n){this.path=e,this.parsedPath=n||Ue.parseTrackName(e),this.node=Ue.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Ue.Composite(t,e,n):new Ue(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(eA,"")}static parseTrackName(t){const e=oA.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);lA.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(r){for(let l=0;l<r.length;l++){const c=r[l];if(c.name===e||c.uuid===e)return c;const h=n(c.children);if(h)return h}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=Ue.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let p=0;p<t.length;p++)if(t[p].name===f){f=p;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(f!==void 0){if(t[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[f]}}const l=t[i];if(l===void 0){const f=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+i+" but it wasn't found.",t);return}let c=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?c=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[r]!==void 0&&(r=t.morphTargetDictionary[r])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=r}else l.fromArray!==void 0&&l.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ue.Composite=cA;Ue.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ue.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ue.prototype.GetterByBindingType=[Ue.prototype._getValue_direct,Ue.prototype._getValue_array,Ue.prototype._getValue_arrayElement,Ue.prototype._getValue_toArray];Ue.prototype.SetterByBindingTypeAndVersioning=[[Ue.prototype._setValue_direct,Ue.prototype._setValue_direct_setNeedsUpdate,Ue.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ue.prototype._setValue_array,Ue.prototype._setValue_array_setNeedsUpdate,Ue.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ue.prototype._setValue_arrayElement,Ue.prototype._setValue_arrayElement_setNeedsUpdate,Ue.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ue.prototype._setValue_fromArray,Ue.prototype._setValue_fromArray_setNeedsUpdate,Ue.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class uA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Mi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,l=r.length;let c,h=t.length,f=this.nCachedObjects_;for(let p=0,m=arguments.length;p!==m;++p){const g=arguments[p],v=g.uuid;let x=e[v];if(x===void 0){x=h++,e[v]=x,t.push(g);for(let b=0,S=l;b!==S;++b)r[b].push(new Ue(g,n[b],i[b]))}else if(x<f){c=t[x];const b=--f,S=t[b];e[S.uuid]=x,t[x]=S,e[v]=b,t[b]=g;for(let _=0,E=l;_!==E;++_){const A=r[_],T=A[b];let N=A[x];A[x]=T,N===void 0&&(N=new Ue(g,n[_],i[_])),A[b]=N}}else t[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const h=arguments[l],f=h.uuid,p=e[f];if(p!==void 0&&p>=r){const m=r++,g=t[m];e[g.uuid]=p,t[p]=g,e[f]=m,t[m]=h;for(let v=0,x=i;v!==x;++v){const b=n[v],S=b[m],_=b[p];b[p]=S,b[m]=_}}}this.nCachedObjects_=r}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,l=t.length;for(let c=0,h=arguments.length;c!==h;++c){const f=arguments[c],p=f.uuid,m=e[p];if(m!==void 0)if(delete e[p],m<r){const g=--r,v=t[g],x=--l,b=t[x];e[v.uuid]=m,t[m]=v,e[b.uuid]=g,t[g]=b,t.pop();for(let S=0,_=i;S!==_;++S){const E=n[S],A=E[g],T=E[x];E[m]=A,E[g]=T,E.pop()}}else{const g=--l,v=t[g];g>0&&(e[v.uuid]=m),t[m]=v,t.pop();for(let x=0,b=i;x!==b;++x){const S=n[x];S[m]=S[g],S.pop()}}}this.nCachedObjects_=r}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const r=this._bindings;if(i!==void 0)return r[i];const l=this._paths,c=this._parsedPaths,h=this._objects,f=h.length,p=this.nCachedObjects_,m=new Array(f);i=r.length,n[t]=i,l.push(t),c.push(e),r.push(m);for(let g=p,v=h.length;g!==v;++g){const x=h[g];m[g]=new Ue(x,t,e)}return m}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,r=this._parsedPaths,l=this._bindings,c=l.length-1,h=l[c],f=t[c];e[f]=n,l[n]=h,l.pop(),r[n]=r[c],r.pop(),i[n]=i[c],i.pop()}}}class xS{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const r=e.tracks,l=r.length,c=new Array(l),h={endingStart:ar,endingEnd:ar};for(let f=0;f!==l;++f){const p=r[f].createInterpolant(null);c[f]=p,p.settings=h}this._interpolantSettings=h,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ox,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),n===!0){const i=this._clip.duration,r=t._clip.duration,l=r/i,c=i/r;t.warp(1,l,e),this.warp(c,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const h=c.parameterPositions,f=c.sampleValues;return h[0]=r,h[1]=r+n,f[0]=t/l,f[1]=e/l,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const r=this._startTime;if(r!==null){const h=(t-r)*n;h<0||n===0?e=0:(this._startTime=null,e=n*h)}e*=this._updateTimeScale(t);const l=this._updateTime(e),c=this._updateWeight(t);if(c>0){const h=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case Om:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulateAdditive(c);break;case tf:default:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulate(i,c)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,r=this._loopCount;const l=n===lx;if(t===0)return r===-1?i:l&&(r&1)===1?e-i:i;if(n===rx){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(r===-1&&(t>=0?(r=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=e||i<0){const c=Math.floor(i/e);i-=e*c,r+=Math.abs(c);const h=this.repetitions-r;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(h===1){const f=t<0;this._setEndings(f,!f,l)}else this._setEndings(!1,!1,l);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(r&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=rr,i.endingEnd=rr):(t?i.endingStart=this.zeroSlopeAtStart?rr:ar:i.endingStart=ql,e?i.endingEnd=this.zeroSlopeAtEnd?rr:ar:i.endingEnd=ql)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,h=l.sampleValues;return c[0]=r,h[0]=e,c[1]=r+t,h[1]=n,this}}const hA=new Float32Array(1);class fA extends hs{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,l=t._propertyBindings,c=t._interpolants,h=n.uuid,f=this._bindingsByRootAndName;let p=f[h];p===void 0&&(p={},f[h]=p);for(let m=0;m!==r;++m){const g=i[m],v=g.name;let x=p[v];if(x!==void 0)++x.referenceCount,l[m]=x;else{if(x=l[m],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,h,v));continue}const b=e&&e._propertyBindings[m].binding.parsedPath;x=new yS(Ue.create(n,v,b),g.ValueTypeName,g.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,h,v),l[m]=x}c[m].resultBuffer=x.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,r=this._actionsByClip[i];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,r=this._actionsByClip;let l=r[e];if(l===void 0)l={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=l;else{const c=l.knownActions;t._byClipCacheIndex=c.length,c.push(t)}t._cacheIndex=i.length,i.push(t),l.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,l=this._actionsByClip,c=l[r],h=c.knownActions,f=h[h.length-1],p=t._byClipCacheIndex;f._byClipCacheIndex=p,h[p]=f,h.pop(),t._byClipCacheIndex=null;const m=c.actionByRoot,g=(t._localRoot||this._root).uuid;delete m[g],h.length===0&&delete l[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let l=i[e];l===void 0&&(l={},i[e]=l),l[n]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,l=this._bindingsByRootAndName,c=l[i],h=e[e.length-1],f=t._cacheIndex;h._cacheIndex=f,e[f]=h,e.pop(),delete c[r],Object.keys(c).length===0&&delete l[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new sg(new Float32Array(2),new Float32Array(2),1,hA),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r}clipAction(t,e,n){const i=e||this._root,r=i.uuid;let l=typeof t=="string"?nc.findByName(i,t):t;const c=l!==null?l.uuid:t,h=this._actionsByClip[c];let f=null;if(n===void 0&&(l!==null?n=l.blendMode:n=tf),h!==void 0){const m=h.actionByRoot[r];if(m!==void 0&&m.blendMode===n)return m;f=h.knownActions[0],l===null&&(l=f._clip)}if(l===null)return null;const p=new xS(this,l,e,n);return this._bindAction(p,f),this._addInactiveAction(p,c,r),p}existingAction(t,e){const n=e||this._root,i=n.uuid,r=typeof t=="string"?nc.findByName(n,t):t,l=r?r.uuid:t,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),l=this._accuIndex^=1;for(let f=0;f!==n;++f)e[f]._update(i,t,r,l);const c=this._bindings,h=this._nActiveBindings;for(let f=0;f!==h;++f)c[f].apply(l);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const l=r.knownActions;for(let c=0,h=l.length;c!==h;++c){const f=l[c];this._deactivateAction(f);const p=f._cacheIndex,m=e[e.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=p,e[p]=m,e.pop(),this._removeInactiveBindingsForAction(f)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,h=c[e];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const i=this._bindingsByRootAndName,r=i[e];if(r!==void 0)for(const l in r){const c=r[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class dA extends Fm{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new nf(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class fg{constructor(t){this.value=t}clone(){return new fg(this.value.clone===void 0?this.value:this.value.clone())}}let pA=0;class mA extends hs{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:pA++}),this.name="",this.usage=Zl,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++){const r=Array.isArray(e[n])?e[n]:[e[n]];for(let l=0;l<r.length;l++)this.uniforms.push(r[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class gA extends of{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class vA{constructor(t,e,n,i,r,l=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.normalized=l,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const E_=new de;class SS{constructor(t,e,n=0,i=1/0){this.ray=new gr(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Ro,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return E_.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(E_),this}intersectObject(t,e=!0,n=[]){return pm(t,this,n,e),n.sort(T_),n}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)pm(t[i],this,n,e);return n.sort(T_),n}}function T_(s,t){return s.distance-t.distance}function pm(s,t,e,n){let i=!0;if(s.layers.test(t.layers)&&s.raycast(t,e)===!1&&(i=!1),i===!0&&n===!0){const r=s.children;for(let l=0,c=r.length;l<c;l++)pm(r[l],t,e,!0)}}class _A{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=performance.now(),this._delta=0,this._elapsed=0,this._timescale=1,this._document=null,this._pageVisibilityHandler=null}connect(t){this._document=t,t.hidden!==void 0&&(this._pageVisibilityHandler=yA.bind(this),t.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}disconnect(){this._pageVisibilityHandler!==null&&(this._document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this._pageVisibilityHandler=null),this._document=null}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(t){return this._timescale=t,this}reset(){return this._currentTime=performance.now()-this._startTime,this}dispose(){this.disconnect()}update(t){return this._pageVisibilityHandler!==null&&this._document.hidden===!0?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(t!==void 0?t:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}}function yA(){this._document.hidden===!1&&this.reset()}class mm{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=fe(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(fe(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class xA{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class dg{constructor(t,e,n,i){dg.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const r=this.elements;return r[0]=t,r[2]=e,r[1]=n,r[3]=i,this}}const A_=new dt;class SA{constructor(t=new dt(1/0,1/0),e=new dt(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=A_.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,A_).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const w_=new I,Iu=new I,uo=new I,ho=new I,Dp=new I,MA=new I,bA=new I;class EA{constructor(t=new I,e=new I){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){w_.subVectors(t,this.start),Iu.subVectors(this.end,this.start);const n=Iu.dot(Iu);let r=Iu.dot(w_)/n;return e&&(r=fe(r,0,1)),r}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}distanceSqToLine3(t,e=MA,n=bA){const i=10000000000000001e-32;let r,l;const c=this.start,h=t.start,f=this.end,p=t.end;uo.subVectors(f,c),ho.subVectors(p,h),Dp.subVectors(c,h);const m=uo.dot(uo),g=ho.dot(ho),v=ho.dot(Dp);if(m<=i&&g<=i)return e.copy(c),n.copy(h),e.sub(n),e.dot(e);if(m<=i)r=0,l=v/g,l=fe(l,0,1);else{const x=uo.dot(Dp);if(g<=i)l=0,r=fe(-x/m,0,1);else{const b=uo.dot(ho),S=m*g-b*b;S!==0?r=fe((b*v-x*g)/S,0,1):r=0,l=(b*r+v)/g,l<0?(l=0,r=fe(-x/m,0,1)):l>1&&(l=1,r=fe((b-x)/m,0,1))}}return e.copy(c).add(uo.multiplyScalar(r)),n.copy(h).add(ho.multiplyScalar(l)),e.sub(n),e.dot(e)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const C_=new I;class TA extends Le{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new xe,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,h=32;l<h;l++,c++){const f=l/h*Math.PI*2,p=c/h*Math.PI*2;i.push(Math.cos(f),Math.sin(f),1,Math.cos(p),Math.sin(p),1)}n.setAttribute("position",new $t(i,3));const r=new $n({fog:!1,toneMapped:!1});this.cone=new fs(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),C_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(C_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ua=new I,Ou=new de,Np=new de;class AA extends fs{constructor(t){const e=MS(t),n=new xe,i=[],r=[];for(let f=0;f<e.length;f++){const p=e[f];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(0,0,0),r.push(0,0,0))}n.setAttribute("position",new $t(i,3)),n.setAttribute("color",new $t(r,3));const l=new $n({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1;const c=new Xt(255),h=new Xt(65280);this.setColors(c,h)}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Np.copy(this.root.matrixWorld).invert();for(let r=0,l=0;r<e.length;r++){const c=e[r];c.parent&&c.parent.isBone&&(Ou.multiplyMatrices(Np,c.matrixWorld),ua.setFromMatrixPosition(Ou),i.setXYZ(l,ua.x,ua.y,ua.z),Ou.multiplyMatrices(Np,c.parent.matrixWorld),ua.setFromMatrixPosition(Ou),i.setXYZ(l+1,ua.x,ua.y,ua.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}setColors(t,e){const i=this.geometry.getAttribute("color");for(let r=0;r<i.count;r+=2)i.setXYZ(r,t.r,t.g,t.b),i.setXYZ(r+1,e.r,e.g,e.b);return i.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}function MS(s){const t=[];s.isBone===!0&&t.push(s);for(let e=0;e<s.children.length;e++)t.push(...MS(s.children[e]));return t}class wA extends dn{constructor(t,e,n){const i=new hc(e,4,2),r=new _a({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const CA=new I,R_=new Xt,D_=new Xt;class RA extends Le{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new uc(e);i.rotateY(Math.PI*.5),this.material=new _a({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),l=new Float32Array(r.count*3);i.setAttribute("color",new Xe(l,3)),this.add(new dn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");R_.copy(this.light.color),D_.copy(this.light.groundColor);for(let n=0,i=e.count;n<i;n++){const r=n<i/2?R_:D_;e.setXYZ(n,r.r,r.g,r.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(CA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class DA extends fs{constructor(t=10,e=10,n=4473924,i=8947848){n=new Xt(n),i=new Xt(i);const r=e/2,l=t/e,c=t/2,h=[],f=[];for(let g=0,v=0,x=-c;g<=e;g++,x+=l){h.push(-c,0,x,c,0,x),h.push(x,0,-c,x,0,c);const b=g===r?n:i;b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3}const p=new xe;p.setAttribute("position",new $t(h,3)),p.setAttribute("color",new $t(f,3));const m=new $n({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class NA extends fs{constructor(t=10,e=16,n=8,i=64,r=4473924,l=8947848){r=new Xt(r),l=new Xt(l);const c=[],h=[];if(e>1)for(let m=0;m<e;m++){const g=m/e*(Math.PI*2),v=Math.sin(g)*t,x=Math.cos(g)*t;c.push(0,0,0),c.push(v,0,x);const b=m&1?r:l;h.push(b.r,b.g,b.b),h.push(b.r,b.g,b.b)}for(let m=0;m<n;m++){const g=m&1?r:l,v=t-t/n*m;for(let x=0;x<i;x++){let b=x/i*(Math.PI*2),S=Math.sin(b)*v,_=Math.cos(b)*v;c.push(S,0,_),h.push(g.r,g.g,g.b),b=(x+1)/i*(Math.PI*2),S=Math.sin(b)*v,_=Math.cos(b)*v,c.push(S,0,_),h.push(g.r,g.g,g.b)}}const f=new xe;f.setAttribute("position",new $t(c,3)),f.setAttribute("color",new $t(h,3));const p=new $n({vertexColors:!0,toneMapped:!1});super(f,p),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const N_=new I,zu=new I,U_=new I;class UA extends Le{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new xe;i.setAttribute("position",new $t([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const r=new $n({fog:!1,toneMapped:!1});this.lightPlane=new ga(i,r),this.add(this.lightPlane),i=new xe,i.setAttribute("position",new $t([0,0,0,0,0,1],3)),this.targetLine=new ga(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),N_.setFromMatrixPosition(this.light.matrixWorld),zu.setFromMatrixPosition(this.light.target.matrixWorld),U_.subVectors(zu,N_),this.lightPlane.lookAt(zu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(zu),this.targetLine.scale.z=U_.length()}}const Bu=new I,on=new sf;class PA extends fs{constructor(t){const e=new xe,n=new $n({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,b){h(x),h(b)}function h(x){i.push(0,0,0),r.push(0,0,0),l[x]===void 0&&(l[x]=[]),l[x].push(i.length/3-1)}e.setAttribute("position",new $t(i,3)),e.setAttribute("color",new $t(r,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const f=new Xt(16755200),p=new Xt(16711680),m=new Xt(43775),g=new Xt(16777215),v=new Xt(3355443);this.setColors(f,p,m,g,v)}setColors(t,e,n,i,r){const c=this.geometry.getAttribute("color");return c.setXYZ(0,t.r,t.g,t.b),c.setXYZ(1,t.r,t.g,t.b),c.setXYZ(2,t.r,t.g,t.b),c.setXYZ(3,t.r,t.g,t.b),c.setXYZ(4,t.r,t.g,t.b),c.setXYZ(5,t.r,t.g,t.b),c.setXYZ(6,t.r,t.g,t.b),c.setXYZ(7,t.r,t.g,t.b),c.setXYZ(8,t.r,t.g,t.b),c.setXYZ(9,t.r,t.g,t.b),c.setXYZ(10,t.r,t.g,t.b),c.setXYZ(11,t.r,t.g,t.b),c.setXYZ(12,t.r,t.g,t.b),c.setXYZ(13,t.r,t.g,t.b),c.setXYZ(14,t.r,t.g,t.b),c.setXYZ(15,t.r,t.g,t.b),c.setXYZ(16,t.r,t.g,t.b),c.setXYZ(17,t.r,t.g,t.b),c.setXYZ(18,t.r,t.g,t.b),c.setXYZ(19,t.r,t.g,t.b),c.setXYZ(20,t.r,t.g,t.b),c.setXYZ(21,t.r,t.g,t.b),c.setXYZ(22,t.r,t.g,t.b),c.setXYZ(23,t.r,t.g,t.b),c.setXYZ(24,e.r,e.g,e.b),c.setXYZ(25,e.r,e.g,e.b),c.setXYZ(26,e.r,e.g,e.b),c.setXYZ(27,e.r,e.g,e.b),c.setXYZ(28,e.r,e.g,e.b),c.setXYZ(29,e.r,e.g,e.b),c.setXYZ(30,e.r,e.g,e.b),c.setXYZ(31,e.r,e.g,e.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,r.r,r.g,r.b),c.setXYZ(41,r.r,r.g,r.b),c.setXYZ(42,r.r,r.g,r.b),c.setXYZ(43,r.r,r.g,r.b),c.setXYZ(44,r.r,r.g,r.b),c.setXYZ(45,r.r,r.g,r.b),c.setXYZ(46,r.r,r.g,r.b),c.setXYZ(47,r.r,r.g,r.b),c.setXYZ(48,r.r,r.g,r.b),c.setXYZ(49,r.r,r.g,r.b),c.needsUpdate=!0,this}update(){const t=this.geometry,e=this.pointMap,n=1,i=1;let r,l;if(on.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),this.camera.reversedDepth===!0)r=1,l=0;else if(this.camera.coordinateSystem===Si)r=-1,l=1;else if(this.camera.coordinateSystem===wo)r=0,l=1;else throw new Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);cn("c",e,t,on,0,0,r),cn("t",e,t,on,0,0,l),cn("n1",e,t,on,-n,-i,r),cn("n2",e,t,on,n,-i,r),cn("n3",e,t,on,-n,i,r),cn("n4",e,t,on,n,i,r),cn("f1",e,t,on,-n,-i,l),cn("f2",e,t,on,n,-i,l),cn("f3",e,t,on,-n,i,l),cn("f4",e,t,on,n,i,l),cn("u1",e,t,on,n*.7,i*1.1,r),cn("u2",e,t,on,-n*.7,i*1.1,r),cn("u3",e,t,on,0,i*2,r),cn("cf1",e,t,on,-n,0,l),cn("cf2",e,t,on,n,0,l),cn("cf3",e,t,on,0,-i,l),cn("cf4",e,t,on,0,i,l),cn("cn1",e,t,on,-n,0,r),cn("cn2",e,t,on,n,0,r),cn("cn3",e,t,on,0,-i,r),cn("cn4",e,t,on,0,i,r),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function cn(s,t,e,n,i,r,l){Bu.set(i,r,l).unproject(n);const c=t[s];if(c!==void 0){const h=e.getAttribute("position");for(let f=0,p=c.length;f<p;f++)h.setXYZ(c[f],Bu.x,Bu.y,Bu.z)}}const Fu=new Gn;class LA extends fs{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),r=new xe;r.setIndex(new Xe(n,1)),r.setAttribute("position",new Xe(i,3)),super(r,new $n({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Fu.setFromObject(this.object),Fu.isEmpty())return;const t=Fu.min,e=Fu.max,n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class IA extends fs{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new xe;r.setIndex(new Xe(n,1)),r.setAttribute("position",new $t(i,3)),super(r,new $n({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class OA extends ga{constructor(t,e=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new xe;l.setAttribute("position",new $t(r,3)),l.computeBoundingSphere(),super(l,new $n({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],h=new xe;h.setAttribute("position",new $t(c,3)),h.computeBoundingSphere(),this.add(new dn(h,new _a({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const P_=new I;let Hu,Up;class zA extends Le{constructor(t=new I(0,0,1),e=new I(0,0,0),n=1,i=16776960,r=n*.2,l=r*.2){super(),this.type="ArrowHelper",Hu===void 0&&(Hu=new xe,Hu.setAttribute("position",new $t([0,0,0,0,1,0],3)),Up=new cc(.5,1,5,1),Up.translate(0,-.5,0)),this.position.copy(e),this.line=new ga(Hu,new $n({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new dn(Up,new _a({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,l)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{P_.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(P_,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class BA extends fs{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new xe;i.setAttribute("position",new $t(e,3)),i.setAttribute("color",new $t(n,3));const r=new $n({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(t,e,n){const i=new Xt,r=this.geometry.attributes.color.array;return i.set(t),i.toArray(r,0),i.toArray(r,3),i.set(e),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class FA{constructor(){this.type="ShapePath",this.color=new Xt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Hh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,r,l){return this.currentPath.bezierCurveTo(t,e,n,i,r,l),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(_){const E=[];for(let A=0,T=_.length;A<T;A++){const N=_[A],R=new hr;R.curves=N.curves,E.push(R)}return E}function n(_,E){const A=E.length;let T=!1;for(let N=A-1,R=0;R<A;N=R++){let L=E[N],z=E[R],C=z.x-L.x,w=z.y-L.y;if(Math.abs(w)>Number.EPSILON){if(w<0&&(L=E[R],C=-C,z=E[N],w=-w),_.y<L.y||_.y>z.y)continue;if(_.y===L.y){if(_.x===L.x)return!0}else{const B=w*(_.x-L.x)-C*(_.y-L.y);if(B===0)return!0;if(B<0)continue;T=!T}}else{if(_.y!==L.y)continue;if(z.x<=_.x&&_.x<=L.x||L.x<=_.x&&_.x<=z.x)return!0}}return T}const i=ji.isClockWise,r=this.subPaths;if(r.length===0)return[];let l,c,h;const f=[];if(r.length===1)return c=r[0],h=new hr,h.curves=c.curves,f.push(h),f;let p=!i(r[0].getPoints());p=t?!p:p;const m=[],g=[];let v=[],x=0,b;g[x]=void 0,v[x]=[];for(let _=0,E=r.length;_<E;_++)c=r[_],b=c.getPoints(),l=i(b),l=t?!l:l,l?(!p&&g[x]&&x++,g[x]={s:new hr,p:b},g[x].s.curves=c.curves,p&&x++,v[x]=[]):v[x].push({h:c,p:b[0]});if(!g[0])return e(r);if(g.length>1){let _=!1,E=0;for(let A=0,T=g.length;A<T;A++)m[A]=[];for(let A=0,T=g.length;A<T;A++){const N=v[A];for(let R=0;R<N.length;R++){const L=N[R];let z=!0;for(let C=0;C<g.length;C++)n(L.p,g[C].p)&&(A!==C&&E++,z?(z=!1,m[C].push(L)):_=!0);z&&m[A].push(L)}}E>0&&_===!1&&(v=m)}let S;for(let _=0,E=g.length;_<E;_++){h=g[_].s,f.push(h),S=v[_];for(let A=0,T=S.length;A<T;A++)h.holes.push(S[A].h)}return f}}class HA extends hs{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){if(t===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=t}disconnect(){}dispose(){}update(){}}function VA(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function GA(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function kA(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function gm(s,t,e,n){const i=WA(n);switch(e){case Pm:return s*t;case Jh:return s*t/i.components*i.byteLength;case rc:return s*t/i.components*i.byteLength;case Im:return s*t*2/i.components*i.byteLength;case Qh:return s*t*2/i.components*i.byteLength;case Lm:return s*t*3/i.components*i.byteLength;case Hn:return s*t*4/i.components*i.byteLength;case $h:return s*t*4/i.components*i.byteLength;case Pl:case Ll:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case Il:case Ol:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case ch:case hh:return Math.max(s,16)*Math.max(t,8)/4;case lh:case uh:return Math.max(s,8)*Math.max(t,8)/2;case fh:case dh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case ph:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case mh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case gh:return Math.floor((s+4)/5)*Math.floor((t+3)/4)*16;case vh:return Math.floor((s+4)/5)*Math.floor((t+4)/5)*16;case _h:return Math.floor((s+5)/6)*Math.floor((t+4)/5)*16;case yh:return Math.floor((s+5)/6)*Math.floor((t+5)/6)*16;case xh:return Math.floor((s+7)/8)*Math.floor((t+4)/5)*16;case Sh:return Math.floor((s+7)/8)*Math.floor((t+5)/6)*16;case Mh:return Math.floor((s+7)/8)*Math.floor((t+7)/8)*16;case bh:return Math.floor((s+9)/10)*Math.floor((t+4)/5)*16;case Eh:return Math.floor((s+9)/10)*Math.floor((t+5)/6)*16;case Th:return Math.floor((s+9)/10)*Math.floor((t+7)/8)*16;case Ah:return Math.floor((s+9)/10)*Math.floor((t+9)/10)*16;case wh:return Math.floor((s+11)/12)*Math.floor((t+9)/10)*16;case Ch:return Math.floor((s+11)/12)*Math.floor((t+11)/12)*16;case Rh:case Dh:case Nh:return Math.ceil(s/4)*Math.ceil(t/4)*16;case Uh:case Ph:return Math.ceil(s/4)*Math.ceil(t/4)*8;case Lh:case Ih:return Math.ceil(s/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function WA(s){switch(s){case Ii:case Rm:return{byteLength:1,components:1};case bo:case Dm:case Io:return{byteLength:2,components:1};case jh:case Kh:return{byteLength:2,components:4};case Hs:case Zh:case ri:return{byteLength:4,components:1};case Nm:case Um:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class XA{static contain(t,e){return VA(t,e)}static cover(t,e){return GA(t,e)}static fill(t){return kA(t)}static getByteLength(t,e,n,i){return gm(t,e,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Xh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Xh);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function bS(){let s=null,t=!1,e=null,n=null;function i(r,l){e(r,l),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){s=r}}}function qA(s){const t=new WeakMap;function e(c,h){const f=c.array,p=c.usage,m=f.byteLength,g=s.createBuffer();s.bindBuffer(h,g),s.bufferData(h,f,p),c.onUploadCallback();let v;if(f instanceof Float32Array)v=s.FLOAT;else if(typeof Float16Array<"u"&&f instanceof Float16Array)v=s.HALF_FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=s.HALF_FLOAT:v=s.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=s.SHORT;else if(f instanceof Uint32Array)v=s.UNSIGNED_INT;else if(f instanceof Int32Array)v=s.INT;else if(f instanceof Int8Array)v=s.BYTE;else if(f instanceof Uint8Array)v=s.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:m}}function n(c,h,f){const p=h.array,m=h.updateRanges;if(s.bindBuffer(f,c),m.length===0)s.bufferSubData(f,0,p);else{m.sort((v,x)=>v.start-x.start);let g=0;for(let v=1;v<m.length;v++){const x=m[g],b=m[v];b.start<=x.start+x.count+1?x.count=Math.max(x.count,b.start+b.count-x.start):(++g,m[g]=b)}m.length=g+1;for(let v=0,x=m.length;v<x;v++){const b=m[v];s.bufferSubData(f,b.start*p.BYTES_PER_ELEMENT,p,b.start,b.count)}h.clearUpdateRanges()}h.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),t.get(c)}function r(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=t.get(c);h&&(s.deleteBuffer(h.buffer),t.delete(c))}function l(c,h){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const p=t.get(c);(!p||p.version<c.version)&&t.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=t.get(c);if(f===void 0)t.set(c,e(c,h));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,h),f.version=c.version}}return{get:i,remove:r,update:l}}var YA=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,ZA=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,jA=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,KA=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,JA=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,QA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,$A=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,tw=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,ew=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,nw=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,iw=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,sw=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,aw=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,rw=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,ow=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,lw=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,cw=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,uw=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,hw=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,fw=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,dw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,pw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,mw=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,gw=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,vw=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,_w=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,yw=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,xw=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Sw=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Mw=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,bw="gl_FragColor = linearToOutputTexel( gl_FragColor );",Ew=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Tw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Aw=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,ww=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Cw=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Rw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Dw=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Nw=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Uw=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Pw=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Lw=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Iw=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Ow=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,zw=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Bw=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Fw=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Hw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Vw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Gw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,kw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Ww=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Xw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,qw=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Yw=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Zw=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,jw=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Kw=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Jw=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Qw=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,$w=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,tC=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,eC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,nC=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,iC=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,sC=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,aC=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,rC=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,oC=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,lC=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,cC=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,uC=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,hC=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,fC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,dC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,pC=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,mC=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,gC=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,vC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,_C=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,yC=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,xC=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,SC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,MC=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,bC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,EC=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,TC=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,AC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,wC=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,CC=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow( sampler2D shadow, vec2 uv, float compare ) {
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare, distribution.x );
		#endif
		if ( hard_shadow != 1.0 ) {
			float distance = compare - distribution.x;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,RC=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,DC=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,NC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,UC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,PC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,LC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,IC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,OC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,zC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,BC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,FC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,HC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,VC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,GC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,kC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,WC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,XC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const qC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,YC=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ZC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,jC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,KC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,JC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,QC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,$C=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSED_DEPTH_BUFFER
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,tR=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,eR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,nR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,iR=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,sR=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,aR=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,rR=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,oR=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lR=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,cR=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uR=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,hR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fR=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,dR=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,pR=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,mR=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gR=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,vR=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,_R=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,yR=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xR=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,SR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,MR=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ER=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,TR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Me={alphahash_fragment:YA,alphahash_pars_fragment:ZA,alphamap_fragment:jA,alphamap_pars_fragment:KA,alphatest_fragment:JA,alphatest_pars_fragment:QA,aomap_fragment:$A,aomap_pars_fragment:tw,batching_pars_vertex:ew,batching_vertex:nw,begin_vertex:iw,beginnormal_vertex:sw,bsdfs:aw,iridescence_fragment:rw,bumpmap_pars_fragment:ow,clipping_planes_fragment:lw,clipping_planes_pars_fragment:cw,clipping_planes_pars_vertex:uw,clipping_planes_vertex:hw,color_fragment:fw,color_pars_fragment:dw,color_pars_vertex:pw,color_vertex:mw,common:gw,cube_uv_reflection_fragment:vw,defaultnormal_vertex:_w,displacementmap_pars_vertex:yw,displacementmap_vertex:xw,emissivemap_fragment:Sw,emissivemap_pars_fragment:Mw,colorspace_fragment:bw,colorspace_pars_fragment:Ew,envmap_fragment:Tw,envmap_common_pars_fragment:Aw,envmap_pars_fragment:ww,envmap_pars_vertex:Cw,envmap_physical_pars_fragment:Fw,envmap_vertex:Rw,fog_vertex:Dw,fog_pars_vertex:Nw,fog_fragment:Uw,fog_pars_fragment:Pw,gradientmap_pars_fragment:Lw,lightmap_pars_fragment:Iw,lights_lambert_fragment:Ow,lights_lambert_pars_fragment:zw,lights_pars_begin:Bw,lights_toon_fragment:Hw,lights_toon_pars_fragment:Vw,lights_phong_fragment:Gw,lights_phong_pars_fragment:kw,lights_physical_fragment:Ww,lights_physical_pars_fragment:Xw,lights_fragment_begin:qw,lights_fragment_maps:Yw,lights_fragment_end:Zw,logdepthbuf_fragment:jw,logdepthbuf_pars_fragment:Kw,logdepthbuf_pars_vertex:Jw,logdepthbuf_vertex:Qw,map_fragment:$w,map_pars_fragment:tC,map_particle_fragment:eC,map_particle_pars_fragment:nC,metalnessmap_fragment:iC,metalnessmap_pars_fragment:sC,morphinstance_vertex:aC,morphcolor_vertex:rC,morphnormal_vertex:oC,morphtarget_pars_vertex:lC,morphtarget_vertex:cC,normal_fragment_begin:uC,normal_fragment_maps:hC,normal_pars_fragment:fC,normal_pars_vertex:dC,normal_vertex:pC,normalmap_pars_fragment:mC,clearcoat_normal_fragment_begin:gC,clearcoat_normal_fragment_maps:vC,clearcoat_pars_fragment:_C,iridescence_pars_fragment:yC,opaque_fragment:xC,packing:SC,premultiplied_alpha_fragment:MC,project_vertex:bC,dithering_fragment:EC,dithering_pars_fragment:TC,roughnessmap_fragment:AC,roughnessmap_pars_fragment:wC,shadowmap_pars_fragment:CC,shadowmap_pars_vertex:RC,shadowmap_vertex:DC,shadowmask_pars_fragment:NC,skinbase_vertex:UC,skinning_pars_vertex:PC,skinning_vertex:LC,skinnormal_vertex:IC,specularmap_fragment:OC,specularmap_pars_fragment:zC,tonemapping_fragment:BC,tonemapping_pars_fragment:FC,transmission_fragment:HC,transmission_pars_fragment:VC,uv_pars_fragment:GC,uv_pars_vertex:kC,uv_vertex:WC,worldpos_vertex:XC,background_vert:qC,background_frag:YC,backgroundCube_vert:ZC,backgroundCube_frag:jC,cube_vert:KC,cube_frag:JC,depth_vert:QC,depth_frag:$C,distanceRGBA_vert:tR,distanceRGBA_frag:eR,equirect_vert:nR,equirect_frag:iR,linedashed_vert:sR,linedashed_frag:aR,meshbasic_vert:rR,meshbasic_frag:oR,meshlambert_vert:lR,meshlambert_frag:cR,meshmatcap_vert:uR,meshmatcap_frag:hR,meshnormal_vert:fR,meshnormal_frag:dR,meshphong_vert:pR,meshphong_frag:mR,meshphysical_vert:gR,meshphysical_frag:vR,meshtoon_vert:_R,meshtoon_frag:yR,points_vert:xR,points_frag:SR,shadow_vert:MR,shadow_frag:bR,sprite_vert:ER,sprite_frag:TR},Ft={common:{diffuse:{value:new Xt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ve},alphaMap:{value:null},alphaMapTransform:{value:new ve},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ve}},envmap:{envMap:{value:null},envMapRotation:{value:new ve},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ve}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ve}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ve},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ve},normalScale:{value:new dt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ve},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ve}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ve}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ve}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Xt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Xt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ve},alphaTest:{value:0},uvTransform:{value:new ve}},sprite:{diffuse:{value:new Xt(16777215)},opacity:{value:1},center:{value:new dt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ve},alphaMap:{value:null},alphaMapTransform:{value:new ve},alphaTest:{value:0}}},Yi={basic:{uniforms:jn([Ft.common,Ft.specularmap,Ft.envmap,Ft.aomap,Ft.lightmap,Ft.fog]),vertexShader:Me.meshbasic_vert,fragmentShader:Me.meshbasic_frag},lambert:{uniforms:jn([Ft.common,Ft.specularmap,Ft.envmap,Ft.aomap,Ft.lightmap,Ft.emissivemap,Ft.bumpmap,Ft.normalmap,Ft.displacementmap,Ft.fog,Ft.lights,{emissive:{value:new Xt(0)}}]),vertexShader:Me.meshlambert_vert,fragmentShader:Me.meshlambert_frag},phong:{uniforms:jn([Ft.common,Ft.specularmap,Ft.envmap,Ft.aomap,Ft.lightmap,Ft.emissivemap,Ft.bumpmap,Ft.normalmap,Ft.displacementmap,Ft.fog,Ft.lights,{emissive:{value:new Xt(0)},specular:{value:new Xt(1118481)},shininess:{value:30}}]),vertexShader:Me.meshphong_vert,fragmentShader:Me.meshphong_frag},standard:{uniforms:jn([Ft.common,Ft.envmap,Ft.aomap,Ft.lightmap,Ft.emissivemap,Ft.bumpmap,Ft.normalmap,Ft.displacementmap,Ft.roughnessmap,Ft.metalnessmap,Ft.fog,Ft.lights,{emissive:{value:new Xt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Me.meshphysical_vert,fragmentShader:Me.meshphysical_frag},toon:{uniforms:jn([Ft.common,Ft.aomap,Ft.lightmap,Ft.emissivemap,Ft.bumpmap,Ft.normalmap,Ft.displacementmap,Ft.gradientmap,Ft.fog,Ft.lights,{emissive:{value:new Xt(0)}}]),vertexShader:Me.meshtoon_vert,fragmentShader:Me.meshtoon_frag},matcap:{uniforms:jn([Ft.common,Ft.bumpmap,Ft.normalmap,Ft.displacementmap,Ft.fog,{matcap:{value:null}}]),vertexShader:Me.meshmatcap_vert,fragmentShader:Me.meshmatcap_frag},points:{uniforms:jn([Ft.points,Ft.fog]),vertexShader:Me.points_vert,fragmentShader:Me.points_frag},dashed:{uniforms:jn([Ft.common,Ft.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Me.linedashed_vert,fragmentShader:Me.linedashed_frag},depth:{uniforms:jn([Ft.common,Ft.displacementmap]),vertexShader:Me.depth_vert,fragmentShader:Me.depth_frag},normal:{uniforms:jn([Ft.common,Ft.bumpmap,Ft.normalmap,Ft.displacementmap,{opacity:{value:1}}]),vertexShader:Me.meshnormal_vert,fragmentShader:Me.meshnormal_frag},sprite:{uniforms:jn([Ft.sprite,Ft.fog]),vertexShader:Me.sprite_vert,fragmentShader:Me.sprite_frag},background:{uniforms:{uvTransform:{value:new ve},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Me.background_vert,fragmentShader:Me.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ve}},vertexShader:Me.backgroundCube_vert,fragmentShader:Me.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Me.cube_vert,fragmentShader:Me.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Me.equirect_vert,fragmentShader:Me.equirect_frag},distanceRGBA:{uniforms:jn([Ft.common,Ft.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Me.distanceRGBA_vert,fragmentShader:Me.distanceRGBA_frag},shadow:{uniforms:jn([Ft.lights,Ft.fog,{color:{value:new Xt(0)},opacity:{value:1}}]),vertexShader:Me.shadow_vert,fragmentShader:Me.shadow_frag}};Yi.physical={uniforms:jn([Yi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ve},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ve},clearcoatNormalScale:{value:new dt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ve},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ve},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ve},sheen:{value:0},sheenColor:{value:new Xt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ve},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ve},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ve},transmissionSamplerSize:{value:new dt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ve},attenuationDistance:{value:0},attenuationColor:{value:new Xt(0)},specularColor:{value:new Xt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ve},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ve},anisotropyVector:{value:new dt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ve}}]),vertexShader:Me.meshphysical_vert,fragmentShader:Me.meshphysical_frag};const Vu={r:0,b:0,g:0},Qa=new bi,AR=new de;function wR(s,t,e,n,i,r,l){const c=new Xt(0);let h=r===!0?0:1,f,p,m=null,g=0,v=null;function x(A){let T=A.isScene===!0?A.background:null;return T&&T.isTexture&&(T=(A.backgroundBlurriness>0?e:t).get(T)),T}function b(A){let T=!1;const N=x(A);N===null?_(c,h):N&&N.isColor&&(_(N,1),T=!0);const R=s.xr.getEnvironmentBlendMode();R==="additive"?n.buffers.color.setClear(0,0,0,1,l):R==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(s.autoClear||T)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function S(A,T){const N=x(T);N&&(N.isCubeTexture||N.mapping===Lo)?(p===void 0&&(p=new dn(new vr(1,1,1),new Ki({name:"BackgroundCubeMaterial",uniforms:Do(Yi.backgroundCube.uniforms),vertexShader:Yi.backgroundCube.vertexShader,fragmentShader:Yi.backgroundCube.fragmentShader,side:Qn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(R,L,z){this.matrixWorld.copyPosition(z.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(p)),Qa.copy(T.backgroundRotation),Qa.x*=-1,Qa.y*=-1,Qa.z*=-1,N.isCubeTexture&&N.isRenderTargetTexture===!1&&(Qa.y*=-1,Qa.z*=-1),p.material.uniforms.envMap.value=N,p.material.uniforms.flipEnvMap.value=N.isCubeTexture&&N.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,p.material.uniforms.backgroundRotation.value.setFromMatrix4(AR.makeRotationFromEuler(Qa)),p.material.toneMapped=Re.getTransfer(N.colorSpace)!==Ve,(m!==N||g!==N.version||v!==s.toneMapping)&&(p.material.needsUpdate=!0,m=N,g=N.version,v=s.toneMapping),p.layers.enableAll(),A.unshift(p,p.geometry,p.material,0,0,null)):N&&N.isTexture&&(f===void 0&&(f=new dn(new zo(2,2),new Ki({name:"BackgroundMaterial",uniforms:Do(Yi.background.uniforms),vertexShader:Yi.background.vertexShader,fragmentShader:Yi.background.fragmentShader,side:Bs,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(f)),f.material.uniforms.t2D.value=N,f.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,f.material.toneMapped=Re.getTransfer(N.colorSpace)!==Ve,N.matrixAutoUpdate===!0&&N.updateMatrix(),f.material.uniforms.uvTransform.value.copy(N.matrix),(m!==N||g!==N.version||v!==s.toneMapping)&&(f.material.needsUpdate=!0,m=N,g=N.version,v=s.toneMapping),f.layers.enableAll(),A.unshift(f,f.geometry,f.material,0,0,null))}function _(A,T){A.getRGB(Vu,bx(s)),n.buffers.color.setClear(Vu.r,Vu.g,Vu.b,T,l)}function E(){p!==void 0&&(p.geometry.dispose(),p.material.dispose(),p=void 0),f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0)}return{getClearColor:function(){return c},setClearColor:function(A,T=1){c.set(A),h=T,_(c,h)},getClearAlpha:function(){return h},setClearAlpha:function(A){h=A,_(c,h)},render:b,addToRenderList:S,dispose:E}}function CR(s,t){const e=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=g(null);let r=i,l=!1;function c(w,B,Y,W,$){let et=!1;const k=m(W,Y,B);r!==k&&(r=k,f(r.object)),et=v(w,W,Y,$),et&&x(w,W,Y,$),$!==null&&t.update($,s.ELEMENT_ARRAY_BUFFER),(et||l)&&(l=!1,T(w,B,Y,W),$!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get($).buffer))}function h(){return s.createVertexArray()}function f(w){return s.bindVertexArray(w)}function p(w){return s.deleteVertexArray(w)}function m(w,B,Y){const W=Y.wireframe===!0;let $=n[w.id];$===void 0&&($={},n[w.id]=$);let et=$[B.id];et===void 0&&(et={},$[B.id]=et);let k=et[W];return k===void 0&&(k=g(h()),et[W]=k),k}function g(w){const B=[],Y=[],W=[];for(let $=0;$<e;$++)B[$]=0,Y[$]=0,W[$]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:B,enabledAttributes:Y,attributeDivisors:W,object:w,attributes:{},index:null}}function v(w,B,Y,W){const $=r.attributes,et=B.attributes;let k=0;const Q=Y.getAttributes();for(const X in Q)if(Q[X].location>=0){const _t=$[X];let St=et[X];if(St===void 0&&(X==="instanceMatrix"&&w.instanceMatrix&&(St=w.instanceMatrix),X==="instanceColor"&&w.instanceColor&&(St=w.instanceColor)),_t===void 0||_t.attribute!==St||St&&_t.data!==St.data)return!0;k++}return r.attributesNum!==k||r.index!==W}function x(w,B,Y,W){const $={},et=B.attributes;let k=0;const Q=Y.getAttributes();for(const X in Q)if(Q[X].location>=0){let _t=et[X];_t===void 0&&(X==="instanceMatrix"&&w.instanceMatrix&&(_t=w.instanceMatrix),X==="instanceColor"&&w.instanceColor&&(_t=w.instanceColor));const St={};St.attribute=_t,_t&&_t.data&&(St.data=_t.data),$[X]=St,k++}r.attributes=$,r.attributesNum=k,r.index=W}function b(){const w=r.newAttributes;for(let B=0,Y=w.length;B<Y;B++)w[B]=0}function S(w){_(w,0)}function _(w,B){const Y=r.newAttributes,W=r.enabledAttributes,$=r.attributeDivisors;Y[w]=1,W[w]===0&&(s.enableVertexAttribArray(w),W[w]=1),$[w]!==B&&(s.vertexAttribDivisor(w,B),$[w]=B)}function E(){const w=r.newAttributes,B=r.enabledAttributes;for(let Y=0,W=B.length;Y<W;Y++)B[Y]!==w[Y]&&(s.disableVertexAttribArray(Y),B[Y]=0)}function A(w,B,Y,W,$,et,k){k===!0?s.vertexAttribIPointer(w,B,Y,$,et):s.vertexAttribPointer(w,B,Y,W,$,et)}function T(w,B,Y,W){b();const $=W.attributes,et=Y.getAttributes(),k=B.defaultAttributeValues;for(const Q in et){const X=et[Q];if(X.location>=0){let lt=$[Q];if(lt===void 0&&(Q==="instanceMatrix"&&w.instanceMatrix&&(lt=w.instanceMatrix),Q==="instanceColor"&&w.instanceColor&&(lt=w.instanceColor)),lt!==void 0){const _t=lt.normalized,St=lt.itemSize,Lt=t.get(lt);if(Lt===void 0)continue;const Yt=Lt.buffer,Zt=Lt.type,ie=Lt.bytesPerElement,ut=Zt===s.INT||Zt===s.UNSIGNED_INT||lt.gpuType===Zh;if(lt.isInterleavedBufferAttribute){const xt=lt.data,zt=xt.stride,te=lt.offset;if(xt.isInstancedInterleavedBuffer){for(let Bt=0;Bt<X.locationSize;Bt++)_(X.location+Bt,xt.meshPerAttribute);w.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=xt.meshPerAttribute*xt.count)}else for(let Bt=0;Bt<X.locationSize;Bt++)S(X.location+Bt);s.bindBuffer(s.ARRAY_BUFFER,Yt);for(let Bt=0;Bt<X.locationSize;Bt++)A(X.location+Bt,St/X.locationSize,Zt,_t,zt*ie,(te+St/X.locationSize*Bt)*ie,ut)}else{if(lt.isInstancedBufferAttribute){for(let xt=0;xt<X.locationSize;xt++)_(X.location+xt,lt.meshPerAttribute);w.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=lt.meshPerAttribute*lt.count)}else for(let xt=0;xt<X.locationSize;xt++)S(X.location+xt);s.bindBuffer(s.ARRAY_BUFFER,Yt);for(let xt=0;xt<X.locationSize;xt++)A(X.location+xt,St/X.locationSize,Zt,_t,St*ie,St/X.locationSize*xt*ie,ut)}}else if(k!==void 0){const _t=k[Q];if(_t!==void 0)switch(_t.length){case 2:s.vertexAttrib2fv(X.location,_t);break;case 3:s.vertexAttrib3fv(X.location,_t);break;case 4:s.vertexAttrib4fv(X.location,_t);break;default:s.vertexAttrib1fv(X.location,_t)}}}}E()}function N(){z();for(const w in n){const B=n[w];for(const Y in B){const W=B[Y];for(const $ in W)p(W[$].object),delete W[$];delete B[Y]}delete n[w]}}function R(w){if(n[w.id]===void 0)return;const B=n[w.id];for(const Y in B){const W=B[Y];for(const $ in W)p(W[$].object),delete W[$];delete B[Y]}delete n[w.id]}function L(w){for(const B in n){const Y=n[B];if(Y[w.id]===void 0)continue;const W=Y[w.id];for(const $ in W)p(W[$].object),delete W[$];delete Y[w.id]}}function z(){C(),l=!0,r!==i&&(r=i,f(r.object))}function C(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:z,resetDefaultState:C,dispose:N,releaseStatesOfGeometry:R,releaseStatesOfProgram:L,initAttributes:b,enableAttribute:S,disableUnusedAttributes:E}}function RR(s,t,e){let n;function i(f){n=f}function r(f,p){s.drawArrays(n,f,p),e.update(p,n,1)}function l(f,p,m){m!==0&&(s.drawArraysInstanced(n,f,p,m),e.update(p,n,m))}function c(f,p,m){if(m===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,p,0,m);let v=0;for(let x=0;x<m;x++)v+=p[x];e.update(v,n,1)}function h(f,p,m,g){if(m===0)return;const v=t.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<f.length;x++)l(f[x],p[x],g[x]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,p,0,g,0,m);let x=0;for(let b=0;b<m;b++)x+=p[b]*g[b];e.update(x,n,1)}}this.setMode=i,this.render=r,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=h}function DR(s,t,e,n){let i;function r(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const L=t.get("EXT_texture_filter_anisotropic");i=s.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(L){return!(L!==Hn&&n.convert(L)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(L){const z=L===Io&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(L!==Ii&&n.convert(L)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&L!==ri&&!z)}function h(L){if(L==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";L="mediump"}return L==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=e.precision!==void 0?e.precision:"highp";const p=h(f);p!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",p,"instead."),f=p);const m=e.logarithmicDepthBuffer===!0,g=e.reversedDepthBuffer===!0&&t.has("EXT_clip_control"),v=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),x=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),b=s.getParameter(s.MAX_TEXTURE_SIZE),S=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),_=s.getParameter(s.MAX_VERTEX_ATTRIBS),E=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),A=s.getParameter(s.MAX_VARYING_VECTORS),T=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),N=x>0,R=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:h,textureFormatReadable:l,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:m,reversedDepthBuffer:g,maxTextures:v,maxVertexTextures:x,maxTextureSize:b,maxCubemapSize:S,maxAttributes:_,maxVertexUniforms:E,maxVaryings:A,maxFragmentUniforms:T,vertexTextures:N,maxSamples:R}}function NR(s){const t=this;let e=null,n=0,i=!1,r=!1;const l=new Ps,c=new ve,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g){const v=m.length!==0||g||n!==0||i;return i=g,n=m.length,v},this.beginShadows=function(){r=!0,p(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(m,g){e=p(m,g,0)},this.setState=function(m,g,v){const x=m.clippingPlanes,b=m.clipIntersection,S=m.clipShadows,_=s.get(m);if(!i||x===null||x.length===0||r&&!S)r?p(null):f();else{const E=r?0:n,A=E*4;let T=_.clippingState||null;h.value=T,T=p(x,g,A,v);for(let N=0;N!==A;++N)T[N]=e[N];_.clippingState=T,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=E}};function f(){h.value!==e&&(h.value=e,h.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function p(m,g,v,x){const b=m!==null?m.length:0;let S=null;if(b!==0){if(S=h.value,x!==!0||S===null){const _=v+b*4,E=g.matrixWorldInverse;c.getNormalMatrix(E),(S===null||S.length<_)&&(S=new Float32Array(_));for(let A=0,T=v;A!==b;++A,T+=4)l.copy(m[A]).applyMatrix4(E,c),l.normal.toArray(S,T),S[T+3]=l.constant}h.value=S,h.needsUpdate=!0}return t.numPlanes=b,t.numIntersection=0,S}}function UR(s){let t=new WeakMap;function e(l,c){return c===Vl?l.mapping=Fs:c===Gl&&(l.mapping=pa),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===Vl||c===Gl)if(t.has(l)){const h=t.get(l).texture;return e(h,l.mapping)}else{const h=l.image;if(h&&h.height>0){const f=new Ax(h.height);return f.fromEquirectangularTexture(s,l),t.set(l,f),l.addEventListener("dispose",i),e(f.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const h=t.get(c);h!==void 0&&(t.delete(c),h.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}const So=4,L_=[.125,.215,.35,.446,.526,.582],sr=20,Pp=new cs,I_=new Xt;let Lp=null,Ip=0,Op=0,zp=!1;const ir=(1+Math.sqrt(5))/2,fo=1/ir,O_=[new I(-ir,fo,0),new I(ir,fo,0),new I(-fo,0,ir),new I(fo,0,ir),new I(0,ir,-fo),new I(0,ir,fo),new I(-1,1,-1),new I(1,1,-1),new I(-1,1,1),new I(1,1,1)],PR=new I;class vm{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100,r={}){const{size:l=256,position:c=PR}=r;Lp=this._renderer.getRenderTarget(),Ip=this._renderer.getActiveCubeFace(),Op=this._renderer.getActiveMipmapLevel(),zp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(l);const h=this._allocateTargets();return h.depthBuffer=!0,this._sceneToCubeUV(t,n,i,h,c),e>0&&this._blur(h,0,0,e),this._applyPMREM(h),this._cleanup(h),h}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=F_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=B_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Lp,Ip,Op),this._renderer.xr.enabled=zp,t.scissorTest=!1,Gu(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Fs||t.mapping===pa?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Lp=this._renderer.getRenderTarget(),Ip=this._renderer.getActiveCubeFace(),Op=this._renderer.getActiveMipmapLevel(),zp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:mn,minFilter:mn,generateMipmaps:!1,type:Io,format:Hn,colorSpace:ma,depthBuffer:!1},i=z_(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=z_(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=LR(r)),this._blurMaterial=IR(r,t,e)}return i}_compileMaterial(t){const e=new dn(this._lodPlanes[0],t);this._renderer.compile(e,Pp)}_sceneToCubeUV(t,e,n,i,r){const h=new en(90,1,e,n),f=[1,-1,1,1,1,1],p=[1,1,1,-1,-1,-1],m=this._renderer,g=m.autoClear,v=m.toneMapping;m.getClearColor(I_),m.toneMapping=os,m.autoClear=!1,m.state.buffers.depth.getReversed()&&(m.setRenderTarget(i),m.clearDepth(),m.setRenderTarget(null));const b=new _a({name:"PMREM.Background",side:Qn,depthWrite:!1,depthTest:!1}),S=new dn(new vr,b);let _=!1;const E=t.background;E?E.isColor&&(b.color.copy(E),t.background=null,_=!0):(b.color.copy(I_),_=!0);for(let A=0;A<6;A++){const T=A%3;T===0?(h.up.set(0,f[A],0),h.position.set(r.x,r.y,r.z),h.lookAt(r.x+p[A],r.y,r.z)):T===1?(h.up.set(0,0,f[A]),h.position.set(r.x,r.y,r.z),h.lookAt(r.x,r.y+p[A],r.z)):(h.up.set(0,f[A],0),h.position.set(r.x,r.y,r.z),h.lookAt(r.x,r.y,r.z+p[A]));const N=this._cubeSize;Gu(i,T*N,A>2?N:0,N,N),m.setRenderTarget(i),_&&m.render(S,h),m.render(t,h)}S.geometry.dispose(),S.material.dispose(),m.toneMapping=v,m.autoClear=g,t.background=E}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Fs||t.mapping===pa;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=F_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=B_());const r=i?this._cubemapMaterial:this._equirectMaterial,l=new dn(this._lodPlanes[0],r),c=r.uniforms;c.envMap.value=t;const h=this._cubeSize;Gu(e,0,0,3*h,2*h),n.setRenderTarget(e),n.render(l,Pp)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const l=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),c=O_[(i-r-1)%O_.length];this._blur(t,r-1,r,l,c)}e.autoClear=n}_blur(t,e,n,i,r){const l=this._pingPongRenderTarget;this._halfBlur(t,l,e,n,i,"latitudinal",r),this._halfBlur(l,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,l,c){const h=this._renderer,f=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new dn(this._lodPlanes[i],f),g=f.uniforms,v=this._sizeLods[n]-1,x=isFinite(r)?Math.PI/(2*v):2*Math.PI/(2*sr-1),b=r/x,S=isFinite(r)?1+Math.floor(p*b):sr;S>sr&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${sr}`);const _=[];let E=0;for(let L=0;L<sr;++L){const z=L/b,C=Math.exp(-z*z/2);_.push(C),L===0?E+=C:L<S&&(E+=2*C)}for(let L=0;L<_.length;L++)_[L]=_[L]/E;g.envMap.value=t.texture,g.samples.value=S,g.weights.value=_,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:A}=this;g.dTheta.value=x,g.mipInt.value=A-n;const T=this._sizeLods[i],N=3*T*(i>A-So?i-A+So:0),R=4*(this._cubeSize-T);Gu(e,N,R,3*T,2*T),h.setRenderTarget(e),h.render(m,Pp)}}function LR(s){const t=[],e=[],n=[];let i=s;const r=s-So+1+L_.length;for(let l=0;l<r;l++){const c=Math.pow(2,i);e.push(c);let h=1/c;l>s-So?h=L_[l-s+So-1]:l===0&&(h=0),n.push(h);const f=1/(c-2),p=-f,m=1+f,g=[p,p,m,p,m,m,p,p,m,m,p,m],v=6,x=6,b=3,S=2,_=1,E=new Float32Array(b*x*v),A=new Float32Array(S*x*v),T=new Float32Array(_*x*v);for(let R=0;R<v;R++){const L=R%3*2/3-1,z=R>2?0:-1,C=[L,z,0,L+2/3,z,0,L+2/3,z+1,0,L,z,0,L+2/3,z+1,0,L,z+1,0];E.set(C,b*x*R),A.set(g,S*x*R);const w=[R,R,R,R,R,R];T.set(w,_*x*R)}const N=new xe;N.setAttribute("position",new Xe(E,b)),N.setAttribute("uv",new Xe(A,S)),N.setAttribute("faceIndex",new Xe(T,_)),t.push(N),i>So&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function z_(s,t,e){const n=new us(s,t,e);return n.texture.mapping=Lo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Gu(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function IR(s,t,e){const n=new Float32Array(sr),i=new I(0,1,0);return new Ki({name:"SphericalGaussianBlur",defines:{n:sr,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:pg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Os,depthTest:!1,depthWrite:!1})}function B_(){return new Ki({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:pg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Os,depthTest:!1,depthWrite:!1})}function F_(){return new Ki({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:pg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Os,depthTest:!1,depthWrite:!1})}function pg(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function OR(s){let t=new WeakMap,e=null;function n(c){if(c&&c.isTexture){const h=c.mapping,f=h===Vl||h===Gl,p=h===Fs||h===pa;if(f||p){let m=t.get(c);const g=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return e===null&&(e=new vm(s)),m=f?e.fromEquirectangular(c,m):e.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),m.texture;if(m!==void 0)return m.texture;{const v=c.image;return f&&v&&v.height>0||p&&v&&i(v)?(e===null&&(e=new vm(s)),m=f?e.fromEquirectangular(c):e.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),c.addEventListener("dispose",r),m.texture):null}}}return c}function i(c){let h=0;const f=6;for(let p=0;p<f;p++)c[p]!==void 0&&h++;return h===f}function r(c){const h=c.target;h.removeEventListener("dispose",r);const f=t.get(h);f!==void 0&&(t.delete(h),f.dispose())}function l(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:l}}function zR(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const i=e(n);return i===null&&Kl("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function BR(s,t,e,n){const i={},r=new WeakMap;function l(m){const g=m.target;g.index!==null&&t.remove(g.index);for(const x in g.attributes)t.remove(g.attributes[x]);g.removeEventListener("dispose",l),delete i[g.id];const v=r.get(g);v&&(t.remove(v),r.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,e.memory.geometries--}function c(m,g){return i[g.id]===!0||(g.addEventListener("dispose",l),i[g.id]=!0,e.memory.geometries++),g}function h(m){const g=m.attributes;for(const v in g)t.update(g[v],s.ARRAY_BUFFER)}function f(m){const g=[],v=m.index,x=m.attributes.position;let b=0;if(v!==null){const E=v.array;b=v.version;for(let A=0,T=E.length;A<T;A+=3){const N=E[A+0],R=E[A+1],L=E[A+2];g.push(N,R,R,L,L,N)}}else if(x!==void 0){const E=x.array;b=x.version;for(let A=0,T=E.length/3-1;A<T;A+=3){const N=A+0,R=A+1,L=A+2;g.push(N,R,R,L,L,N)}}else return;const S=new(yx(g)?Vm:Hm)(g,1);S.version=b;const _=r.get(m);_&&t.remove(_),r.set(m,S)}function p(m){const g=r.get(m);if(g){const v=m.index;v!==null&&g.version<v.version&&f(m)}else f(m);return r.get(m)}return{get:c,update:h,getWireframeAttribute:p}}function FR(s,t,e){let n;function i(g){n=g}let r,l;function c(g){r=g.type,l=g.bytesPerElement}function h(g,v){s.drawElements(n,v,r,g*l),e.update(v,n,1)}function f(g,v,x){x!==0&&(s.drawElementsInstanced(n,v,r,g*l,x),e.update(v,n,x))}function p(g,v,x){if(x===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,r,g,0,x);let S=0;for(let _=0;_<x;_++)S+=v[_];e.update(S,n,1)}function m(g,v,x,b){if(x===0)return;const S=t.get("WEBGL_multi_draw");if(S===null)for(let _=0;_<g.length;_++)f(g[_]/l,v[_],b[_]);else{S.multiDrawElementsInstancedWEBGL(n,v,0,r,g,0,b,0,x);let _=0;for(let E=0;E<x;E++)_+=v[E]*b[E];e.update(_,n,1)}}this.setMode=i,this.setIndex=c,this.render=h,this.renderInstances=f,this.renderMultiDraw=p,this.renderMultiDrawInstances=m}function HR(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,l,c){switch(e.calls++,l){case s.TRIANGLES:e.triangles+=c*(r/3);break;case s.LINES:e.lines+=c*(r/2);break;case s.LINE_STRIP:e.lines+=c*(r-1);break;case s.LINE_LOOP:e.lines+=c*r;break;case s.POINTS:e.points+=c*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function VR(s,t,e){const n=new WeakMap,i=new Pe;function r(l,c,h){const f=l.morphTargetInfluences,p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=p!==void 0?p.length:0;let g=n.get(c);if(g===void 0||g.count!==m){let C=function(){L.dispose(),n.delete(c),c.removeEventListener("dispose",C)};g!==void 0&&g.texture.dispose();const v=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,b=c.morphAttributes.color!==void 0,S=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let A=0;v===!0&&(A=1),x===!0&&(A=2),b===!0&&(A=3);let T=c.attributes.position.count*A,N=1;T>t.maxTextureSize&&(N=Math.ceil(T/t.maxTextureSize),T=t.maxTextureSize);const R=new Float32Array(T*N*4*m),L=new ef(R,T,N,m);L.type=ri,L.needsUpdate=!0;const z=A*4;for(let w=0;w<m;w++){const B=S[w],Y=_[w],W=E[w],$=T*N*4*w;for(let et=0;et<B.count;et++){const k=et*z;v===!0&&(i.fromBufferAttribute(B,et),R[$+k+0]=i.x,R[$+k+1]=i.y,R[$+k+2]=i.z,R[$+k+3]=0),x===!0&&(i.fromBufferAttribute(Y,et),R[$+k+4]=i.x,R[$+k+5]=i.y,R[$+k+6]=i.z,R[$+k+7]=0),b===!0&&(i.fromBufferAttribute(W,et),R[$+k+8]=i.x,R[$+k+9]=i.y,R[$+k+10]=i.z,R[$+k+11]=W.itemSize===4?i.w:1)}}g={count:m,texture:L,size:new dt(T,N)},n.set(c,g),c.addEventListener("dispose",C)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)h.getUniforms().setValue(s,"morphTexture",l.morphTexture,e);else{let v=0;for(let b=0;b<f.length;b++)v+=f[b];const x=c.morphTargetsRelative?1:1-v;h.getUniforms().setValue(s,"morphTargetBaseInfluence",x),h.getUniforms().setValue(s,"morphTargetInfluences",f)}h.getUniforms().setValue(s,"morphTargetsTexture",g.texture,e),h.getUniforms().setValue(s,"morphTargetsTextureSize",g.size)}return{update:r}}function GR(s,t,e,n){let i=new WeakMap;function r(h){const f=n.render.frame,p=h.geometry,m=t.get(h,p);if(i.get(m)!==f&&(t.update(m),i.set(m,f)),h.isInstancedMesh&&(h.hasEventListener("dispose",c)===!1&&h.addEventListener("dispose",c),i.get(h)!==f&&(e.update(h.instanceMatrix,s.ARRAY_BUFFER),h.instanceColor!==null&&e.update(h.instanceColor,s.ARRAY_BUFFER),i.set(h,f))),h.isSkinnedMesh){const g=h.skeleton;i.get(g)!==f&&(g.update(),i.set(g,f))}return m}function l(){i=new WeakMap}function c(h){const f=h.target;f.removeEventListener("dispose",c),e.remove(f.instanceMatrix),f.instanceColor!==null&&e.remove(f.instanceColor)}return{update:r,dispose:l}}const ES=new ln,H_=new qm(1,1),TS=new ef,AS=new nf,wS=new oc,V_=[],G_=[],k_=new Float32Array(16),W_=new Float32Array(9),X_=new Float32Array(4);function Bo(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let r=V_[i];if(r===void 0&&(r=new Float32Array(i),V_[i]=r),t!==0){n.toArray(r,0);for(let l=1,c=0;l!==t;++l)c+=e,s[l].toArray(r,c)}return r}function gn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function vn(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function Tf(s,t){let e=G_[t];e===void 0&&(e=new Int32Array(t),G_[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function kR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function WR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(gn(e,t))return;s.uniform2fv(this.addr,t),vn(e,t)}}function XR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(gn(e,t))return;s.uniform3fv(this.addr,t),vn(e,t)}}function qR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(gn(e,t))return;s.uniform4fv(this.addr,t),vn(e,t)}}function YR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(gn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),vn(e,t)}else{if(gn(e,n))return;X_.set(n),s.uniformMatrix2fv(this.addr,!1,X_),vn(e,n)}}function ZR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(gn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),vn(e,t)}else{if(gn(e,n))return;W_.set(n),s.uniformMatrix3fv(this.addr,!1,W_),vn(e,n)}}function jR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(gn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),vn(e,t)}else{if(gn(e,n))return;k_.set(n),s.uniformMatrix4fv(this.addr,!1,k_),vn(e,n)}}function KR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function JR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(gn(e,t))return;s.uniform2iv(this.addr,t),vn(e,t)}}function QR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(gn(e,t))return;s.uniform3iv(this.addr,t),vn(e,t)}}function $R(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(gn(e,t))return;s.uniform4iv(this.addr,t),vn(e,t)}}function t2(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function e2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(gn(e,t))return;s.uniform2uiv(this.addr,t),vn(e,t)}}function n2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(gn(e,t))return;s.uniform3uiv(this.addr,t),vn(e,t)}}function i2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(gn(e,t))return;s.uniform4uiv(this.addr,t),vn(e,t)}}function s2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let r;this.type===s.SAMPLER_2D_SHADOW?(H_.compareFunction=zm,r=H_):r=ES,e.setTexture2D(t||r,i)}function a2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||AS,i)}function r2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||wS,i)}function o2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||TS,i)}function l2(s){switch(s){case 5126:return kR;case 35664:return WR;case 35665:return XR;case 35666:return qR;case 35674:return YR;case 35675:return ZR;case 35676:return jR;case 5124:case 35670:return KR;case 35667:case 35671:return JR;case 35668:case 35672:return QR;case 35669:case 35673:return $R;case 5125:return t2;case 36294:return e2;case 36295:return n2;case 36296:return i2;case 35678:case 36198:case 36298:case 36306:case 35682:return s2;case 35679:case 36299:case 36307:return a2;case 35680:case 36300:case 36308:case 36293:return r2;case 36289:case 36303:case 36311:case 36292:return o2}}function c2(s,t){s.uniform1fv(this.addr,t)}function u2(s,t){const e=Bo(t,this.size,2);s.uniform2fv(this.addr,e)}function h2(s,t){const e=Bo(t,this.size,3);s.uniform3fv(this.addr,e)}function f2(s,t){const e=Bo(t,this.size,4);s.uniform4fv(this.addr,e)}function d2(s,t){const e=Bo(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function p2(s,t){const e=Bo(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function m2(s,t){const e=Bo(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function g2(s,t){s.uniform1iv(this.addr,t)}function v2(s,t){s.uniform2iv(this.addr,t)}function _2(s,t){s.uniform3iv(this.addr,t)}function y2(s,t){s.uniform4iv(this.addr,t)}function x2(s,t){s.uniform1uiv(this.addr,t)}function S2(s,t){s.uniform2uiv(this.addr,t)}function M2(s,t){s.uniform3uiv(this.addr,t)}function b2(s,t){s.uniform4uiv(this.addr,t)}function E2(s,t,e){const n=this.cache,i=t.length,r=Tf(e,i);gn(n,r)||(s.uniform1iv(this.addr,r),vn(n,r));for(let l=0;l!==i;++l)e.setTexture2D(t[l]||ES,r[l])}function T2(s,t,e){const n=this.cache,i=t.length,r=Tf(e,i);gn(n,r)||(s.uniform1iv(this.addr,r),vn(n,r));for(let l=0;l!==i;++l)e.setTexture3D(t[l]||AS,r[l])}function A2(s,t,e){const n=this.cache,i=t.length,r=Tf(e,i);gn(n,r)||(s.uniform1iv(this.addr,r),vn(n,r));for(let l=0;l!==i;++l)e.setTextureCube(t[l]||wS,r[l])}function w2(s,t,e){const n=this.cache,i=t.length,r=Tf(e,i);gn(n,r)||(s.uniform1iv(this.addr,r),vn(n,r));for(let l=0;l!==i;++l)e.setTexture2DArray(t[l]||TS,r[l])}function C2(s){switch(s){case 5126:return c2;case 35664:return u2;case 35665:return h2;case 35666:return f2;case 35674:return d2;case 35675:return p2;case 35676:return m2;case 5124:case 35670:return g2;case 35667:case 35671:return v2;case 35668:case 35672:return _2;case 35669:case 35673:return y2;case 5125:return x2;case 36294:return S2;case 36295:return M2;case 36296:return b2;case 35678:case 36198:case 36298:case 36306:case 35682:return E2;case 35679:case 36299:case 36307:return T2;case 35680:case 36300:case 36308:case 36293:return A2;case 36289:case 36303:case 36311:case 36292:return w2}}class R2{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=l2(e.type)}}class D2{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=C2(e.type)}}class N2{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,l=i.length;r!==l;++r){const c=i[r];c.setValue(t,e[c.id],n)}}}const Bp=/(\w+)(\])?(\[|\.)?/g;function q_(s,t){s.seq.push(t),s.map[t.id]=t}function U2(s,t,e){const n=s.name,i=n.length;for(Bp.lastIndex=0;;){const r=Bp.exec(n),l=Bp.lastIndex;let c=r[1];const h=r[2]==="]",f=r[3];if(h&&(c=c|0),f===void 0||f==="["&&l+2===i){q_(e,f===void 0?new R2(c,s,t):new D2(c,s,t));break}else{let m=e.map[c];m===void 0&&(m=new N2(c),q_(e,m)),e=m}}}class ju{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),l=t.getUniformLocation(e,r.name);U2(r,l,this)}}setValue(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,l=e.length;r!==l;++r){const c=e[r],h=n[c.id];h.needsUpdate!==!1&&c.setValue(t,h.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const l=t[i];l.id in e&&n.push(l)}return n}}function Y_(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}const P2=37297;let L2=0;function I2(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let l=i;l<r;l++){const c=l+1;n.push(`${c===t?">":" "} ${c}: ${e[l]}`)}return n.join(`
`)}const Z_=new ve;function O2(s){Re._getMatrix(Z_,Re.workingColorSpace,s);const t=`mat3( ${Z_.elements.map(e=>e.toFixed(4))} )`;switch(Re.getTransfer(s)){case Yl:return[t,"LinearTransferOETF"];case Ve:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[t,"LinearTransferOETF"]}}function j_(s,t,e){const n=s.getShaderParameter(t,s.COMPILE_STATUS),r=(s.getShaderInfoLog(t)||"").trim();if(n&&r==="")return"";const l=/ERROR: 0:(\d+)/.exec(r);if(l){const c=parseInt(l[1]);return e.toUpperCase()+`

`+r+`

`+I2(s.getShaderSource(t),c)}else return r}function z2(s,t){const e=O2(t);return[`vec4 ${s}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function B2(s,t){let e;switch(t){case $y:e="Linear";break;case tx:e="Reinhard";break;case ex:e="Cineon";break;case wm:e="ACESFilmic";break;case ix:e="AgX";break;case sx:e="Neutral";break;case nx:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const ku=new I;function F2(){Re.getLuminanceCoefficients(ku);const s=ku.x.toFixed(4),t=ku.y.toFixed(4),e=ku.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function H2(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Dl).join(`
`)}function V2(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function G2(s,t){const e={},n=s.getProgramParameter(t,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(t,i),l=r.name;let c=1;r.type===s.FLOAT_MAT2&&(c=2),r.type===s.FLOAT_MAT3&&(c=3),r.type===s.FLOAT_MAT4&&(c=4),e[l]={type:r.type,location:s.getAttribLocation(t,l),locationSize:c}}return e}function Dl(s){return s!==""}function K_(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function J_(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const k2=/^[ \t]*#include +<([\w\d./]+)>/gm;function _m(s){return s.replace(k2,X2)}const W2=new Map;function X2(s,t){let e=Me[t];if(e===void 0){const n=W2.get(t);if(n!==void 0)e=Me[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return _m(e)}const q2=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Q_(s){return s.replace(q2,Y2)}function Y2(s,t,e,n){let i="";for(let r=parseInt(t);r<parseInt(e);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function $_(s){let t=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function Z2(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===qh?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===Nl?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===qi&&(t="SHADOWMAP_TYPE_VSM"),t}function j2(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Fs:case pa:t="ENVMAP_TYPE_CUBE";break;case Lo:t="ENVMAP_TYPE_CUBE_UV";break}return t}function K2(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case pa:t="ENVMAP_MODE_REFRACTION";break}return t}function J2(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case ac:t="ENVMAP_BLENDING_MULTIPLY";break;case Jy:t="ENVMAP_BLENDING_MIX";break;case Qy:t="ENVMAP_BLENDING_ADD";break}return t}function Q2(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),112)),texelHeight:n,maxMip:e}}function $2(s,t,e,n){const i=s.getContext(),r=e.defines;let l=e.vertexShader,c=e.fragmentShader;const h=Z2(e),f=j2(e),p=K2(e),m=J2(e),g=Q2(e),v=H2(e),x=V2(r),b=i.createProgram();let S,_,E=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(S=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(Dl).join(`
`),S.length>0&&(S+=`
`),_=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(Dl).join(`
`),_.length>0&&(_+=`
`)):(S=[$_(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+p:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",e.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Dl).join(`
`),_=[$_(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+f:"",e.envMap?"#define "+p:"",e.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",e.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==os?"#define TONE_MAPPING":"",e.toneMapping!==os?Me.tonemapping_pars_fragment:"",e.toneMapping!==os?B2("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",Me.colorspace_pars_fragment,z2("linearToOutputTexel",e.outputColorSpace),F2(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(Dl).join(`
`)),l=_m(l),l=K_(l,e),l=J_(l,e),c=_m(c),c=K_(c,e),c=J_(c,e),l=Q_(l),c=Q_(c),e.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,S=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,_=["#define varying in",e.glslVersion===lm?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===lm?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const A=E+S+l,T=E+_+c,N=Y_(i,i.VERTEX_SHADER,A),R=Y_(i,i.FRAGMENT_SHADER,T);i.attachShader(b,N),i.attachShader(b,R),e.index0AttributeName!==void 0?i.bindAttribLocation(b,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(b,0,"position"),i.linkProgram(b);function L(B){if(s.debug.checkShaderErrors){const Y=i.getProgramInfoLog(b)||"",W=i.getShaderInfoLog(N)||"",$=i.getShaderInfoLog(R)||"",et=Y.trim(),k=W.trim(),Q=$.trim();let X=!0,lt=!0;if(i.getProgramParameter(b,i.LINK_STATUS)===!1)if(X=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,b,N,R);else{const _t=j_(i,N,"vertex"),St=j_(i,R,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(b,i.VALIDATE_STATUS)+`

Material Name: `+B.name+`
Material Type: `+B.type+`

Program Info Log: `+et+`
`+_t+`
`+St)}else et!==""?console.warn("THREE.WebGLProgram: Program Info Log:",et):(k===""||Q==="")&&(lt=!1);lt&&(B.diagnostics={runnable:X,programLog:et,vertexShader:{log:k,prefix:S},fragmentShader:{log:Q,prefix:_}})}i.deleteShader(N),i.deleteShader(R),z=new ju(i,b),C=G2(i,b)}let z;this.getUniforms=function(){return z===void 0&&L(this),z};let C;this.getAttributes=function(){return C===void 0&&L(this),C};let w=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=i.getProgramParameter(b,P2)),w},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(b),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=L2++,this.cacheKey=t,this.usedTimes=1,this.program=b,this.vertexShader=N,this.fragmentShader=R,this}let t3=0;class e3{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),l=this._getShaderCacheForMaterial(t);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(r)===!1&&(l.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new n3(t),e.set(t,n)),n}}class n3{constructor(t){this.id=t3++,this.code=t,this.usedTimes=0}}function i3(s,t,e,n,i,r,l){const c=new Ro,h=new e3,f=new Set,p=[],m=i.logarithmicDepthBuffer,g=i.vertexTextures;let v=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(C){return f.add(C),C===0?"uv":`uv${C}`}function S(C,w,B,Y,W){const $=Y.fog,et=W.geometry,k=C.isMeshStandardMaterial?Y.environment:null,Q=(C.isMeshStandardMaterial?e:t).get(C.envMap||k),X=Q&&Q.mapping===Lo?Q.image.height:null,lt=x[C.type];C.precision!==null&&(v=i.getMaxPrecision(C.precision),v!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",v,"instead."));const _t=et.morphAttributes.position||et.morphAttributes.normal||et.morphAttributes.color,St=_t!==void 0?_t.length:0;let Lt=0;et.morphAttributes.position!==void 0&&(Lt=1),et.morphAttributes.normal!==void 0&&(Lt=2),et.morphAttributes.color!==void 0&&(Lt=3);let Yt,Zt,ie,ut;if(lt){const Se=Yi[lt];Yt=Se.vertexShader,Zt=Se.fragmentShader}else Yt=C.vertexShader,Zt=C.fragmentShader,h.update(C),ie=h.getVertexShaderID(C),ut=h.getFragmentShaderID(C);const xt=s.getRenderTarget(),zt=s.state.buffers.depth.getReversed(),te=W.isInstancedMesh===!0,Bt=W.isBatchedMesh===!0,kt=!!C.map,ge=!!C.matcap,F=!!Q,gt=!!C.aoMap,ht=!!C.lightMap,ft=!!C.bumpMap,ot=!!C.normalMap,Nt=!!C.displacementMap,Mt=!!C.emissiveMap,Tt=!!C.metalnessMap,re=!!C.roughnessMap,ce=C.anisotropy>0,O=C.clearcoat>0,D=C.dispersion>0,K=C.iridescence>0,rt=C.sheen>0,mt=C.transmission>0,ct=ce&&!!C.anisotropyMap,Qt=O&&!!C.clearcoatMap,Ut=O&&!!C.clearcoatNormalMap,jt=O&&!!C.clearcoatRoughnessMap,Kt=K&&!!C.iridescenceMap,bt=K&&!!C.iridescenceThicknessMap,It=rt&&!!C.sheenColorMap,ee=rt&&!!C.sheenRoughnessMap,H=!!C.specularMap,nt=!!C.specularColorMap,At=!!C.specularIntensityMap,V=mt&&!!C.transmissionMap,yt=mt&&!!C.thicknessMap,wt=!!C.gradientMap,Ht=!!C.alphaMap,Et=C.alphaTest>0,vt=!!C.alphaHash,Vt=!!C.extensions;let ne=os;C.toneMapped&&(xt===null||xt.isXRRenderTarget===!0)&&(ne=s.toneMapping);const Te={shaderID:lt,shaderType:C.type,shaderName:C.name,vertexShader:Yt,fragmentShader:Zt,defines:C.defines,customVertexShaderID:ie,customFragmentShaderID:ut,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:v,batching:Bt,batchingColor:Bt&&W._colorsTexture!==null,instancing:te,instancingColor:te&&W.instanceColor!==null,instancingMorph:te&&W.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:xt===null?s.outputColorSpace:xt.isXRRenderTarget===!0?xt.texture.colorSpace:ma,alphaToCoverage:!!C.alphaToCoverage,map:kt,matcap:ge,envMap:F,envMapMode:F&&Q.mapping,envMapCubeUVHeight:X,aoMap:gt,lightMap:ht,bumpMap:ft,normalMap:ot,displacementMap:g&&Nt,emissiveMap:Mt,normalMapObjectSpace:ot&&C.normalMapType===hx,normalMapTangentSpace:ot&&C.normalMapType===va,metalnessMap:Tt,roughnessMap:re,anisotropy:ce,anisotropyMap:ct,clearcoat:O,clearcoatMap:Qt,clearcoatNormalMap:Ut,clearcoatRoughnessMap:jt,dispersion:D,iridescence:K,iridescenceMap:Kt,iridescenceThicknessMap:bt,sheen:rt,sheenColorMap:It,sheenRoughnessMap:ee,specularMap:H,specularColorMap:nt,specularIntensityMap:At,transmission:mt,transmissionMap:V,thicknessMap:yt,gradientMap:wt,opaque:C.transparent===!1&&C.blending===cr&&C.alphaToCoverage===!1,alphaMap:Ht,alphaTest:Et,alphaHash:vt,combine:C.combine,mapUv:kt&&b(C.map.channel),aoMapUv:gt&&b(C.aoMap.channel),lightMapUv:ht&&b(C.lightMap.channel),bumpMapUv:ft&&b(C.bumpMap.channel),normalMapUv:ot&&b(C.normalMap.channel),displacementMapUv:Nt&&b(C.displacementMap.channel),emissiveMapUv:Mt&&b(C.emissiveMap.channel),metalnessMapUv:Tt&&b(C.metalnessMap.channel),roughnessMapUv:re&&b(C.roughnessMap.channel),anisotropyMapUv:ct&&b(C.anisotropyMap.channel),clearcoatMapUv:Qt&&b(C.clearcoatMap.channel),clearcoatNormalMapUv:Ut&&b(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:jt&&b(C.clearcoatRoughnessMap.channel),iridescenceMapUv:Kt&&b(C.iridescenceMap.channel),iridescenceThicknessMapUv:bt&&b(C.iridescenceThicknessMap.channel),sheenColorMapUv:It&&b(C.sheenColorMap.channel),sheenRoughnessMapUv:ee&&b(C.sheenRoughnessMap.channel),specularMapUv:H&&b(C.specularMap.channel),specularColorMapUv:nt&&b(C.specularColorMap.channel),specularIntensityMapUv:At&&b(C.specularIntensityMap.channel),transmissionMapUv:V&&b(C.transmissionMap.channel),thicknessMapUv:yt&&b(C.thicknessMap.channel),alphaMapUv:Ht&&b(C.alphaMap.channel),vertexTangents:!!et.attributes.tangent&&(ot||ce),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!et.attributes.color&&et.attributes.color.itemSize===4,pointsUvs:W.isPoints===!0&&!!et.attributes.uv&&(kt||Ht),fog:!!$,useFog:C.fog===!0,fogExp2:!!$&&$.isFogExp2,flatShading:C.flatShading===!0&&C.wireframe===!1,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:m,reversedDepthBuffer:zt,skinning:W.isSkinnedMesh===!0,morphTargets:et.morphAttributes.position!==void 0,morphNormals:et.morphAttributes.normal!==void 0,morphColors:et.morphAttributes.color!==void 0,morphTargetsCount:St,morphTextureStride:Lt,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:C.dithering,shadowMapEnabled:s.shadowMap.enabled&&B.length>0,shadowMapType:s.shadowMap.type,toneMapping:ne,decodeVideoTexture:kt&&C.map.isVideoTexture===!0&&Re.getTransfer(C.map.colorSpace)===Ve,decodeVideoTextureEmissive:Mt&&C.emissiveMap.isVideoTexture===!0&&Re.getTransfer(C.emissiveMap.colorSpace)===Ve,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===Zi,flipSided:C.side===Qn,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionClipCullDistance:Vt&&C.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Vt&&C.extensions.multiDraw===!0||Bt)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()};return Te.vertexUv1s=f.has(1),Te.vertexUv2s=f.has(2),Te.vertexUv3s=f.has(3),f.clear(),Te}function _(C){const w=[];if(C.shaderID?w.push(C.shaderID):(w.push(C.customVertexShaderID),w.push(C.customFragmentShaderID)),C.defines!==void 0)for(const B in C.defines)w.push(B),w.push(C.defines[B]);return C.isRawShaderMaterial===!1&&(E(w,C),A(w,C),w.push(s.outputColorSpace)),w.push(C.customProgramCacheKey),w.join()}function E(C,w){C.push(w.precision),C.push(w.outputColorSpace),C.push(w.envMapMode),C.push(w.envMapCubeUVHeight),C.push(w.mapUv),C.push(w.alphaMapUv),C.push(w.lightMapUv),C.push(w.aoMapUv),C.push(w.bumpMapUv),C.push(w.normalMapUv),C.push(w.displacementMapUv),C.push(w.emissiveMapUv),C.push(w.metalnessMapUv),C.push(w.roughnessMapUv),C.push(w.anisotropyMapUv),C.push(w.clearcoatMapUv),C.push(w.clearcoatNormalMapUv),C.push(w.clearcoatRoughnessMapUv),C.push(w.iridescenceMapUv),C.push(w.iridescenceThicknessMapUv),C.push(w.sheenColorMapUv),C.push(w.sheenRoughnessMapUv),C.push(w.specularMapUv),C.push(w.specularColorMapUv),C.push(w.specularIntensityMapUv),C.push(w.transmissionMapUv),C.push(w.thicknessMapUv),C.push(w.combine),C.push(w.fogExp2),C.push(w.sizeAttenuation),C.push(w.morphTargetsCount),C.push(w.morphAttributeCount),C.push(w.numDirLights),C.push(w.numPointLights),C.push(w.numSpotLights),C.push(w.numSpotLightMaps),C.push(w.numHemiLights),C.push(w.numRectAreaLights),C.push(w.numDirLightShadows),C.push(w.numPointLightShadows),C.push(w.numSpotLightShadows),C.push(w.numSpotLightShadowsWithMaps),C.push(w.numLightProbes),C.push(w.shadowMapType),C.push(w.toneMapping),C.push(w.numClippingPlanes),C.push(w.numClipIntersection),C.push(w.depthPacking)}function A(C,w){c.disableAll(),w.supportsVertexTextures&&c.enable(0),w.instancing&&c.enable(1),w.instancingColor&&c.enable(2),w.instancingMorph&&c.enable(3),w.matcap&&c.enable(4),w.envMap&&c.enable(5),w.normalMapObjectSpace&&c.enable(6),w.normalMapTangentSpace&&c.enable(7),w.clearcoat&&c.enable(8),w.iridescence&&c.enable(9),w.alphaTest&&c.enable(10),w.vertexColors&&c.enable(11),w.vertexAlphas&&c.enable(12),w.vertexUv1s&&c.enable(13),w.vertexUv2s&&c.enable(14),w.vertexUv3s&&c.enable(15),w.vertexTangents&&c.enable(16),w.anisotropy&&c.enable(17),w.alphaHash&&c.enable(18),w.batching&&c.enable(19),w.dispersion&&c.enable(20),w.batchingColor&&c.enable(21),w.gradientMap&&c.enable(22),C.push(c.mask),c.disableAll(),w.fog&&c.enable(0),w.useFog&&c.enable(1),w.flatShading&&c.enable(2),w.logarithmicDepthBuffer&&c.enable(3),w.reversedDepthBuffer&&c.enable(4),w.skinning&&c.enable(5),w.morphTargets&&c.enable(6),w.morphNormals&&c.enable(7),w.morphColors&&c.enable(8),w.premultipliedAlpha&&c.enable(9),w.shadowMapEnabled&&c.enable(10),w.doubleSided&&c.enable(11),w.flipSided&&c.enable(12),w.useDepthPacking&&c.enable(13),w.dithering&&c.enable(14),w.transmission&&c.enable(15),w.sheen&&c.enable(16),w.opaque&&c.enable(17),w.pointsUvs&&c.enable(18),w.decodeVideoTexture&&c.enable(19),w.decodeVideoTextureEmissive&&c.enable(20),w.alphaToCoverage&&c.enable(21),C.push(c.mask)}function T(C){const w=x[C.type];let B;if(w){const Y=Yi[w];B=Ex.clone(Y.uniforms)}else B=C.uniforms;return B}function N(C,w){let B;for(let Y=0,W=p.length;Y<W;Y++){const $=p[Y];if($.cacheKey===w){B=$,++B.usedTimes;break}}return B===void 0&&(B=new $2(s,w,C,r),p.push(B)),B}function R(C){if(--C.usedTimes===0){const w=p.indexOf(C);p[w]=p[p.length-1],p.pop(),C.destroy()}}function L(C){h.remove(C)}function z(){h.dispose()}return{getParameters:S,getProgramCacheKey:_,getUniforms:T,acquireProgram:N,releaseProgram:R,releaseShaderCache:L,programs:p,dispose:z}}function s3(){let s=new WeakMap;function t(l){return s.has(l)}function e(l){let c=s.get(l);return c===void 0&&(c={},s.set(l,c)),c}function n(l){s.delete(l)}function i(l,c,h){s.get(l)[c]=h}function r(){s=new WeakMap}return{has:t,get:e,remove:n,update:i,dispose:r}}function a3(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function ty(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function ey(){const s=[];let t=0;const e=[],n=[],i=[];function r(){t=0,e.length=0,n.length=0,i.length=0}function l(m,g,v,x,b,S){let _=s[t];return _===void 0?(_={id:m.id,object:m,geometry:g,material:v,groupOrder:x,renderOrder:m.renderOrder,z:b,group:S},s[t]=_):(_.id=m.id,_.object=m,_.geometry=g,_.material=v,_.groupOrder=x,_.renderOrder=m.renderOrder,_.z=b,_.group=S),t++,_}function c(m,g,v,x,b,S){const _=l(m,g,v,x,b,S);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):e.push(_)}function h(m,g,v,x,b,S){const _=l(m,g,v,x,b,S);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):e.unshift(_)}function f(m,g){e.length>1&&e.sort(m||a3),n.length>1&&n.sort(g||ty),i.length>1&&i.sort(g||ty)}function p(){for(let m=t,g=s.length;m<g;m++){const v=s[m];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:e,transmissive:n,transparent:i,init:r,push:c,unshift:h,finish:p,sort:f}}function r3(){let s=new WeakMap;function t(n,i){const r=s.get(n);let l;return r===void 0?(l=new ey,s.set(n,[l])):i>=r.length?(l=new ey,r.push(l)):l=r[i],l}function e(){s=new WeakMap}return{get:t,dispose:e}}function o3(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new I,color:new Xt};break;case"SpotLight":e={position:new I,direction:new I,color:new Xt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new I,color:new Xt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new I,skyColor:new Xt,groundColor:new Xt};break;case"RectAreaLight":e={color:new Xt,position:new I,halfWidth:new I,halfHeight:new I};break}return s[t.id]=e,e}}}function l3(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new dt};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new dt};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new dt,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let c3=0;function u3(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function h3(s){const t=new o3,e=l3(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new I);const i=new I,r=new de,l=new de;function c(f){let p=0,m=0,g=0;for(let C=0;C<9;C++)n.probe[C].set(0,0,0);let v=0,x=0,b=0,S=0,_=0,E=0,A=0,T=0,N=0,R=0,L=0;f.sort(u3);for(let C=0,w=f.length;C<w;C++){const B=f[C],Y=B.color,W=B.intensity,$=B.distance,et=B.shadow&&B.shadow.map?B.shadow.map.texture:null;if(B.isAmbientLight)p+=Y.r*W,m+=Y.g*W,g+=Y.b*W;else if(B.isLightProbe){for(let k=0;k<9;k++)n.probe[k].addScaledVector(B.sh.coefficients[k],W);L++}else if(B.isDirectionalLight){const k=t.get(B);if(k.color.copy(B.color).multiplyScalar(B.intensity),B.castShadow){const Q=B.shadow,X=e.get(B);X.shadowIntensity=Q.intensity,X.shadowBias=Q.bias,X.shadowNormalBias=Q.normalBias,X.shadowRadius=Q.radius,X.shadowMapSize=Q.mapSize,n.directionalShadow[v]=X,n.directionalShadowMap[v]=et,n.directionalShadowMatrix[v]=B.shadow.matrix,E++}n.directional[v]=k,v++}else if(B.isSpotLight){const k=t.get(B);k.position.setFromMatrixPosition(B.matrixWorld),k.color.copy(Y).multiplyScalar(W),k.distance=$,k.coneCos=Math.cos(B.angle),k.penumbraCos=Math.cos(B.angle*(1-B.penumbra)),k.decay=B.decay,n.spot[b]=k;const Q=B.shadow;if(B.map&&(n.spotLightMap[N]=B.map,N++,Q.updateMatrices(B),B.castShadow&&R++),n.spotLightMatrix[b]=Q.matrix,B.castShadow){const X=e.get(B);X.shadowIntensity=Q.intensity,X.shadowBias=Q.bias,X.shadowNormalBias=Q.normalBias,X.shadowRadius=Q.radius,X.shadowMapSize=Q.mapSize,n.spotShadow[b]=X,n.spotShadowMap[b]=et,T++}b++}else if(B.isRectAreaLight){const k=t.get(B);k.color.copy(Y).multiplyScalar(W),k.halfWidth.set(B.width*.5,0,0),k.halfHeight.set(0,B.height*.5,0),n.rectArea[S]=k,S++}else if(B.isPointLight){const k=t.get(B);if(k.color.copy(B.color).multiplyScalar(B.intensity),k.distance=B.distance,k.decay=B.decay,B.castShadow){const Q=B.shadow,X=e.get(B);X.shadowIntensity=Q.intensity,X.shadowBias=Q.bias,X.shadowNormalBias=Q.normalBias,X.shadowRadius=Q.radius,X.shadowMapSize=Q.mapSize,X.shadowCameraNear=Q.camera.near,X.shadowCameraFar=Q.camera.far,n.pointShadow[x]=X,n.pointShadowMap[x]=et,n.pointShadowMatrix[x]=B.shadow.matrix,A++}n.point[x]=k,x++}else if(B.isHemisphereLight){const k=t.get(B);k.skyColor.copy(B.color).multiplyScalar(W),k.groundColor.copy(B.groundColor).multiplyScalar(W),n.hemi[_]=k,_++}}S>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ft.LTC_FLOAT_1,n.rectAreaLTC2=Ft.LTC_FLOAT_2):(n.rectAreaLTC1=Ft.LTC_HALF_1,n.rectAreaLTC2=Ft.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=g;const z=n.hash;(z.directionalLength!==v||z.pointLength!==x||z.spotLength!==b||z.rectAreaLength!==S||z.hemiLength!==_||z.numDirectionalShadows!==E||z.numPointShadows!==A||z.numSpotShadows!==T||z.numSpotMaps!==N||z.numLightProbes!==L)&&(n.directional.length=v,n.spot.length=b,n.rectArea.length=S,n.point.length=x,n.hemi.length=_,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=A,n.pointShadowMap.length=A,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=A,n.spotLightMatrix.length=T+N-R,n.spotLightMap.length=N,n.numSpotLightShadowsWithMaps=R,n.numLightProbes=L,z.directionalLength=v,z.pointLength=x,z.spotLength=b,z.rectAreaLength=S,z.hemiLength=_,z.numDirectionalShadows=E,z.numPointShadows=A,z.numSpotShadows=T,z.numSpotMaps=N,z.numLightProbes=L,n.version=c3++)}function h(f,p){let m=0,g=0,v=0,x=0,b=0;const S=p.matrixWorldInverse;for(let _=0,E=f.length;_<E;_++){const A=f[_];if(A.isDirectionalLight){const T=n.directional[m];T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),m++}else if(A.isSpotLight){const T=n.spot[v];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),v++}else if(A.isRectAreaLight){const T=n.rectArea[x];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),l.identity(),r.copy(A.matrixWorld),r.premultiply(S),l.extractRotation(r),T.halfWidth.set(A.width*.5,0,0),T.halfHeight.set(0,A.height*.5,0),T.halfWidth.applyMatrix4(l),T.halfHeight.applyMatrix4(l),x++}else if(A.isPointLight){const T=n.point[g];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),g++}else if(A.isHemisphereLight){const T=n.hemi[b];T.direction.setFromMatrixPosition(A.matrixWorld),T.direction.transformDirection(S),b++}}}return{setup:c,setupView:h,state:n}}function ny(s){const t=new h3(s),e=[],n=[];function i(p){f.camera=p,e.length=0,n.length=0}function r(p){e.push(p)}function l(p){n.push(p)}function c(){t.setup(e)}function h(p){t.setupView(e,p)}const f={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:f,setupLights:c,setupLightsView:h,pushLight:r,pushShadow:l}}function f3(s){let t=new WeakMap;function e(i,r=0){const l=t.get(i);let c;return l===void 0?(c=new ny(s),t.set(i,[c])):r>=l.length?(c=new ny(s),l.push(c)):c=l[r],c}function n(){t=new WeakMap}return{get:e,dispose:n}}const d3=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,p3=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function m3(s,t,e){let n=new Oo;const i=new dt,r=new dt,l=new Pe,c=new eg({depthPacking:ux}),h=new ng,f={},p=e.maxTextureSize,m={[Bs]:Qn,[Qn]:Bs,[Zi]:Zi},g=new Ki({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new dt},radius:{value:4}},vertexShader:d3,fragmentShader:p3}),v=g.clone();v.defines.HORIZONTAL_PASS=1;const x=new xe;x.setAttribute("position",new Xe(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new dn(x,g),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=qh;let _=this.type;this.render=function(R,L,z){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||R.length===0)return;const C=s.getRenderTarget(),w=s.getActiveCubeFace(),B=s.getActiveMipmapLevel(),Y=s.state;Y.setBlending(Os),Y.buffers.depth.getReversed()===!0?Y.buffers.color.setClear(0,0,0,0):Y.buffers.color.setClear(1,1,1,1),Y.buffers.depth.setTest(!0),Y.setScissorTest(!1);const W=_!==qi&&this.type===qi,$=_===qi&&this.type!==qi;for(let et=0,k=R.length;et<k;et++){const Q=R[et],X=Q.shadow;if(X===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(X.autoUpdate===!1&&X.needsUpdate===!1)continue;i.copy(X.mapSize);const lt=X.getFrameExtents();if(i.multiply(lt),r.copy(X.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(r.x=Math.floor(p/lt.x),i.x=r.x*lt.x,X.mapSize.x=r.x),i.y>p&&(r.y=Math.floor(p/lt.y),i.y=r.y*lt.y,X.mapSize.y=r.y)),X.map===null||W===!0||$===!0){const St=this.type!==qi?{minFilter:Cn,magFilter:Cn}:{};X.map!==null&&X.map.dispose(),X.map=new us(i.x,i.y,St),X.map.texture.name=Q.name+".shadowMap",X.camera.updateProjectionMatrix()}s.setRenderTarget(X.map),s.clear();const _t=X.getViewportCount();for(let St=0;St<_t;St++){const Lt=X.getViewport(St);l.set(r.x*Lt.x,r.y*Lt.y,r.x*Lt.z,r.y*Lt.w),Y.viewport(l),X.updateMatrices(Q,St),n=X.getFrustum(),T(L,z,X.camera,Q,this.type)}X.isPointLightShadow!==!0&&this.type===qi&&E(X,z),X.needsUpdate=!1}_=this.type,S.needsUpdate=!1,s.setRenderTarget(C,w,B)};function E(R,L){const z=t.update(b);g.defines.VSM_SAMPLES!==R.blurSamples&&(g.defines.VSM_SAMPLES=R.blurSamples,v.defines.VSM_SAMPLES=R.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new us(i.x,i.y)),g.uniforms.shadow_pass.value=R.map.texture,g.uniforms.resolution.value=R.mapSize,g.uniforms.radius.value=R.radius,s.setRenderTarget(R.mapPass),s.clear(),s.renderBufferDirect(L,null,z,g,b,null),v.uniforms.shadow_pass.value=R.mapPass.texture,v.uniforms.resolution.value=R.mapSize,v.uniforms.radius.value=R.radius,s.setRenderTarget(R.map),s.clear(),s.renderBufferDirect(L,null,z,v,b,null)}function A(R,L,z,C){let w=null;const B=z.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(B!==void 0)w=B;else if(w=z.isPointLight===!0?h:c,s.localClippingEnabled&&L.clipShadows===!0&&Array.isArray(L.clippingPlanes)&&L.clippingPlanes.length!==0||L.displacementMap&&L.displacementScale!==0||L.alphaMap&&L.alphaTest>0||L.map&&L.alphaTest>0||L.alphaToCoverage===!0){const Y=w.uuid,W=L.uuid;let $=f[Y];$===void 0&&($={},f[Y]=$);let et=$[W];et===void 0&&(et=w.clone(),$[W]=et,L.addEventListener("dispose",N)),w=et}if(w.visible=L.visible,w.wireframe=L.wireframe,C===qi?w.side=L.shadowSide!==null?L.shadowSide:L.side:w.side=L.shadowSide!==null?L.shadowSide:m[L.side],w.alphaMap=L.alphaMap,w.alphaTest=L.alphaToCoverage===!0?.5:L.alphaTest,w.map=L.map,w.clipShadows=L.clipShadows,w.clippingPlanes=L.clippingPlanes,w.clipIntersection=L.clipIntersection,w.displacementMap=L.displacementMap,w.displacementScale=L.displacementScale,w.displacementBias=L.displacementBias,w.wireframeLinewidth=L.wireframeLinewidth,w.linewidth=L.linewidth,z.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const Y=s.properties.get(w);Y.light=z}return w}function T(R,L,z,C,w){if(R.visible===!1)return;if(R.layers.test(L.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&w===qi)&&(!R.frustumCulled||n.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,R.matrixWorld);const W=t.update(R),$=R.material;if(Array.isArray($)){const et=W.groups;for(let k=0,Q=et.length;k<Q;k++){const X=et[k],lt=$[X.materialIndex];if(lt&&lt.visible){const _t=A(R,lt,C,w);R.onBeforeShadow(s,R,L,z,W,_t,X),s.renderBufferDirect(z,null,W,_t,R,X),R.onAfterShadow(s,R,L,z,W,_t,X)}}}else if($.visible){const et=A(R,$,C,w);R.onBeforeShadow(s,R,L,z,W,et,null),s.renderBufferDirect(z,null,W,et,R,null),R.onAfterShadow(s,R,L,z,W,et,null)}}const Y=R.children;for(let W=0,$=Y.length;W<$;W++)T(Y[W],L,z,C,w)}function N(R){R.target.removeEventListener("dispose",N);for(const z in f){const C=f[z],w=R.target.uuid;w in C&&(C[w].dispose(),delete C[w])}}}const g3={[eh]:nh,[ih]:rh,[sh]:oh,[fr]:ah,[nh]:eh,[rh]:ih,[oh]:sh,[ah]:fr};function v3(s,t){function e(){let V=!1;const yt=new Pe;let wt=null;const Ht=new Pe(0,0,0,0);return{setMask:function(Et){wt!==Et&&!V&&(s.colorMask(Et,Et,Et,Et),wt=Et)},setLocked:function(Et){V=Et},setClear:function(Et,vt,Vt,ne,Te){Te===!0&&(Et*=ne,vt*=ne,Vt*=ne),yt.set(Et,vt,Vt,ne),Ht.equals(yt)===!1&&(s.clearColor(Et,vt,Vt,ne),Ht.copy(yt))},reset:function(){V=!1,wt=null,Ht.set(-1,0,0,0)}}}function n(){let V=!1,yt=!1,wt=null,Ht=null,Et=null;return{setReversed:function(vt){if(yt!==vt){const Vt=t.get("EXT_clip_control");vt?Vt.clipControlEXT(Vt.LOWER_LEFT_EXT,Vt.ZERO_TO_ONE_EXT):Vt.clipControlEXT(Vt.LOWER_LEFT_EXT,Vt.NEGATIVE_ONE_TO_ONE_EXT),yt=vt;const ne=Et;Et=null,this.setClear(ne)}},getReversed:function(){return yt},setTest:function(vt){vt?xt(s.DEPTH_TEST):zt(s.DEPTH_TEST)},setMask:function(vt){wt!==vt&&!V&&(s.depthMask(vt),wt=vt)},setFunc:function(vt){if(yt&&(vt=g3[vt]),Ht!==vt){switch(vt){case eh:s.depthFunc(s.NEVER);break;case nh:s.depthFunc(s.ALWAYS);break;case ih:s.depthFunc(s.LESS);break;case fr:s.depthFunc(s.LEQUAL);break;case sh:s.depthFunc(s.EQUAL);break;case ah:s.depthFunc(s.GEQUAL);break;case rh:s.depthFunc(s.GREATER);break;case oh:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Ht=vt}},setLocked:function(vt){V=vt},setClear:function(vt){Et!==vt&&(yt&&(vt=1-vt),s.clearDepth(vt),Et=vt)},reset:function(){V=!1,wt=null,Ht=null,Et=null,yt=!1}}}function i(){let V=!1,yt=null,wt=null,Ht=null,Et=null,vt=null,Vt=null,ne=null,Te=null;return{setTest:function(Se){V||(Se?xt(s.STENCIL_TEST):zt(s.STENCIL_TEST))},setMask:function(Se){yt!==Se&&!V&&(s.stencilMask(Se),yt=Se)},setFunc:function(Se,_n,yn){(wt!==Se||Ht!==_n||Et!==yn)&&(s.stencilFunc(Se,_n,yn),wt=Se,Ht=_n,Et=yn)},setOp:function(Se,_n,yn){(vt!==Se||Vt!==_n||ne!==yn)&&(s.stencilOp(Se,_n,yn),vt=Se,Vt=_n,ne=yn)},setLocked:function(Se){V=Se},setClear:function(Se){Te!==Se&&(s.clearStencil(Se),Te=Se)},reset:function(){V=!1,yt=null,wt=null,Ht=null,Et=null,vt=null,Vt=null,ne=null,Te=null}}}const r=new e,l=new n,c=new i,h=new WeakMap,f=new WeakMap;let p={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,_=null,E=null,A=null,T=null,N=null,R=null,L=new Xt(0,0,0),z=0,C=!1,w=null,B=null,Y=null,W=null,$=null;const et=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let k=!1,Q=0;const X=s.getParameter(s.VERSION);X.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(X)[1]),k=Q>=1):X.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(X)[1]),k=Q>=2);let lt=null,_t={};const St=s.getParameter(s.SCISSOR_BOX),Lt=s.getParameter(s.VIEWPORT),Yt=new Pe().fromArray(St),Zt=new Pe().fromArray(Lt);function ie(V,yt,wt,Ht){const Et=new Uint8Array(4),vt=s.createTexture();s.bindTexture(V,vt),s.texParameteri(V,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(V,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let Vt=0;Vt<wt;Vt++)V===s.TEXTURE_3D||V===s.TEXTURE_2D_ARRAY?s.texImage3D(yt,0,s.RGBA,1,1,Ht,0,s.RGBA,s.UNSIGNED_BYTE,Et):s.texImage2D(yt+Vt,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Et);return vt}const ut={};ut[s.TEXTURE_2D]=ie(s.TEXTURE_2D,s.TEXTURE_2D,1),ut[s.TEXTURE_CUBE_MAP]=ie(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),ut[s.TEXTURE_2D_ARRAY]=ie(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),ut[s.TEXTURE_3D]=ie(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),l.setClear(1),c.setClear(0),xt(s.DEPTH_TEST),l.setFunc(fr),ft(!1),ot(nm),xt(s.CULL_FACE),gt(Os);function xt(V){p[V]!==!0&&(s.enable(V),p[V]=!0)}function zt(V){p[V]!==!1&&(s.disable(V),p[V]=!1)}function te(V,yt){return m[V]!==yt?(s.bindFramebuffer(V,yt),m[V]=yt,V===s.DRAW_FRAMEBUFFER&&(m[s.FRAMEBUFFER]=yt),V===s.FRAMEBUFFER&&(m[s.DRAW_FRAMEBUFFER]=yt),!0):!1}function Bt(V,yt){let wt=v,Ht=!1;if(V){wt=g.get(yt),wt===void 0&&(wt=[],g.set(yt,wt));const Et=V.textures;if(wt.length!==Et.length||wt[0]!==s.COLOR_ATTACHMENT0){for(let vt=0,Vt=Et.length;vt<Vt;vt++)wt[vt]=s.COLOR_ATTACHMENT0+vt;wt.length=Et.length,Ht=!0}}else wt[0]!==s.BACK&&(wt[0]=s.BACK,Ht=!0);Ht&&s.drawBuffers(wt)}function kt(V){return x!==V?(s.useProgram(V),x=V,!0):!1}const ge={[ha]:s.FUNC_ADD,[Ly]:s.FUNC_SUBTRACT,[Iy]:s.FUNC_REVERSE_SUBTRACT};ge[Oy]=s.MIN,ge[zy]=s.MAX;const F={[By]:s.ZERO,[Fy]:s.ONE,[Hy]:s.SRC_COLOR,[$u]:s.SRC_ALPHA,[qy]:s.SRC_ALPHA_SATURATE,[Wy]:s.DST_COLOR,[Gy]:s.DST_ALPHA,[Vy]:s.ONE_MINUS_SRC_COLOR,[th]:s.ONE_MINUS_SRC_ALPHA,[Xy]:s.ONE_MINUS_DST_COLOR,[ky]:s.ONE_MINUS_DST_ALPHA,[Yy]:s.CONSTANT_COLOR,[Zy]:s.ONE_MINUS_CONSTANT_COLOR,[jy]:s.CONSTANT_ALPHA,[Ky]:s.ONE_MINUS_CONSTANT_ALPHA};function gt(V,yt,wt,Ht,Et,vt,Vt,ne,Te,Se){if(V===Os){b===!0&&(zt(s.BLEND),b=!1);return}if(b===!1&&(xt(s.BLEND),b=!0),V!==Py){if(V!==S||Se!==C){if((_!==ha||T!==ha)&&(s.blendEquation(s.FUNC_ADD),_=ha,T=ha),Se)switch(V){case cr:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case im:s.blendFunc(s.ONE,s.ONE);break;case sm:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case am:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case cr:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case im:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case sm:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case am:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}E=null,A=null,N=null,R=null,L.set(0,0,0),z=0,S=V,C=Se}return}Et=Et||yt,vt=vt||wt,Vt=Vt||Ht,(yt!==_||Et!==T)&&(s.blendEquationSeparate(ge[yt],ge[Et]),_=yt,T=Et),(wt!==E||Ht!==A||vt!==N||Vt!==R)&&(s.blendFuncSeparate(F[wt],F[Ht],F[vt],F[Vt]),E=wt,A=Ht,N=vt,R=Vt),(ne.equals(L)===!1||Te!==z)&&(s.blendColor(ne.r,ne.g,ne.b,Te),L.copy(ne),z=Te),S=V,C=!1}function ht(V,yt){V.side===Zi?zt(s.CULL_FACE):xt(s.CULL_FACE);let wt=V.side===Qn;yt&&(wt=!wt),ft(wt),V.blending===cr&&V.transparent===!1?gt(Os):gt(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.blendColor,V.blendAlpha,V.premultipliedAlpha),l.setFunc(V.depthFunc),l.setTest(V.depthTest),l.setMask(V.depthWrite),r.setMask(V.colorWrite);const Ht=V.stencilWrite;c.setTest(Ht),Ht&&(c.setMask(V.stencilWriteMask),c.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),c.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),Mt(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?xt(s.SAMPLE_ALPHA_TO_COVERAGE):zt(s.SAMPLE_ALPHA_TO_COVERAGE)}function ft(V){w!==V&&(V?s.frontFace(s.CW):s.frontFace(s.CCW),w=V)}function ot(V){V!==Dy?(xt(s.CULL_FACE),V!==B&&(V===nm?s.cullFace(s.BACK):V===Ny?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):zt(s.CULL_FACE),B=V}function Nt(V){V!==Y&&(k&&s.lineWidth(V),Y=V)}function Mt(V,yt,wt){V?(xt(s.POLYGON_OFFSET_FILL),(W!==yt||$!==wt)&&(s.polygonOffset(yt,wt),W=yt,$=wt)):zt(s.POLYGON_OFFSET_FILL)}function Tt(V){V?xt(s.SCISSOR_TEST):zt(s.SCISSOR_TEST)}function re(V){V===void 0&&(V=s.TEXTURE0+et-1),lt!==V&&(s.activeTexture(V),lt=V)}function ce(V,yt,wt){wt===void 0&&(lt===null?wt=s.TEXTURE0+et-1:wt=lt);let Ht=_t[wt];Ht===void 0&&(Ht={type:void 0,texture:void 0},_t[wt]=Ht),(Ht.type!==V||Ht.texture!==yt)&&(lt!==wt&&(s.activeTexture(wt),lt=wt),s.bindTexture(V,yt||ut[V]),Ht.type=V,Ht.texture=yt)}function O(){const V=_t[lt];V!==void 0&&V.type!==void 0&&(s.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function D(){try{s.compressedTexImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function K(){try{s.compressedTexImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function rt(){try{s.texSubImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function mt(){try{s.texSubImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function ct(){try{s.compressedTexSubImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Qt(){try{s.compressedTexSubImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Ut(){try{s.texStorage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function jt(){try{s.texStorage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Kt(){try{s.texImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function bt(){try{s.texImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function It(V){Yt.equals(V)===!1&&(s.scissor(V.x,V.y,V.z,V.w),Yt.copy(V))}function ee(V){Zt.equals(V)===!1&&(s.viewport(V.x,V.y,V.z,V.w),Zt.copy(V))}function H(V,yt){let wt=f.get(yt);wt===void 0&&(wt=new WeakMap,f.set(yt,wt));let Ht=wt.get(V);Ht===void 0&&(Ht=s.getUniformBlockIndex(yt,V.name),wt.set(V,Ht))}function nt(V,yt){const Ht=f.get(yt).get(V);h.get(yt)!==Ht&&(s.uniformBlockBinding(yt,Ht,V.__bindingPointIndex),h.set(yt,Ht))}function At(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),l.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),p={},lt=null,_t={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,_=null,E=null,A=null,T=null,N=null,R=null,L=new Xt(0,0,0),z=0,C=!1,w=null,B=null,Y=null,W=null,$=null,Yt.set(0,0,s.canvas.width,s.canvas.height),Zt.set(0,0,s.canvas.width,s.canvas.height),r.reset(),l.reset(),c.reset()}return{buffers:{color:r,depth:l,stencil:c},enable:xt,disable:zt,bindFramebuffer:te,drawBuffers:Bt,useProgram:kt,setBlending:gt,setMaterial:ht,setFlipSided:ft,setCullFace:ot,setLineWidth:Nt,setPolygonOffset:Mt,setScissorTest:Tt,activeTexture:re,bindTexture:ce,unbindTexture:O,compressedTexImage2D:D,compressedTexImage3D:K,texImage2D:Kt,texImage3D:bt,updateUBOMapping:H,uniformBlockBinding:nt,texStorage2D:Ut,texStorage3D:jt,texSubImage2D:rt,texSubImage3D:mt,compressedTexSubImage2D:ct,compressedTexSubImage3D:Qt,scissor:It,viewport:ee,reset:At}}function _3(s,t,e,n,i,r,l){const c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new dt,p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(O,D){return v?new OffscreenCanvas(O,D):jl("canvas")}function b(O,D,K){let rt=1;const mt=ce(O);if((mt.width>K||mt.height>K)&&(rt=K/Math.max(mt.width,mt.height)),rt<1)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap||typeof VideoFrame<"u"&&O instanceof VideoFrame){const ct=Math.floor(rt*mt.width),Qt=Math.floor(rt*mt.height);m===void 0&&(m=x(ct,Qt));const Ut=D?x(ct,Qt):m;return Ut.width=ct,Ut.height=Qt,Ut.getContext("2d").drawImage(O,0,0,ct,Qt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+mt.width+"x"+mt.height+") to ("+ct+"x"+Qt+")."),Ut}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+mt.width+"x"+mt.height+")."),O;return O}function S(O){return O.generateMipmaps}function _(O){s.generateMipmap(O)}function E(O){return O.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:O.isWebGL3DRenderTarget?s.TEXTURE_3D:O.isWebGLArrayRenderTarget||O.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function A(O,D,K,rt,mt=!1){if(O!==null){if(s[O]!==void 0)return s[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let ct=D;if(D===s.RED&&(K===s.FLOAT&&(ct=s.R32F),K===s.HALF_FLOAT&&(ct=s.R16F),K===s.UNSIGNED_BYTE&&(ct=s.R8)),D===s.RED_INTEGER&&(K===s.UNSIGNED_BYTE&&(ct=s.R8UI),K===s.UNSIGNED_SHORT&&(ct=s.R16UI),K===s.UNSIGNED_INT&&(ct=s.R32UI),K===s.BYTE&&(ct=s.R8I),K===s.SHORT&&(ct=s.R16I),K===s.INT&&(ct=s.R32I)),D===s.RG&&(K===s.FLOAT&&(ct=s.RG32F),K===s.HALF_FLOAT&&(ct=s.RG16F),K===s.UNSIGNED_BYTE&&(ct=s.RG8)),D===s.RG_INTEGER&&(K===s.UNSIGNED_BYTE&&(ct=s.RG8UI),K===s.UNSIGNED_SHORT&&(ct=s.RG16UI),K===s.UNSIGNED_INT&&(ct=s.RG32UI),K===s.BYTE&&(ct=s.RG8I),K===s.SHORT&&(ct=s.RG16I),K===s.INT&&(ct=s.RG32I)),D===s.RGB_INTEGER&&(K===s.UNSIGNED_BYTE&&(ct=s.RGB8UI),K===s.UNSIGNED_SHORT&&(ct=s.RGB16UI),K===s.UNSIGNED_INT&&(ct=s.RGB32UI),K===s.BYTE&&(ct=s.RGB8I),K===s.SHORT&&(ct=s.RGB16I),K===s.INT&&(ct=s.RGB32I)),D===s.RGBA_INTEGER&&(K===s.UNSIGNED_BYTE&&(ct=s.RGBA8UI),K===s.UNSIGNED_SHORT&&(ct=s.RGBA16UI),K===s.UNSIGNED_INT&&(ct=s.RGBA32UI),K===s.BYTE&&(ct=s.RGBA8I),K===s.SHORT&&(ct=s.RGBA16I),K===s.INT&&(ct=s.RGBA32I)),D===s.RGB&&(K===s.UNSIGNED_INT_5_9_9_9_REV&&(ct=s.RGB9_E5),K===s.UNSIGNED_INT_10F_11F_11F_REV&&(ct=s.R11F_G11F_B10F)),D===s.RGBA){const Qt=mt?Yl:Re.getTransfer(rt);K===s.FLOAT&&(ct=s.RGBA32F),K===s.HALF_FLOAT&&(ct=s.RGBA16F),K===s.UNSIGNED_BYTE&&(ct=Qt===Ve?s.SRGB8_ALPHA8:s.RGBA8),K===s.UNSIGNED_SHORT_4_4_4_4&&(ct=s.RGBA4),K===s.UNSIGNED_SHORT_5_5_5_1&&(ct=s.RGB5_A1)}return(ct===s.R16F||ct===s.R32F||ct===s.RG16F||ct===s.RG32F||ct===s.RGBA16F||ct===s.RGBA32F)&&t.get("EXT_color_buffer_float"),ct}function T(O,D){let K;return O?D===null||D===Hs||D===Eo?K=s.DEPTH24_STENCIL8:D===ri?K=s.DEPTH32F_STENCIL8:D===bo&&(K=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):D===null||D===Hs||D===Eo?K=s.DEPTH_COMPONENT24:D===ri?K=s.DEPTH_COMPONENT32F:D===bo&&(K=s.DEPTH_COMPONENT16),K}function N(O,D){return S(O)===!0||O.isFramebufferTexture&&O.minFilter!==Cn&&O.minFilter!==mn?Math.log2(Math.max(D.width,D.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?D.mipmaps.length:1}function R(O){const D=O.target;D.removeEventListener("dispose",R),z(D),D.isVideoTexture&&p.delete(D)}function L(O){const D=O.target;D.removeEventListener("dispose",L),w(D)}function z(O){const D=n.get(O);if(D.__webglInit===void 0)return;const K=O.source,rt=g.get(K);if(rt){const mt=rt[D.__cacheKey];mt.usedTimes--,mt.usedTimes===0&&C(O),Object.keys(rt).length===0&&g.delete(K)}n.remove(O)}function C(O){const D=n.get(O);s.deleteTexture(D.__webglTexture);const K=O.source,rt=g.get(K);delete rt[D.__cacheKey],l.memory.textures--}function w(O){const D=n.get(O);if(O.depthTexture&&(O.depthTexture.dispose(),n.remove(O.depthTexture)),O.isWebGLCubeRenderTarget)for(let rt=0;rt<6;rt++){if(Array.isArray(D.__webglFramebuffer[rt]))for(let mt=0;mt<D.__webglFramebuffer[rt].length;mt++)s.deleteFramebuffer(D.__webglFramebuffer[rt][mt]);else s.deleteFramebuffer(D.__webglFramebuffer[rt]);D.__webglDepthbuffer&&s.deleteRenderbuffer(D.__webglDepthbuffer[rt])}else{if(Array.isArray(D.__webglFramebuffer))for(let rt=0;rt<D.__webglFramebuffer.length;rt++)s.deleteFramebuffer(D.__webglFramebuffer[rt]);else s.deleteFramebuffer(D.__webglFramebuffer);if(D.__webglDepthbuffer&&s.deleteRenderbuffer(D.__webglDepthbuffer),D.__webglMultisampledFramebuffer&&s.deleteFramebuffer(D.__webglMultisampledFramebuffer),D.__webglColorRenderbuffer)for(let rt=0;rt<D.__webglColorRenderbuffer.length;rt++)D.__webglColorRenderbuffer[rt]&&s.deleteRenderbuffer(D.__webglColorRenderbuffer[rt]);D.__webglDepthRenderbuffer&&s.deleteRenderbuffer(D.__webglDepthRenderbuffer)}const K=O.textures;for(let rt=0,mt=K.length;rt<mt;rt++){const ct=n.get(K[rt]);ct.__webglTexture&&(s.deleteTexture(ct.__webglTexture),l.memory.textures--),n.remove(K[rt])}n.remove(O)}let B=0;function Y(){B=0}function W(){const O=B;return O>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+i.maxTextures),B+=1,O}function $(O){const D=[];return D.push(O.wrapS),D.push(O.wrapT),D.push(O.wrapR||0),D.push(O.magFilter),D.push(O.minFilter),D.push(O.anisotropy),D.push(O.internalFormat),D.push(O.format),D.push(O.type),D.push(O.generateMipmaps),D.push(O.premultiplyAlpha),D.push(O.flipY),D.push(O.unpackAlignment),D.push(O.colorSpace),D.join()}function et(O,D){const K=n.get(O);if(O.isVideoTexture&&Tt(O),O.isRenderTargetTexture===!1&&O.isExternalTexture!==!0&&O.version>0&&K.__version!==O.version){const rt=O.image;if(rt===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(rt.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ut(K,O,D);return}}else O.isExternalTexture&&(K.__webglTexture=O.sourceTexture?O.sourceTexture:null);e.bindTexture(s.TEXTURE_2D,K.__webglTexture,s.TEXTURE0+D)}function k(O,D){const K=n.get(O);if(O.isRenderTargetTexture===!1&&O.version>0&&K.__version!==O.version){ut(K,O,D);return}e.bindTexture(s.TEXTURE_2D_ARRAY,K.__webglTexture,s.TEXTURE0+D)}function Q(O,D){const K=n.get(O);if(O.isRenderTargetTexture===!1&&O.version>0&&K.__version!==O.version){ut(K,O,D);return}e.bindTexture(s.TEXTURE_3D,K.__webglTexture,s.TEXTURE0+D)}function X(O,D){const K=n.get(O);if(O.version>0&&K.__version!==O.version){xt(K,O,D);return}e.bindTexture(s.TEXTURE_CUBE_MAP,K.__webglTexture,s.TEXTURE0+D)}const lt={[kl]:s.REPEAT,[Li]:s.CLAMP_TO_EDGE,[Wl]:s.MIRRORED_REPEAT},_t={[Cn]:s.NEAREST,[Cm]:s.NEAREST_MIPMAP_NEAREST,[vo]:s.NEAREST_MIPMAP_LINEAR,[mn]:s.LINEAR,[Ul]:s.LINEAR_MIPMAP_NEAREST,[as]:s.LINEAR_MIPMAP_LINEAR},St={[fx]:s.NEVER,[_x]:s.ALWAYS,[dx]:s.LESS,[zm]:s.LEQUAL,[px]:s.EQUAL,[vx]:s.GEQUAL,[mx]:s.GREATER,[gx]:s.NOTEQUAL};function Lt(O,D){if(D.type===ri&&t.has("OES_texture_float_linear")===!1&&(D.magFilter===mn||D.magFilter===Ul||D.magFilter===vo||D.magFilter===as||D.minFilter===mn||D.minFilter===Ul||D.minFilter===vo||D.minFilter===as)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(O,s.TEXTURE_WRAP_S,lt[D.wrapS]),s.texParameteri(O,s.TEXTURE_WRAP_T,lt[D.wrapT]),(O===s.TEXTURE_3D||O===s.TEXTURE_2D_ARRAY)&&s.texParameteri(O,s.TEXTURE_WRAP_R,lt[D.wrapR]),s.texParameteri(O,s.TEXTURE_MAG_FILTER,_t[D.magFilter]),s.texParameteri(O,s.TEXTURE_MIN_FILTER,_t[D.minFilter]),D.compareFunction&&(s.texParameteri(O,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(O,s.TEXTURE_COMPARE_FUNC,St[D.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(D.magFilter===Cn||D.minFilter!==vo&&D.minFilter!==as||D.type===ri&&t.has("OES_texture_float_linear")===!1)return;if(D.anisotropy>1||n.get(D).__currentAnisotropy){const K=t.get("EXT_texture_filter_anisotropic");s.texParameterf(O,K.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(D.anisotropy,i.getMaxAnisotropy())),n.get(D).__currentAnisotropy=D.anisotropy}}}function Yt(O,D){let K=!1;O.__webglInit===void 0&&(O.__webglInit=!0,D.addEventListener("dispose",R));const rt=D.source;let mt=g.get(rt);mt===void 0&&(mt={},g.set(rt,mt));const ct=$(D);if(ct!==O.__cacheKey){mt[ct]===void 0&&(mt[ct]={texture:s.createTexture(),usedTimes:0},l.memory.textures++,K=!0),mt[ct].usedTimes++;const Qt=mt[O.__cacheKey];Qt!==void 0&&(mt[O.__cacheKey].usedTimes--,Qt.usedTimes===0&&C(D)),O.__cacheKey=ct,O.__webglTexture=mt[ct].texture}return K}function Zt(O,D,K){return Math.floor(Math.floor(O/K)/D)}function ie(O,D,K,rt){const ct=O.updateRanges;if(ct.length===0)e.texSubImage2D(s.TEXTURE_2D,0,0,0,D.width,D.height,K,rt,D.data);else{ct.sort((bt,It)=>bt.start-It.start);let Qt=0;for(let bt=1;bt<ct.length;bt++){const It=ct[Qt],ee=ct[bt],H=It.start+It.count,nt=Zt(ee.start,D.width,4),At=Zt(It.start,D.width,4);ee.start<=H+1&&nt===At&&Zt(ee.start+ee.count-1,D.width,4)===nt?It.count=Math.max(It.count,ee.start+ee.count-It.start):(++Qt,ct[Qt]=ee)}ct.length=Qt+1;const Ut=s.getParameter(s.UNPACK_ROW_LENGTH),jt=s.getParameter(s.UNPACK_SKIP_PIXELS),Kt=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,D.width);for(let bt=0,It=ct.length;bt<It;bt++){const ee=ct[bt],H=Math.floor(ee.start/4),nt=Math.ceil(ee.count/4),At=H%D.width,V=Math.floor(H/D.width),yt=nt,wt=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,At),s.pixelStorei(s.UNPACK_SKIP_ROWS,V),e.texSubImage2D(s.TEXTURE_2D,0,At,V,yt,wt,K,rt,D.data)}O.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,Ut),s.pixelStorei(s.UNPACK_SKIP_PIXELS,jt),s.pixelStorei(s.UNPACK_SKIP_ROWS,Kt)}}function ut(O,D,K){let rt=s.TEXTURE_2D;(D.isDataArrayTexture||D.isCompressedArrayTexture)&&(rt=s.TEXTURE_2D_ARRAY),D.isData3DTexture&&(rt=s.TEXTURE_3D);const mt=Yt(O,D),ct=D.source;e.bindTexture(rt,O.__webglTexture,s.TEXTURE0+K);const Qt=n.get(ct);if(ct.version!==Qt.__version||mt===!0){e.activeTexture(s.TEXTURE0+K);const Ut=Re.getPrimaries(Re.workingColorSpace),jt=D.colorSpace===Ls?null:Re.getPrimaries(D.colorSpace),Kt=D.colorSpace===Ls||Ut===jt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,D.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,D.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Kt);let bt=b(D.image,!1,i.maxTextureSize);bt=re(D,bt);const It=r.convert(D.format,D.colorSpace),ee=r.convert(D.type);let H=A(D.internalFormat,It,ee,D.colorSpace,D.isVideoTexture);Lt(rt,D);let nt;const At=D.mipmaps,V=D.isVideoTexture!==!0,yt=Qt.__version===void 0||mt===!0,wt=ct.dataReady,Ht=N(D,bt);if(D.isDepthTexture)H=T(D.format===Ao,D.type),yt&&(V?e.texStorage2D(s.TEXTURE_2D,1,H,bt.width,bt.height):e.texImage2D(s.TEXTURE_2D,0,H,bt.width,bt.height,0,It,ee,null));else if(D.isDataTexture)if(At.length>0){V&&yt&&e.texStorage2D(s.TEXTURE_2D,Ht,H,At[0].width,At[0].height);for(let Et=0,vt=At.length;Et<vt;Et++)nt=At[Et],V?wt&&e.texSubImage2D(s.TEXTURE_2D,Et,0,0,nt.width,nt.height,It,ee,nt.data):e.texImage2D(s.TEXTURE_2D,Et,H,nt.width,nt.height,0,It,ee,nt.data);D.generateMipmaps=!1}else V?(yt&&e.texStorage2D(s.TEXTURE_2D,Ht,H,bt.width,bt.height),wt&&ie(D,bt,It,ee)):e.texImage2D(s.TEXTURE_2D,0,H,bt.width,bt.height,0,It,ee,bt.data);else if(D.isCompressedTexture)if(D.isCompressedArrayTexture){V&&yt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Ht,H,At[0].width,At[0].height,bt.depth);for(let Et=0,vt=At.length;Et<vt;Et++)if(nt=At[Et],D.format!==Hn)if(It!==null)if(V){if(wt)if(D.layerUpdates.size>0){const Vt=gm(nt.width,nt.height,D.format,D.type);for(const ne of D.layerUpdates){const Te=nt.data.subarray(ne*Vt/nt.data.BYTES_PER_ELEMENT,(ne+1)*Vt/nt.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Et,0,0,ne,nt.width,nt.height,1,It,Te)}D.clearLayerUpdates()}else e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Et,0,0,0,nt.width,nt.height,bt.depth,It,nt.data)}else e.compressedTexImage3D(s.TEXTURE_2D_ARRAY,Et,H,nt.width,nt.height,bt.depth,0,nt.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else V?wt&&e.texSubImage3D(s.TEXTURE_2D_ARRAY,Et,0,0,0,nt.width,nt.height,bt.depth,It,ee,nt.data):e.texImage3D(s.TEXTURE_2D_ARRAY,Et,H,nt.width,nt.height,bt.depth,0,It,ee,nt.data)}else{V&&yt&&e.texStorage2D(s.TEXTURE_2D,Ht,H,At[0].width,At[0].height);for(let Et=0,vt=At.length;Et<vt;Et++)nt=At[Et],D.format!==Hn?It!==null?V?wt&&e.compressedTexSubImage2D(s.TEXTURE_2D,Et,0,0,nt.width,nt.height,It,nt.data):e.compressedTexImage2D(s.TEXTURE_2D,Et,H,nt.width,nt.height,0,nt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):V?wt&&e.texSubImage2D(s.TEXTURE_2D,Et,0,0,nt.width,nt.height,It,ee,nt.data):e.texImage2D(s.TEXTURE_2D,Et,H,nt.width,nt.height,0,It,ee,nt.data)}else if(D.isDataArrayTexture)if(V){if(yt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Ht,H,bt.width,bt.height,bt.depth),wt)if(D.layerUpdates.size>0){const Et=gm(bt.width,bt.height,D.format,D.type);for(const vt of D.layerUpdates){const Vt=bt.data.subarray(vt*Et/bt.data.BYTES_PER_ELEMENT,(vt+1)*Et/bt.data.BYTES_PER_ELEMENT);e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,vt,bt.width,bt.height,1,It,ee,Vt)}D.clearLayerUpdates()}else e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,bt.width,bt.height,bt.depth,It,ee,bt.data)}else e.texImage3D(s.TEXTURE_2D_ARRAY,0,H,bt.width,bt.height,bt.depth,0,It,ee,bt.data);else if(D.isData3DTexture)V?(yt&&e.texStorage3D(s.TEXTURE_3D,Ht,H,bt.width,bt.height,bt.depth),wt&&e.texSubImage3D(s.TEXTURE_3D,0,0,0,0,bt.width,bt.height,bt.depth,It,ee,bt.data)):e.texImage3D(s.TEXTURE_3D,0,H,bt.width,bt.height,bt.depth,0,It,ee,bt.data);else if(D.isFramebufferTexture){if(yt)if(V)e.texStorage2D(s.TEXTURE_2D,Ht,H,bt.width,bt.height);else{let Et=bt.width,vt=bt.height;for(let Vt=0;Vt<Ht;Vt++)e.texImage2D(s.TEXTURE_2D,Vt,H,Et,vt,0,It,ee,null),Et>>=1,vt>>=1}}else if(At.length>0){if(V&&yt){const Et=ce(At[0]);e.texStorage2D(s.TEXTURE_2D,Ht,H,Et.width,Et.height)}for(let Et=0,vt=At.length;Et<vt;Et++)nt=At[Et],V?wt&&e.texSubImage2D(s.TEXTURE_2D,Et,0,0,It,ee,nt):e.texImage2D(s.TEXTURE_2D,Et,H,It,ee,nt);D.generateMipmaps=!1}else if(V){if(yt){const Et=ce(bt);e.texStorage2D(s.TEXTURE_2D,Ht,H,Et.width,Et.height)}wt&&e.texSubImage2D(s.TEXTURE_2D,0,0,0,It,ee,bt)}else e.texImage2D(s.TEXTURE_2D,0,H,It,ee,bt);S(D)&&_(rt),Qt.__version=ct.version,D.onUpdate&&D.onUpdate(D)}O.__version=D.version}function xt(O,D,K){if(D.image.length!==6)return;const rt=Yt(O,D),mt=D.source;e.bindTexture(s.TEXTURE_CUBE_MAP,O.__webglTexture,s.TEXTURE0+K);const ct=n.get(mt);if(mt.version!==ct.__version||rt===!0){e.activeTexture(s.TEXTURE0+K);const Qt=Re.getPrimaries(Re.workingColorSpace),Ut=D.colorSpace===Ls?null:Re.getPrimaries(D.colorSpace),jt=D.colorSpace===Ls||Qt===Ut?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,D.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,D.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,jt);const Kt=D.isCompressedTexture||D.image[0].isCompressedTexture,bt=D.image[0]&&D.image[0].isDataTexture,It=[];for(let vt=0;vt<6;vt++)!Kt&&!bt?It[vt]=b(D.image[vt],!0,i.maxCubemapSize):It[vt]=bt?D.image[vt].image:D.image[vt],It[vt]=re(D,It[vt]);const ee=It[0],H=r.convert(D.format,D.colorSpace),nt=r.convert(D.type),At=A(D.internalFormat,H,nt,D.colorSpace),V=D.isVideoTexture!==!0,yt=ct.__version===void 0||rt===!0,wt=mt.dataReady;let Ht=N(D,ee);Lt(s.TEXTURE_CUBE_MAP,D);let Et;if(Kt){V&&yt&&e.texStorage2D(s.TEXTURE_CUBE_MAP,Ht,At,ee.width,ee.height);for(let vt=0;vt<6;vt++){Et=It[vt].mipmaps;for(let Vt=0;Vt<Et.length;Vt++){const ne=Et[Vt];D.format!==Hn?H!==null?V?wt&&e.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+vt,Vt,0,0,ne.width,ne.height,H,ne.data):e.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+vt,Vt,At,ne.width,ne.height,0,ne.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):V?wt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+vt,Vt,0,0,ne.width,ne.height,H,nt,ne.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+vt,Vt,At,ne.width,ne.height,0,H,nt,ne.data)}}}else{if(Et=D.mipmaps,V&&yt){Et.length>0&&Ht++;const vt=ce(It[0]);e.texStorage2D(s.TEXTURE_CUBE_MAP,Ht,At,vt.width,vt.height)}for(let vt=0;vt<6;vt++)if(bt){V?wt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+vt,0,0,0,It[vt].width,It[vt].height,H,nt,It[vt].data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+vt,0,At,It[vt].width,It[vt].height,0,H,nt,It[vt].data);for(let Vt=0;Vt<Et.length;Vt++){const Te=Et[Vt].image[vt].image;V?wt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+vt,Vt+1,0,0,Te.width,Te.height,H,nt,Te.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+vt,Vt+1,At,Te.width,Te.height,0,H,nt,Te.data)}}else{V?wt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+vt,0,0,0,H,nt,It[vt]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+vt,0,At,H,nt,It[vt]);for(let Vt=0;Vt<Et.length;Vt++){const ne=Et[Vt];V?wt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+vt,Vt+1,0,0,H,nt,ne.image[vt]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+vt,Vt+1,At,H,nt,ne.image[vt])}}}S(D)&&_(s.TEXTURE_CUBE_MAP),ct.__version=mt.version,D.onUpdate&&D.onUpdate(D)}O.__version=D.version}function zt(O,D,K,rt,mt,ct){const Qt=r.convert(K.format,K.colorSpace),Ut=r.convert(K.type),jt=A(K.internalFormat,Qt,Ut,K.colorSpace),Kt=n.get(D),bt=n.get(K);if(bt.__renderTarget=D,!Kt.__hasExternalTextures){const It=Math.max(1,D.width>>ct),ee=Math.max(1,D.height>>ct);mt===s.TEXTURE_3D||mt===s.TEXTURE_2D_ARRAY?e.texImage3D(mt,ct,jt,It,ee,D.depth,0,Qt,Ut,null):e.texImage2D(mt,ct,jt,It,ee,0,Qt,Ut,null)}e.bindFramebuffer(s.FRAMEBUFFER,O),Mt(D)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,rt,mt,bt.__webglTexture,0,Nt(D)):(mt===s.TEXTURE_2D||mt>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&mt<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,rt,mt,bt.__webglTexture,ct),e.bindFramebuffer(s.FRAMEBUFFER,null)}function te(O,D,K){if(s.bindRenderbuffer(s.RENDERBUFFER,O),D.depthBuffer){const rt=D.depthTexture,mt=rt&&rt.isDepthTexture?rt.type:null,ct=T(D.stencilBuffer,mt),Qt=D.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ut=Nt(D);Mt(D)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ut,ct,D.width,D.height):K?s.renderbufferStorageMultisample(s.RENDERBUFFER,Ut,ct,D.width,D.height):s.renderbufferStorage(s.RENDERBUFFER,ct,D.width,D.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Qt,s.RENDERBUFFER,O)}else{const rt=D.textures;for(let mt=0;mt<rt.length;mt++){const ct=rt[mt],Qt=r.convert(ct.format,ct.colorSpace),Ut=r.convert(ct.type),jt=A(ct.internalFormat,Qt,Ut,ct.colorSpace),Kt=Nt(D);K&&Mt(D)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Kt,jt,D.width,D.height):Mt(D)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Kt,jt,D.width,D.height):s.renderbufferStorage(s.RENDERBUFFER,jt,D.width,D.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Bt(O,D){if(D&&D.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(s.FRAMEBUFFER,O),!(D.depthTexture&&D.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const rt=n.get(D.depthTexture);rt.__renderTarget=D,(!rt.__webglTexture||D.depthTexture.image.width!==D.width||D.depthTexture.image.height!==D.height)&&(D.depthTexture.image.width=D.width,D.depthTexture.image.height=D.height,D.depthTexture.needsUpdate=!0),et(D.depthTexture,0);const mt=rt.__webglTexture,ct=Nt(D);if(D.depthTexture.format===To)Mt(D)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,mt,0,ct):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,mt,0);else if(D.depthTexture.format===Ao)Mt(D)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,mt,0,ct):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,mt,0);else throw new Error("Unknown depthTexture format")}function kt(O){const D=n.get(O),K=O.isWebGLCubeRenderTarget===!0;if(D.__boundDepthTexture!==O.depthTexture){const rt=O.depthTexture;if(D.__depthDisposeCallback&&D.__depthDisposeCallback(),rt){const mt=()=>{delete D.__boundDepthTexture,delete D.__depthDisposeCallback,rt.removeEventListener("dispose",mt)};rt.addEventListener("dispose",mt),D.__depthDisposeCallback=mt}D.__boundDepthTexture=rt}if(O.depthTexture&&!D.__autoAllocateDepthBuffer){if(K)throw new Error("target.depthTexture not supported in Cube render targets");const rt=O.texture.mipmaps;rt&&rt.length>0?Bt(D.__webglFramebuffer[0],O):Bt(D.__webglFramebuffer,O)}else if(K){D.__webglDepthbuffer=[];for(let rt=0;rt<6;rt++)if(e.bindFramebuffer(s.FRAMEBUFFER,D.__webglFramebuffer[rt]),D.__webglDepthbuffer[rt]===void 0)D.__webglDepthbuffer[rt]=s.createRenderbuffer(),te(D.__webglDepthbuffer[rt],O,!1);else{const mt=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ct=D.__webglDepthbuffer[rt];s.bindRenderbuffer(s.RENDERBUFFER,ct),s.framebufferRenderbuffer(s.FRAMEBUFFER,mt,s.RENDERBUFFER,ct)}}else{const rt=O.texture.mipmaps;if(rt&&rt.length>0?e.bindFramebuffer(s.FRAMEBUFFER,D.__webglFramebuffer[0]):e.bindFramebuffer(s.FRAMEBUFFER,D.__webglFramebuffer),D.__webglDepthbuffer===void 0)D.__webglDepthbuffer=s.createRenderbuffer(),te(D.__webglDepthbuffer,O,!1);else{const mt=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ct=D.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,ct),s.framebufferRenderbuffer(s.FRAMEBUFFER,mt,s.RENDERBUFFER,ct)}}e.bindFramebuffer(s.FRAMEBUFFER,null)}function ge(O,D,K){const rt=n.get(O);D!==void 0&&zt(rt.__webglFramebuffer,O,O.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),K!==void 0&&kt(O)}function F(O){const D=O.texture,K=n.get(O),rt=n.get(D);O.addEventListener("dispose",L);const mt=O.textures,ct=O.isWebGLCubeRenderTarget===!0,Qt=mt.length>1;if(Qt||(rt.__webglTexture===void 0&&(rt.__webglTexture=s.createTexture()),rt.__version=D.version,l.memory.textures++),ct){K.__webglFramebuffer=[];for(let Ut=0;Ut<6;Ut++)if(D.mipmaps&&D.mipmaps.length>0){K.__webglFramebuffer[Ut]=[];for(let jt=0;jt<D.mipmaps.length;jt++)K.__webglFramebuffer[Ut][jt]=s.createFramebuffer()}else K.__webglFramebuffer[Ut]=s.createFramebuffer()}else{if(D.mipmaps&&D.mipmaps.length>0){K.__webglFramebuffer=[];for(let Ut=0;Ut<D.mipmaps.length;Ut++)K.__webglFramebuffer[Ut]=s.createFramebuffer()}else K.__webglFramebuffer=s.createFramebuffer();if(Qt)for(let Ut=0,jt=mt.length;Ut<jt;Ut++){const Kt=n.get(mt[Ut]);Kt.__webglTexture===void 0&&(Kt.__webglTexture=s.createTexture(),l.memory.textures++)}if(O.samples>0&&Mt(O)===!1){K.__webglMultisampledFramebuffer=s.createFramebuffer(),K.__webglColorRenderbuffer=[],e.bindFramebuffer(s.FRAMEBUFFER,K.__webglMultisampledFramebuffer);for(let Ut=0;Ut<mt.length;Ut++){const jt=mt[Ut];K.__webglColorRenderbuffer[Ut]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,K.__webglColorRenderbuffer[Ut]);const Kt=r.convert(jt.format,jt.colorSpace),bt=r.convert(jt.type),It=A(jt.internalFormat,Kt,bt,jt.colorSpace,O.isXRRenderTarget===!0),ee=Nt(O);s.renderbufferStorageMultisample(s.RENDERBUFFER,ee,It,O.width,O.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ut,s.RENDERBUFFER,K.__webglColorRenderbuffer[Ut])}s.bindRenderbuffer(s.RENDERBUFFER,null),O.depthBuffer&&(K.__webglDepthRenderbuffer=s.createRenderbuffer(),te(K.__webglDepthRenderbuffer,O,!0)),e.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ct){e.bindTexture(s.TEXTURE_CUBE_MAP,rt.__webglTexture),Lt(s.TEXTURE_CUBE_MAP,D);for(let Ut=0;Ut<6;Ut++)if(D.mipmaps&&D.mipmaps.length>0)for(let jt=0;jt<D.mipmaps.length;jt++)zt(K.__webglFramebuffer[Ut][jt],O,D,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ut,jt);else zt(K.__webglFramebuffer[Ut],O,D,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ut,0);S(D)&&_(s.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Qt){for(let Ut=0,jt=mt.length;Ut<jt;Ut++){const Kt=mt[Ut],bt=n.get(Kt);let It=s.TEXTURE_2D;(O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(It=O.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(It,bt.__webglTexture),Lt(It,Kt),zt(K.__webglFramebuffer,O,Kt,s.COLOR_ATTACHMENT0+Ut,It,0),S(Kt)&&_(It)}e.unbindTexture()}else{let Ut=s.TEXTURE_2D;if((O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(Ut=O.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(Ut,rt.__webglTexture),Lt(Ut,D),D.mipmaps&&D.mipmaps.length>0)for(let jt=0;jt<D.mipmaps.length;jt++)zt(K.__webglFramebuffer[jt],O,D,s.COLOR_ATTACHMENT0,Ut,jt);else zt(K.__webglFramebuffer,O,D,s.COLOR_ATTACHMENT0,Ut,0);S(D)&&_(Ut),e.unbindTexture()}O.depthBuffer&&kt(O)}function gt(O){const D=O.textures;for(let K=0,rt=D.length;K<rt;K++){const mt=D[K];if(S(mt)){const ct=E(O),Qt=n.get(mt).__webglTexture;e.bindTexture(ct,Qt),_(ct),e.unbindTexture()}}}const ht=[],ft=[];function ot(O){if(O.samples>0){if(Mt(O)===!1){const D=O.textures,K=O.width,rt=O.height;let mt=s.COLOR_BUFFER_BIT;const ct=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Qt=n.get(O),Ut=D.length>1;if(Ut)for(let Kt=0;Kt<D.length;Kt++)e.bindFramebuffer(s.FRAMEBUFFER,Qt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Kt,s.RENDERBUFFER,null),e.bindFramebuffer(s.FRAMEBUFFER,Qt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Kt,s.TEXTURE_2D,null,0);e.bindFramebuffer(s.READ_FRAMEBUFFER,Qt.__webglMultisampledFramebuffer);const jt=O.texture.mipmaps;jt&&jt.length>0?e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Qt.__webglFramebuffer[0]):e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Qt.__webglFramebuffer);for(let Kt=0;Kt<D.length;Kt++){if(O.resolveDepthBuffer&&(O.depthBuffer&&(mt|=s.DEPTH_BUFFER_BIT),O.stencilBuffer&&O.resolveStencilBuffer&&(mt|=s.STENCIL_BUFFER_BIT)),Ut){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Qt.__webglColorRenderbuffer[Kt]);const bt=n.get(D[Kt]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,bt,0)}s.blitFramebuffer(0,0,K,rt,0,0,K,rt,mt,s.NEAREST),h===!0&&(ht.length=0,ft.length=0,ht.push(s.COLOR_ATTACHMENT0+Kt),O.depthBuffer&&O.resolveDepthBuffer===!1&&(ht.push(ct),ft.push(ct),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,ft)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,ht))}if(e.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Ut)for(let Kt=0;Kt<D.length;Kt++){e.bindFramebuffer(s.FRAMEBUFFER,Qt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Kt,s.RENDERBUFFER,Qt.__webglColorRenderbuffer[Kt]);const bt=n.get(D[Kt]).__webglTexture;e.bindFramebuffer(s.FRAMEBUFFER,Qt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Kt,s.TEXTURE_2D,bt,0)}e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Qt.__webglMultisampledFramebuffer)}else if(O.depthBuffer&&O.resolveDepthBuffer===!1&&h){const D=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[D])}}}function Nt(O){return Math.min(i.maxSamples,O.samples)}function Mt(O){const D=n.get(O);return O.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&D.__useRenderToTexture!==!1}function Tt(O){const D=l.render.frame;p.get(O)!==D&&(p.set(O,D),O.update())}function re(O,D){const K=O.colorSpace,rt=O.format,mt=O.type;return O.isCompressedTexture===!0||O.isVideoTexture===!0||K!==ma&&K!==Ls&&(Re.getTransfer(K)===Ve?(rt!==Hn||mt!==Ii)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",K)),D}function ce(O){return typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement?(f.width=O.naturalWidth||O.width,f.height=O.naturalHeight||O.height):typeof VideoFrame<"u"&&O instanceof VideoFrame?(f.width=O.displayWidth,f.height=O.displayHeight):(f.width=O.width,f.height=O.height),f}this.allocateTextureUnit=W,this.resetTextureUnits=Y,this.setTexture2D=et,this.setTexture2DArray=k,this.setTexture3D=Q,this.setTextureCube=X,this.rebindTextures=ge,this.setupRenderTarget=F,this.updateRenderTargetMipmap=gt,this.updateMultisampleRenderTarget=ot,this.setupDepthRenderbuffer=kt,this.setupFrameBufferTexture=zt,this.useMultisampledRTT=Mt}function CS(s,t){function e(n,i=Ls){let r;const l=Re.getTransfer(i);if(n===Ii)return s.UNSIGNED_BYTE;if(n===jh)return s.UNSIGNED_SHORT_4_4_4_4;if(n===Kh)return s.UNSIGNED_SHORT_5_5_5_1;if(n===Nm)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===Um)return s.UNSIGNED_INT_10F_11F_11F_REV;if(n===Rm)return s.BYTE;if(n===Dm)return s.SHORT;if(n===bo)return s.UNSIGNED_SHORT;if(n===Zh)return s.INT;if(n===Hs)return s.UNSIGNED_INT;if(n===ri)return s.FLOAT;if(n===Io)return s.HALF_FLOAT;if(n===Pm)return s.ALPHA;if(n===Lm)return s.RGB;if(n===Hn)return s.RGBA;if(n===To)return s.DEPTH_COMPONENT;if(n===Ao)return s.DEPTH_STENCIL;if(n===Jh)return s.RED;if(n===rc)return s.RED_INTEGER;if(n===Im)return s.RG;if(n===Qh)return s.RG_INTEGER;if(n===$h)return s.RGBA_INTEGER;if(n===Pl||n===Ll||n===Il||n===Ol)if(l===Ve)if(r=t.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===Pl)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Ll)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Il)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Ol)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=t.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===Pl)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Ll)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Il)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Ol)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===lh||n===ch||n===uh||n===hh)if(r=t.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===lh)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===ch)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===uh)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===hh)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===fh||n===dh||n===ph)if(r=t.get("WEBGL_compressed_texture_etc"),r!==null){if(n===fh||n===dh)return l===Ve?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===ph)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===mh||n===gh||n===vh||n===_h||n===yh||n===xh||n===Sh||n===Mh||n===bh||n===Eh||n===Th||n===Ah||n===wh||n===Ch)if(r=t.get("WEBGL_compressed_texture_astc"),r!==null){if(n===mh)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===gh)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===vh)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===_h)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===yh)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===xh)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Sh)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Mh)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===bh)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Eh)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Th)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Ah)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===wh)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Ch)return l===Ve?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Rh||n===Dh||n===Nh)if(r=t.get("EXT_texture_compression_bptc"),r!==null){if(n===Rh)return l===Ve?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Dh)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Nh)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Uh||n===Ph||n===Lh||n===Ih)if(r=t.get("EXT_texture_compression_rgtc"),r!==null){if(n===Uh)return r.COMPRESSED_RED_RGTC1_EXT;if(n===Ph)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Lh)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Ih)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Eo?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:e}}const y3=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,x3=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class S3{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e){if(this.texture===null){const n=new Ym(t.texture);(t.depthNear!==e.depthNear||t.depthFar!==e.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new Ki({vertexShader:y3,fragmentShader:x3,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new dn(new zo(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class M3 extends hs{constructor(t,e){super();const n=this;let i=null,r=1,l=null,c="local-floor",h=1,f=null,p=null,m=null,g=null,v=null,x=null;const b=typeof XRWebGLBinding<"u",S=new S3,_={},E=e.getContextAttributes();let A=null,T=null;const N=[],R=[],L=new dt;let z=null;const C=new en;C.viewport=new Pe;const w=new en;w.viewport=new Pe;const B=[C,w],Y=new vS;let W=null,$=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ut){let xt=N[ut];return xt===void 0&&(xt=new Zu,N[ut]=xt),xt.getTargetRaySpace()},this.getControllerGrip=function(ut){let xt=N[ut];return xt===void 0&&(xt=new Zu,N[ut]=xt),xt.getGripSpace()},this.getHand=function(ut){let xt=N[ut];return xt===void 0&&(xt=new Zu,N[ut]=xt),xt.getHandSpace()};function et(ut){const xt=R.indexOf(ut.inputSource);if(xt===-1)return;const zt=N[xt];zt!==void 0&&(zt.update(ut.inputSource,ut.frame,f||l),zt.dispatchEvent({type:ut.type,data:ut.inputSource}))}function k(){i.removeEventListener("select",et),i.removeEventListener("selectstart",et),i.removeEventListener("selectend",et),i.removeEventListener("squeeze",et),i.removeEventListener("squeezestart",et),i.removeEventListener("squeezeend",et),i.removeEventListener("end",k),i.removeEventListener("inputsourceschange",Q);for(let ut=0;ut<N.length;ut++){const xt=R[ut];xt!==null&&(R[ut]=null,N[ut].disconnect(xt))}W=null,$=null,S.reset();for(const ut in _)delete _[ut];t.setRenderTarget(A),v=null,g=null,m=null,i=null,T=null,ie.stop(),n.isPresenting=!1,t.setPixelRatio(z),t.setSize(L.width,L.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ut){r=ut,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ut){c=ut,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||l},this.setReferenceSpace=function(ut){f=ut},this.getBaseLayer=function(){return g!==null?g:v},this.getBinding=function(){return m===null&&b&&(m=new XRWebGLBinding(i,e)),m},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(ut){if(i=ut,i!==null){if(A=t.getRenderTarget(),i.addEventListener("select",et),i.addEventListener("selectstart",et),i.addEventListener("selectend",et),i.addEventListener("squeeze",et),i.addEventListener("squeezestart",et),i.addEventListener("squeezeend",et),i.addEventListener("end",k),i.addEventListener("inputsourceschange",Q),E.xrCompatible!==!0&&await e.makeXRCompatible(),z=t.getPixelRatio(),t.getSize(L),b&&"createProjectionLayer"in XRWebGLBinding.prototype){let zt=null,te=null,Bt=null;E.depth&&(Bt=E.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,zt=E.stencil?Ao:To,te=E.stencil?Eo:Hs);const kt={colorFormat:e.RGBA8,depthFormat:Bt,scaleFactor:r};m=this.getBinding(),g=m.createProjectionLayer(kt),i.updateRenderState({layers:[g]}),t.setPixelRatio(1),t.setSize(g.textureWidth,g.textureHeight,!1),T=new us(g.textureWidth,g.textureHeight,{format:Hn,type:Ii,depthTexture:new qm(g.textureWidth,g.textureHeight,te,void 0,void 0,void 0,void 0,void 0,void 0,zt),stencilBuffer:E.stencil,colorSpace:t.outputColorSpace,samples:E.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1,resolveStencilBuffer:g.ignoreDepthValues===!1})}else{const zt={antialias:E.antialias,alpha:!0,depth:E.depth,stencil:E.stencil,framebufferScaleFactor:r};v=new XRWebGLLayer(i,e,zt),i.updateRenderState({baseLayer:v}),t.setPixelRatio(1),t.setSize(v.framebufferWidth,v.framebufferHeight,!1),T=new us(v.framebufferWidth,v.framebufferHeight,{format:Hn,type:Ii,colorSpace:t.outputColorSpace,stencilBuffer:E.stencil,resolveDepthBuffer:v.ignoreDepthValues===!1,resolveStencilBuffer:v.ignoreDepthValues===!1})}T.isXRRenderTarget=!0,this.setFoveation(h),f=null,l=await i.requestReferenceSpace(c),ie.setContext(i),ie.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return S.getDepthTexture()};function Q(ut){for(let xt=0;xt<ut.removed.length;xt++){const zt=ut.removed[xt],te=R.indexOf(zt);te>=0&&(R[te]=null,N[te].disconnect(zt))}for(let xt=0;xt<ut.added.length;xt++){const zt=ut.added[xt];let te=R.indexOf(zt);if(te===-1){for(let kt=0;kt<N.length;kt++)if(kt>=R.length){R.push(zt),te=kt;break}else if(R[kt]===null){R[kt]=zt,te=kt;break}if(te===-1)break}const Bt=N[te];Bt&&Bt.connect(zt)}}const X=new I,lt=new I;function _t(ut,xt,zt){X.setFromMatrixPosition(xt.matrixWorld),lt.setFromMatrixPosition(zt.matrixWorld);const te=X.distanceTo(lt),Bt=xt.projectionMatrix.elements,kt=zt.projectionMatrix.elements,ge=Bt[14]/(Bt[10]-1),F=Bt[14]/(Bt[10]+1),gt=(Bt[9]+1)/Bt[5],ht=(Bt[9]-1)/Bt[5],ft=(Bt[8]-1)/Bt[0],ot=(kt[8]+1)/kt[0],Nt=ge*ft,Mt=ge*ot,Tt=te/(-ft+ot),re=Tt*-ft;if(xt.matrixWorld.decompose(ut.position,ut.quaternion,ut.scale),ut.translateX(re),ut.translateZ(Tt),ut.matrixWorld.compose(ut.position,ut.quaternion,ut.scale),ut.matrixWorldInverse.copy(ut.matrixWorld).invert(),Bt[10]===-1)ut.projectionMatrix.copy(xt.projectionMatrix),ut.projectionMatrixInverse.copy(xt.projectionMatrixInverse);else{const ce=ge+Tt,O=F+Tt,D=Nt-re,K=Mt+(te-re),rt=gt*F/O*ce,mt=ht*F/O*ce;ut.projectionMatrix.makePerspective(D,K,rt,mt,ce,O),ut.projectionMatrixInverse.copy(ut.projectionMatrix).invert()}}function St(ut,xt){xt===null?ut.matrixWorld.copy(ut.matrix):ut.matrixWorld.multiplyMatrices(xt.matrixWorld,ut.matrix),ut.matrixWorldInverse.copy(ut.matrixWorld).invert()}this.updateCamera=function(ut){if(i===null)return;let xt=ut.near,zt=ut.far;S.texture!==null&&(S.depthNear>0&&(xt=S.depthNear),S.depthFar>0&&(zt=S.depthFar)),Y.near=w.near=C.near=xt,Y.far=w.far=C.far=zt,(W!==Y.near||$!==Y.far)&&(i.updateRenderState({depthNear:Y.near,depthFar:Y.far}),W=Y.near,$=Y.far),Y.layers.mask=ut.layers.mask|6,C.layers.mask=Y.layers.mask&3,w.layers.mask=Y.layers.mask&5;const te=ut.parent,Bt=Y.cameras;St(Y,te);for(let kt=0;kt<Bt.length;kt++)St(Bt[kt],te);Bt.length===2?_t(Y,C,w):Y.projectionMatrix.copy(C.projectionMatrix),Lt(ut,Y,te)};function Lt(ut,xt,zt){zt===null?ut.matrix.copy(xt.matrixWorld):(ut.matrix.copy(zt.matrixWorld),ut.matrix.invert(),ut.matrix.multiply(xt.matrixWorld)),ut.matrix.decompose(ut.position,ut.quaternion,ut.scale),ut.updateMatrixWorld(!0),ut.projectionMatrix.copy(xt.projectionMatrix),ut.projectionMatrixInverse.copy(xt.projectionMatrixInverse),ut.isPerspectiveCamera&&(ut.fov=Co*2*Math.atan(1/ut.projectionMatrix.elements[5]),ut.zoom=1)}this.getCamera=function(){return Y},this.getFoveation=function(){if(!(g===null&&v===null))return h},this.setFoveation=function(ut){h=ut,g!==null&&(g.fixedFoveation=ut),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=ut)},this.hasDepthSensing=function(){return S.texture!==null},this.getDepthSensingMesh=function(){return S.getMesh(Y)},this.getCameraTexture=function(ut){return _[ut]};let Yt=null;function Zt(ut,xt){if(p=xt.getViewerPose(f||l),x=xt,p!==null){const zt=p.views;v!==null&&(t.setRenderTargetFramebuffer(T,v.framebuffer),t.setRenderTarget(T));let te=!1;zt.length!==Y.cameras.length&&(Y.cameras.length=0,te=!0);for(let F=0;F<zt.length;F++){const gt=zt[F];let ht=null;if(v!==null)ht=v.getViewport(gt);else{const ot=m.getViewSubImage(g,gt);ht=ot.viewport,F===0&&(t.setRenderTargetTextures(T,ot.colorTexture,ot.depthStencilTexture),t.setRenderTarget(T))}let ft=B[F];ft===void 0&&(ft=new en,ft.layers.enable(F),ft.viewport=new Pe,B[F]=ft),ft.matrix.fromArray(gt.transform.matrix),ft.matrix.decompose(ft.position,ft.quaternion,ft.scale),ft.projectionMatrix.fromArray(gt.projectionMatrix),ft.projectionMatrixInverse.copy(ft.projectionMatrix).invert(),ft.viewport.set(ht.x,ht.y,ht.width,ht.height),F===0&&(Y.matrix.copy(ft.matrix),Y.matrix.decompose(Y.position,Y.quaternion,Y.scale)),te===!0&&Y.cameras.push(ft)}const Bt=i.enabledFeatures;if(Bt&&Bt.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&b){m=n.getBinding();const F=m.getDepthInformation(zt[0]);F&&F.isValid&&F.texture&&S.init(F,i.renderState)}if(Bt&&Bt.includes("camera-access")&&b){t.state.unbindTexture(),m=n.getBinding();for(let F=0;F<zt.length;F++){const gt=zt[F].camera;if(gt){let ht=_[gt];ht||(ht=new Ym,_[gt]=ht);const ft=m.getCameraImage(gt);ht.sourceTexture=ft}}}}for(let zt=0;zt<N.length;zt++){const te=R[zt],Bt=N[zt];te!==null&&Bt!==void 0&&Bt.update(te,xt,f||l)}Yt&&Yt(ut,xt),xt.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:xt}),x=null}const ie=new bS;ie.setAnimationLoop(Zt),this.setAnimationLoop=function(ut){Yt=ut},this.dispose=function(){}}}const $a=new bi,b3=new de;function E3(s,t){function e(S,_){S.matrixAutoUpdate===!0&&S.updateMatrix(),_.value.copy(S.matrix)}function n(S,_){_.color.getRGB(S.fogColor.value,bx(s)),_.isFog?(S.fogNear.value=_.near,S.fogFar.value=_.far):_.isFogExp2&&(S.fogDensity.value=_.density)}function i(S,_,E,A,T){_.isMeshBasicMaterial||_.isMeshLambertMaterial?r(S,_):_.isMeshToonMaterial?(r(S,_),m(S,_)):_.isMeshPhongMaterial?(r(S,_),p(S,_)):_.isMeshStandardMaterial?(r(S,_),g(S,_),_.isMeshPhysicalMaterial&&v(S,_,T)):_.isMeshMatcapMaterial?(r(S,_),x(S,_)):_.isMeshDepthMaterial?r(S,_):_.isMeshDistanceMaterial?(r(S,_),b(S,_)):_.isMeshNormalMaterial?r(S,_):_.isLineBasicMaterial?(l(S,_),_.isLineDashedMaterial&&c(S,_)):_.isPointsMaterial?h(S,_,E,A):_.isSpriteMaterial?f(S,_):_.isShadowMaterial?(S.color.value.copy(_.color),S.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function r(S,_){S.opacity.value=_.opacity,_.color&&S.diffuse.value.copy(_.color),_.emissive&&S.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.bumpMap&&(S.bumpMap.value=_.bumpMap,e(_.bumpMap,S.bumpMapTransform),S.bumpScale.value=_.bumpScale,_.side===Qn&&(S.bumpScale.value*=-1)),_.normalMap&&(S.normalMap.value=_.normalMap,e(_.normalMap,S.normalMapTransform),S.normalScale.value.copy(_.normalScale),_.side===Qn&&S.normalScale.value.negate()),_.displacementMap&&(S.displacementMap.value=_.displacementMap,e(_.displacementMap,S.displacementMapTransform),S.displacementScale.value=_.displacementScale,S.displacementBias.value=_.displacementBias),_.emissiveMap&&(S.emissiveMap.value=_.emissiveMap,e(_.emissiveMap,S.emissiveMapTransform)),_.specularMap&&(S.specularMap.value=_.specularMap,e(_.specularMap,S.specularMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest);const E=t.get(_),A=E.envMap,T=E.envMapRotation;A&&(S.envMap.value=A,$a.copy(T),$a.x*=-1,$a.y*=-1,$a.z*=-1,A.isCubeTexture&&A.isRenderTargetTexture===!1&&($a.y*=-1,$a.z*=-1),S.envMapRotation.value.setFromMatrix4(b3.makeRotationFromEuler($a)),S.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=_.reflectivity,S.ior.value=_.ior,S.refractionRatio.value=_.refractionRatio),_.lightMap&&(S.lightMap.value=_.lightMap,S.lightMapIntensity.value=_.lightMapIntensity,e(_.lightMap,S.lightMapTransform)),_.aoMap&&(S.aoMap.value=_.aoMap,S.aoMapIntensity.value=_.aoMapIntensity,e(_.aoMap,S.aoMapTransform))}function l(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform))}function c(S,_){S.dashSize.value=_.dashSize,S.totalSize.value=_.dashSize+_.gapSize,S.scale.value=_.scale}function h(S,_,E,A){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.size.value=_.size*E,S.scale.value=A*.5,_.map&&(S.map.value=_.map,e(_.map,S.uvTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function f(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.rotation.value=_.rotation,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function p(S,_){S.specular.value.copy(_.specular),S.shininess.value=Math.max(_.shininess,1e-4)}function m(S,_){_.gradientMap&&(S.gradientMap.value=_.gradientMap)}function g(S,_){S.metalness.value=_.metalness,_.metalnessMap&&(S.metalnessMap.value=_.metalnessMap,e(_.metalnessMap,S.metalnessMapTransform)),S.roughness.value=_.roughness,_.roughnessMap&&(S.roughnessMap.value=_.roughnessMap,e(_.roughnessMap,S.roughnessMapTransform)),_.envMap&&(S.envMapIntensity.value=_.envMapIntensity)}function v(S,_,E){S.ior.value=_.ior,_.sheen>0&&(S.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),S.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(S.sheenColorMap.value=_.sheenColorMap,e(_.sheenColorMap,S.sheenColorMapTransform)),_.sheenRoughnessMap&&(S.sheenRoughnessMap.value=_.sheenRoughnessMap,e(_.sheenRoughnessMap,S.sheenRoughnessMapTransform))),_.clearcoat>0&&(S.clearcoat.value=_.clearcoat,S.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(S.clearcoatMap.value=_.clearcoatMap,e(_.clearcoatMap,S.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,e(_.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(S.clearcoatNormalMap.value=_.clearcoatNormalMap,e(_.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Qn&&S.clearcoatNormalScale.value.negate())),_.dispersion>0&&(S.dispersion.value=_.dispersion),_.iridescence>0&&(S.iridescence.value=_.iridescence,S.iridescenceIOR.value=_.iridescenceIOR,S.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(S.iridescenceMap.value=_.iridescenceMap,e(_.iridescenceMap,S.iridescenceMapTransform)),_.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=_.iridescenceThicknessMap,e(_.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),_.transmission>0&&(S.transmission.value=_.transmission,S.transmissionSamplerMap.value=E.texture,S.transmissionSamplerSize.value.set(E.width,E.height),_.transmissionMap&&(S.transmissionMap.value=_.transmissionMap,e(_.transmissionMap,S.transmissionMapTransform)),S.thickness.value=_.thickness,_.thicknessMap&&(S.thicknessMap.value=_.thicknessMap,e(_.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=_.attenuationDistance,S.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(S.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(S.anisotropyMap.value=_.anisotropyMap,e(_.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=_.specularIntensity,S.specularColor.value.copy(_.specularColor),_.specularColorMap&&(S.specularColorMap.value=_.specularColorMap,e(_.specularColorMap,S.specularColorMapTransform)),_.specularIntensityMap&&(S.specularIntensityMap.value=_.specularIntensityMap,e(_.specularIntensityMap,S.specularIntensityMapTransform))}function x(S,_){_.matcap&&(S.matcap.value=_.matcap)}function b(S,_){const E=t.get(_).light;S.referencePosition.value.setFromMatrixPosition(E.matrixWorld),S.nearDistance.value=E.shadow.camera.near,S.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function T3(s,t,e,n){let i={},r={},l=[];const c=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function h(E,A){const T=A.program;n.uniformBlockBinding(E,T)}function f(E,A){let T=i[E.id];T===void 0&&(x(E),T=p(E),i[E.id]=T,E.addEventListener("dispose",S));const N=A.program;n.updateUBOMapping(E,N);const R=t.render.frame;r[E.id]!==R&&(g(E),r[E.id]=R)}function p(E){const A=m();E.__bindingPointIndex=A;const T=s.createBuffer(),N=E.__size,R=E.usage;return s.bindBuffer(s.UNIFORM_BUFFER,T),s.bufferData(s.UNIFORM_BUFFER,N,R),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,A,T),T}function m(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(E){const A=i[E.id],T=E.uniforms,N=E.__cache;s.bindBuffer(s.UNIFORM_BUFFER,A);for(let R=0,L=T.length;R<L;R++){const z=Array.isArray(T[R])?T[R]:[T[R]];for(let C=0,w=z.length;C<w;C++){const B=z[C];if(v(B,R,C,N)===!0){const Y=B.__offset,W=Array.isArray(B.value)?B.value:[B.value];let $=0;for(let et=0;et<W.length;et++){const k=W[et],Q=b(k);typeof k=="number"||typeof k=="boolean"?(B.__data[0]=k,s.bufferSubData(s.UNIFORM_BUFFER,Y+$,B.__data)):k.isMatrix3?(B.__data[0]=k.elements[0],B.__data[1]=k.elements[1],B.__data[2]=k.elements[2],B.__data[3]=0,B.__data[4]=k.elements[3],B.__data[5]=k.elements[4],B.__data[6]=k.elements[5],B.__data[7]=0,B.__data[8]=k.elements[6],B.__data[9]=k.elements[7],B.__data[10]=k.elements[8],B.__data[11]=0):(k.toArray(B.__data,$),$+=Q.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,Y,B.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function v(E,A,T,N){const R=E.value,L=A+"_"+T;if(N[L]===void 0)return typeof R=="number"||typeof R=="boolean"?N[L]=R:N[L]=R.clone(),!0;{const z=N[L];if(typeof R=="number"||typeof R=="boolean"){if(z!==R)return N[L]=R,!0}else if(z.equals(R)===!1)return z.copy(R),!0}return!1}function x(E){const A=E.uniforms;let T=0;const N=16;for(let L=0,z=A.length;L<z;L++){const C=Array.isArray(A[L])?A[L]:[A[L]];for(let w=0,B=C.length;w<B;w++){const Y=C[w],W=Array.isArray(Y.value)?Y.value:[Y.value];for(let $=0,et=W.length;$<et;$++){const k=W[$],Q=b(k),X=T%N,lt=X%Q.boundary,_t=X+lt;T+=lt,_t!==0&&N-_t<Q.storage&&(T+=N-_t),Y.__data=new Float32Array(Q.storage/Float32Array.BYTES_PER_ELEMENT),Y.__offset=T,T+=Q.storage}}}const R=T%N;return R>0&&(T+=N-R),E.__size=T,E.__cache={},this}function b(E){const A={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(A.boundary=4,A.storage=4):E.isVector2?(A.boundary=8,A.storage=8):E.isVector3||E.isColor?(A.boundary=16,A.storage=12):E.isVector4?(A.boundary=16,A.storage=16):E.isMatrix3?(A.boundary=48,A.storage=48):E.isMatrix4?(A.boundary=64,A.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),A}function S(E){const A=E.target;A.removeEventListener("dispose",S);const T=l.indexOf(A.__bindingPointIndex);l.splice(T,1),s.deleteBuffer(i[A.id]),delete i[A.id],delete r[A.id]}function _(){for(const E in i)s.deleteBuffer(i[E]);l=[],i={},r={}}return{bind:h,update:f,dispose:_}}class RS{constructor(t={}){const{canvas:e=xx(),context:n=null,depth:i=!0,stencil:r=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:f=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:m=!1,reversedDepthBuffer:g=!1}=t;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=l;const x=new Uint32Array(4),b=new Int32Array(4);let S=null,_=null;const E=[],A=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=os,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const T=this;let N=!1;this._outputColorSpace=Fn;let R=0,L=0,z=null,C=-1,w=null;const B=new Pe,Y=new Pe;let W=null;const $=new Xt(0);let et=0,k=e.width,Q=e.height,X=1,lt=null,_t=null;const St=new Pe(0,0,k,Q),Lt=new Pe(0,0,k,Q);let Yt=!1;const Zt=new Oo;let ie=!1,ut=!1;const xt=new de,zt=new I,te=new Pe,Bt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let kt=!1;function ge(){return z===null?X:1}let F=n;function gt(P,q){return e.getContext(P,q)}try{const P={alpha:!0,depth:i,stencil:r,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:f,powerPreference:p,failIfMajorPerformanceCaveat:m};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Xh}`),e.addEventListener("webglcontextlost",wt,!1),e.addEventListener("webglcontextrestored",Ht,!1),e.addEventListener("webglcontextcreationerror",Et,!1),F===null){const q="webgl2";if(F=gt(q,P),F===null)throw gt(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let ht,ft,ot,Nt,Mt,Tt,re,ce,O,D,K,rt,mt,ct,Qt,Ut,jt,Kt,bt,It,ee,H,nt,At;function V(){ht=new zR(F),ht.init(),H=new CS(F,ht),ft=new DR(F,ht,t,H),ot=new v3(F,ht),ft.reversedDepthBuffer&&g&&ot.buffers.depth.setReversed(!0),Nt=new HR(F),Mt=new s3,Tt=new _3(F,ht,ot,Mt,ft,H,Nt),re=new UR(T),ce=new OR(T),O=new qA(F),nt=new CR(F,O),D=new BR(F,O,Nt,nt),K=new GR(F,D,O,Nt),bt=new VR(F,ft,Tt),Ut=new NR(Mt),rt=new i3(T,re,ce,ht,ft,nt,Ut),mt=new E3(T,Mt),ct=new r3,Qt=new f3(ht),Kt=new wR(T,re,ce,ot,K,v,h),jt=new m3(T,K,ft),At=new T3(F,Nt,ft,ot),It=new RR(F,ht,Nt),ee=new FR(F,ht,Nt),Nt.programs=rt.programs,T.capabilities=ft,T.extensions=ht,T.properties=Mt,T.renderLists=ct,T.shadowMap=jt,T.state=ot,T.info=Nt}V();const yt=new M3(T,F);this.xr=yt,this.getContext=function(){return F},this.getContextAttributes=function(){return F.getContextAttributes()},this.forceContextLoss=function(){const P=ht.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=ht.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return X},this.setPixelRatio=function(P){P!==void 0&&(X=P,this.setSize(k,Q,!1))},this.getSize=function(P){return P.set(k,Q)},this.setSize=function(P,q,tt=!0){if(yt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}k=P,Q=q,e.width=Math.floor(P*X),e.height=Math.floor(q*X),tt===!0&&(e.style.width=P+"px",e.style.height=q+"px"),this.setViewport(0,0,P,q)},this.getDrawingBufferSize=function(P){return P.set(k*X,Q*X).floor()},this.setDrawingBufferSize=function(P,q,tt){k=P,Q=q,X=tt,e.width=Math.floor(P*tt),e.height=Math.floor(q*tt),this.setViewport(0,0,P,q)},this.getCurrentViewport=function(P){return P.copy(B)},this.getViewport=function(P){return P.copy(St)},this.setViewport=function(P,q,tt,st){P.isVector4?St.set(P.x,P.y,P.z,P.w):St.set(P,q,tt,st),ot.viewport(B.copy(St).multiplyScalar(X).round())},this.getScissor=function(P){return P.copy(Lt)},this.setScissor=function(P,q,tt,st){P.isVector4?Lt.set(P.x,P.y,P.z,P.w):Lt.set(P,q,tt,st),ot.scissor(Y.copy(Lt).multiplyScalar(X).round())},this.getScissorTest=function(){return Yt},this.setScissorTest=function(P){ot.setScissorTest(Yt=P)},this.setOpaqueSort=function(P){lt=P},this.setTransparentSort=function(P){_t=P},this.getClearColor=function(P){return P.copy(Kt.getClearColor())},this.setClearColor=function(){Kt.setClearColor(...arguments)},this.getClearAlpha=function(){return Kt.getClearAlpha()},this.setClearAlpha=function(){Kt.setClearAlpha(...arguments)},this.clear=function(P=!0,q=!0,tt=!0){let st=0;if(P){let j=!1;if(z!==null){const Ct=z.texture.format;j=Ct===$h||Ct===Qh||Ct===rc}if(j){const Ct=z.texture.type,Ot=Ct===Ii||Ct===Hs||Ct===bo||Ct===Eo||Ct===jh||Ct===Kh,Jt=Kt.getClearColor(),qt=Kt.getClearAlpha(),le=Jt.r,he=Jt.g,se=Jt.b;Ot?(x[0]=le,x[1]=he,x[2]=se,x[3]=qt,F.clearBufferuiv(F.COLOR,0,x)):(b[0]=le,b[1]=he,b[2]=se,b[3]=qt,F.clearBufferiv(F.COLOR,0,b))}else st|=F.COLOR_BUFFER_BIT}q&&(st|=F.DEPTH_BUFFER_BIT),tt&&(st|=F.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),F.clear(st)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",wt,!1),e.removeEventListener("webglcontextrestored",Ht,!1),e.removeEventListener("webglcontextcreationerror",Et,!1),Kt.dispose(),ct.dispose(),Qt.dispose(),Mt.dispose(),re.dispose(),ce.dispose(),K.dispose(),nt.dispose(),At.dispose(),rt.dispose(),yt.dispose(),yt.removeEventListener("sessionstart",yn),yt.removeEventListener("sessionend",Ho),zi.stop()};function wt(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),N=!0}function Ht(){console.log("THREE.WebGLRenderer: Context Restored."),N=!1;const P=Nt.autoReset,q=jt.enabled,tt=jt.autoUpdate,st=jt.needsUpdate,j=jt.type;V(),Nt.autoReset=P,jt.enabled=q,jt.autoUpdate=tt,jt.needsUpdate=st,jt.type=j}function Et(P){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",P.statusMessage)}function vt(P){const q=P.target;q.removeEventListener("dispose",vt),Vt(q)}function Vt(P){ne(P),Mt.remove(P)}function ne(P){const q=Mt.get(P).programs;q!==void 0&&(q.forEach(function(tt){rt.releaseProgram(tt)}),P.isShaderMaterial&&rt.releaseShaderCache(P))}this.renderBufferDirect=function(P,q,tt,st,j,Ct){q===null&&(q=Bt);const Ot=j.isMesh&&j.matrixWorld.determinant()<0,Jt=Go(P,q,tt,st,j);ot.setMaterial(st,Ot);let qt=tt.index,le=1;if(st.wireframe===!0){if(qt=D.getWireframeAttribute(tt),qt===void 0)return;le=2}const he=tt.drawRange,se=tt.attributes.position;let be=he.start*le,Be=(he.start+he.count)*le;Ct!==null&&(be=Math.max(be,Ct.start*le),Be=Math.min(Be,(Ct.start+Ct.count)*le)),qt!==null?(be=Math.max(be,0),Be=Math.min(Be,qt.count)):se!=null&&(be=Math.max(be,0),Be=Math.min(Be,se.count));const je=Be-be;if(je<0||je===1/0)return;nt.setup(j,st,Jt,tt,qt);let Ge,Fe=It;if(qt!==null&&(Ge=O.get(qt),Fe=ee,Fe.setIndex(Ge)),j.isMesh)st.wireframe===!0?(ot.setLineWidth(st.wireframeLinewidth*ge()),Fe.setMode(F.LINES)):Fe.setMode(F.TRIANGLES);else if(j.isLine){let oe=st.linewidth;oe===void 0&&(oe=1),ot.setLineWidth(oe*ge()),j.isLineSegments?Fe.setMode(F.LINES):j.isLineLoop?Fe.setMode(F.LINE_LOOP):Fe.setMode(F.LINE_STRIP)}else j.isPoints?Fe.setMode(F.POINTS):j.isSprite&&Fe.setMode(F.TRIANGLES);if(j.isBatchedMesh)if(j._multiDrawInstances!==null)Kl("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Fe.renderMultiDrawInstances(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount,j._multiDrawInstances);else if(ht.get("WEBGL_multi_draw"))Fe.renderMultiDraw(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount);else{const oe=j._multiDrawStarts,Ke=j._multiDrawCounts,Ce=j._multiDrawCount,Dn=qt?O.get(qt).bytesPerElement:1,ps=Mt.get(st).currentProgram.getUniforms();for(let Tn=0;Tn<Ce;Tn++)ps.setValue(F,"_gl_DrawID",Tn),Fe.render(oe[Tn]/Dn,Ke[Tn])}else if(j.isInstancedMesh)Fe.renderInstances(be,je,j.count);else if(tt.isInstancedBufferGeometry){const oe=tt._maxInstanceCount!==void 0?tt._maxInstanceCount:1/0,Ke=Math.min(tt.instanceCount,oe);Fe.renderInstances(be,je,Ke)}else Fe.render(be,je)};function Te(P,q,tt){P.transparent===!0&&P.side===Zi&&P.forceSinglePass===!1?(P.side=Qn,P.needsUpdate=!0,ds(P,q,tt),P.side=Bs,P.needsUpdate=!0,ds(P,q,tt),P.side=Zi):ds(P,q,tt)}this.compile=function(P,q,tt=null){tt===null&&(tt=P),_=Qt.get(tt),_.init(q),A.push(_),tt.traverseVisible(function(j){j.isLight&&j.layers.test(q.layers)&&(_.pushLight(j),j.castShadow&&_.pushShadow(j))}),P!==tt&&P.traverseVisible(function(j){j.isLight&&j.layers.test(q.layers)&&(_.pushLight(j),j.castShadow&&_.pushShadow(j))}),_.setupLights();const st=new Set;return P.traverse(function(j){if(!(j.isMesh||j.isPoints||j.isLine||j.isSprite))return;const Ct=j.material;if(Ct)if(Array.isArray(Ct))for(let Ot=0;Ot<Ct.length;Ot++){const Jt=Ct[Ot];Te(Jt,tt,j),st.add(Jt)}else Te(Ct,tt,j),st.add(Ct)}),_=A.pop(),st},this.compileAsync=function(P,q,tt=null){const st=this.compile(P,q,tt);return new Promise(j=>{function Ct(){if(st.forEach(function(Ot){Mt.get(Ot).currentProgram.isReady()&&st.delete(Ot)}),st.size===0){j(P);return}setTimeout(Ct,10)}ht.get("KHR_parallel_shader_compile")!==null?Ct():setTimeout(Ct,10)})};let Se=null;function _n(P){Se&&Se(P)}function yn(){zi.stop()}function Ho(){zi.start()}const zi=new bS;zi.setAnimationLoop(_n),typeof self<"u"&&zi.setContext(self),this.setAnimationLoop=function(P){Se=P,yt.setAnimationLoop(P),P===null?zi.stop():zi.start()},yt.addEventListener("sessionstart",yn),yt.addEventListener("sessionend",Ho),this.render=function(P,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(N===!0)return;if(P.matrixWorldAutoUpdate===!0&&P.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),yt.enabled===!0&&yt.isPresenting===!0&&(yt.cameraAutoUpdate===!0&&yt.updateCamera(q),q=yt.getCamera()),P.isScene===!0&&P.onBeforeRender(T,P,q,z),_=Qt.get(P,A.length),_.init(q),A.push(_),xt.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),Zt.setFromProjectionMatrix(xt,Si,q.reversedDepth),ut=this.localClippingEnabled,ie=Ut.init(this.clippingPlanes,ut),S=ct.get(P,E.length),S.init(),E.push(S),yt.enabled===!0&&yt.isPresenting===!0){const Ct=T.xr.getDepthSensingMesh();Ct!==null&&Sa(Ct,q,-1/0,T.sortObjects)}Sa(P,q,0,T.sortObjects),S.finish(),T.sortObjects===!0&&S.sort(lt,_t),kt=yt.enabled===!1||yt.isPresenting===!1||yt.hasDepthSensing()===!1,kt&&Kt.addToRenderList(S,P),this.info.render.frame++,ie===!0&&Ut.beginShadows();const tt=_.state.shadowsArray;jt.render(tt,P,q),ie===!0&&Ut.endShadows(),this.info.autoReset===!0&&this.info.reset();const st=S.opaque,j=S.transmissive;if(_.setupLights(),q.isArrayCamera){const Ct=q.cameras;if(j.length>0)for(let Ot=0,Jt=Ct.length;Ot<Jt;Ot++){const qt=Ct[Ot];Vo(st,j,P,qt)}kt&&Kt.render(P);for(let Ot=0,Jt=Ct.length;Ot<Jt;Ot++){const qt=Ct[Ot];Bi(S,P,qt,qt.viewport)}}else j.length>0&&Vo(st,j,P,q),kt&&Kt.render(P),Bi(S,P,q);z!==null&&L===0&&(Tt.updateMultisampleRenderTarget(z),Tt.updateRenderTargetMipmap(z)),P.isScene===!0&&P.onAfterRender(T,P,q),nt.resetDefaultState(),C=-1,w=null,A.pop(),A.length>0?(_=A[A.length-1],ie===!0&&Ut.setGlobalState(T.clippingPlanes,_.state.camera)):_=null,E.pop(),E.length>0?S=E[E.length-1]:S=null};function Sa(P,q,tt,st){if(P.visible===!1)return;if(P.layers.test(q.layers)){if(P.isGroup)tt=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(q);else if(P.isLight)_.pushLight(P),P.castShadow&&_.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||Zt.intersectsSprite(P)){st&&te.setFromMatrixPosition(P.matrixWorld).applyMatrix4(xt);const Ot=K.update(P),Jt=P.material;Jt.visible&&S.push(P,Ot,Jt,tt,te.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(!P.frustumCulled||Zt.intersectsObject(P))){const Ot=K.update(P),Jt=P.material;if(st&&(P.boundingSphere!==void 0?(P.boundingSphere===null&&P.computeBoundingSphere(),te.copy(P.boundingSphere.center)):(Ot.boundingSphere===null&&Ot.computeBoundingSphere(),te.copy(Ot.boundingSphere.center)),te.applyMatrix4(P.matrixWorld).applyMatrix4(xt)),Array.isArray(Jt)){const qt=Ot.groups;for(let le=0,he=qt.length;le<he;le++){const se=qt[le],be=Jt[se.materialIndex];be&&be.visible&&S.push(P,Ot,be,tt,te.z,se)}}else Jt.visible&&S.push(P,Ot,Jt,tt,te.z,null)}}const Ct=P.children;for(let Ot=0,Jt=Ct.length;Ot<Jt;Ot++)Sa(Ct[Ot],q,tt,st)}function Bi(P,q,tt,st){const j=P.opaque,Ct=P.transmissive,Ot=P.transparent;_.setupLightsView(tt),ie===!0&&Ut.setGlobalState(T.clippingPlanes,tt),st&&ot.viewport(B.copy(st)),j.length>0&&li(j,q,tt),Ct.length>0&&li(Ct,q,tt),Ot.length>0&&li(Ot,q,tt),ot.buffers.depth.setTest(!0),ot.buffers.depth.setMask(!0),ot.buffers.color.setMask(!0),ot.setPolygonOffset(!1)}function Vo(P,q,tt,st){if((tt.isScene===!0?tt.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[st.id]===void 0&&(_.state.transmissionRenderTarget[st.id]=new us(1,1,{generateMipmaps:!0,type:ht.has("EXT_color_buffer_half_float")||ht.has("EXT_color_buffer_float")?Io:Ii,minFilter:as,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Re.workingColorSpace}));const Ct=_.state.transmissionRenderTarget[st.id],Ot=st.viewport||B;Ct.setSize(Ot.z*T.transmissionResolutionScale,Ot.w*T.transmissionResolutionScale);const Jt=T.getRenderTarget(),qt=T.getActiveCubeFace(),le=T.getActiveMipmapLevel();T.setRenderTarget(Ct),T.getClearColor($),et=T.getClearAlpha(),et<1&&T.setClearColor(16777215,.5),T.clear(),kt&&Kt.render(tt);const he=T.toneMapping;T.toneMapping=os;const se=st.viewport;if(st.viewport!==void 0&&(st.viewport=void 0),_.setupLightsView(st),ie===!0&&Ut.setGlobalState(T.clippingPlanes,st),li(P,tt,st),Tt.updateMultisampleRenderTarget(Ct),Tt.updateRenderTargetMipmap(Ct),ht.has("WEBGL_multisampled_render_to_texture")===!1){let be=!1;for(let Be=0,je=q.length;Be<je;Be++){const Ge=q[Be],Fe=Ge.object,oe=Ge.geometry,Ke=Ge.material,Ce=Ge.group;if(Ke.side===Zi&&Fe.layers.test(st.layers)){const Dn=Ke.side;Ke.side=Qn,Ke.needsUpdate=!0,Ei(Fe,tt,st,oe,Ke,Ce),Ke.side=Dn,Ke.needsUpdate=!0,be=!0}}be===!0&&(Tt.updateMultisampleRenderTarget(Ct),Tt.updateRenderTargetMipmap(Ct))}T.setRenderTarget(Jt,qt,le),T.setClearColor($,et),se!==void 0&&(st.viewport=se),T.toneMapping=he}function li(P,q,tt){const st=q.isScene===!0?q.overrideMaterial:null;for(let j=0,Ct=P.length;j<Ct;j++){const Ot=P[j],Jt=Ot.object,qt=Ot.geometry,le=Ot.group;let he=Ot.material;he.allowOverride===!0&&st!==null&&(he=st),Jt.layers.test(tt.layers)&&Ei(Jt,q,tt,qt,he,le)}}function Ei(P,q,tt,st,j,Ct){P.onBeforeRender(T,q,tt,st,j,Ct),P.modelViewMatrix.multiplyMatrices(tt.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),j.onBeforeRender(T,q,tt,st,P,Ct),j.transparent===!0&&j.side===Zi&&j.forceSinglePass===!1?(j.side=Qn,j.needsUpdate=!0,T.renderBufferDirect(tt,q,st,j,P,Ct),j.side=Bs,j.needsUpdate=!0,T.renderBufferDirect(tt,q,st,j,P,Ct),j.side=Zi):T.renderBufferDirect(tt,q,st,j,P,Ct),P.onAfterRender(T,q,tt,st,j,Ct)}function ds(P,q,tt){q.isScene!==!0&&(q=Bt);const st=Mt.get(P),j=_.state.lights,Ct=_.state.shadowsArray,Ot=j.state.version,Jt=rt.getParameters(P,j.state,Ct,q,tt),qt=rt.getProgramCacheKey(Jt);let le=st.programs;st.environment=P.isMeshStandardMaterial?q.environment:null,st.fog=q.fog,st.envMap=(P.isMeshStandardMaterial?ce:re).get(P.envMap||st.environment),st.envMapRotation=st.environment!==null&&P.envMap===null?q.environmentRotation:P.envMapRotation,le===void 0&&(P.addEventListener("dispose",vt),le=new Map,st.programs=le);let he=le.get(qt);if(he!==void 0){if(st.currentProgram===he&&st.lightsStateVersion===Ot)return xr(P,Jt),he}else Jt.uniforms=rt.getUniforms(P),P.onBeforeCompile(Jt,T),he=rt.acquireProgram(Jt,qt),le.set(qt,he),st.uniforms=Jt.uniforms;const se=st.uniforms;return(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(se.clippingPlanes=Ut.uniform),xr(P,Jt),st.needsLights=vc(P),st.lightsStateVersion=Ot,st.needsLights&&(se.ambientLightColor.value=j.state.ambient,se.lightProbe.value=j.state.probe,se.directionalLights.value=j.state.directional,se.directionalLightShadows.value=j.state.directionalShadow,se.spotLights.value=j.state.spot,se.spotLightShadows.value=j.state.spotShadow,se.rectAreaLights.value=j.state.rectArea,se.ltc_1.value=j.state.rectAreaLTC1,se.ltc_2.value=j.state.rectAreaLTC2,se.pointLights.value=j.state.point,se.pointLightShadows.value=j.state.pointShadow,se.hemisphereLights.value=j.state.hemi,se.directionalShadowMap.value=j.state.directionalShadowMap,se.directionalShadowMatrix.value=j.state.directionalShadowMatrix,se.spotShadowMap.value=j.state.spotShadowMap,se.spotLightMatrix.value=j.state.spotLightMatrix,se.spotLightMap.value=j.state.spotLightMap,se.pointShadowMap.value=j.state.pointShadowMap,se.pointShadowMatrix.value=j.state.pointShadowMatrix),st.currentProgram=he,st.uniformsList=null,he}function Qe(P){if(P.uniformsList===null){const q=P.currentProgram.getUniforms();P.uniformsList=ju.seqWithValue(q.seq,P.uniforms)}return P.uniformsList}function xr(P,q){const tt=Mt.get(P);tt.outputColorSpace=q.outputColorSpace,tt.batching=q.batching,tt.batchingColor=q.batchingColor,tt.instancing=q.instancing,tt.instancingColor=q.instancingColor,tt.instancingMorph=q.instancingMorph,tt.skinning=q.skinning,tt.morphTargets=q.morphTargets,tt.morphNormals=q.morphNormals,tt.morphColors=q.morphColors,tt.morphTargetsCount=q.morphTargetsCount,tt.numClippingPlanes=q.numClippingPlanes,tt.numIntersection=q.numClipIntersection,tt.vertexAlphas=q.vertexAlphas,tt.vertexTangents=q.vertexTangents,tt.toneMapping=q.toneMapping}function Go(P,q,tt,st,j){q.isScene!==!0&&(q=Bt),Tt.resetTextureUnits();const Ct=q.fog,Ot=st.isMeshStandardMaterial?q.environment:null,Jt=z===null?T.outputColorSpace:z.isXRRenderTarget===!0?z.texture.colorSpace:ma,qt=(st.isMeshStandardMaterial?ce:re).get(st.envMap||Ot),le=st.vertexColors===!0&&!!tt.attributes.color&&tt.attributes.color.itemSize===4,he=!!tt.attributes.tangent&&(!!st.normalMap||st.anisotropy>0),se=!!tt.morphAttributes.position,be=!!tt.morphAttributes.normal,Be=!!tt.morphAttributes.color;let je=os;st.toneMapped&&(z===null||z.isXRRenderTarget===!0)&&(je=T.toneMapping);const Ge=tt.morphAttributes.position||tt.morphAttributes.normal||tt.morphAttributes.color,Fe=Ge!==void 0?Ge.length:0,oe=Mt.get(st),Ke=_.state.lights;if(ie===!0&&(ut===!0||P!==w)){const xn=P===w&&st.id===C;Ut.setState(st,P,xn)}let Ce=!1;st.version===oe.__version?(oe.needsLights&&oe.lightsStateVersion!==Ke.state.version||oe.outputColorSpace!==Jt||j.isBatchedMesh&&oe.batching===!1||!j.isBatchedMesh&&oe.batching===!0||j.isBatchedMesh&&oe.batchingColor===!0&&j.colorTexture===null||j.isBatchedMesh&&oe.batchingColor===!1&&j.colorTexture!==null||j.isInstancedMesh&&oe.instancing===!1||!j.isInstancedMesh&&oe.instancing===!0||j.isSkinnedMesh&&oe.skinning===!1||!j.isSkinnedMesh&&oe.skinning===!0||j.isInstancedMesh&&oe.instancingColor===!0&&j.instanceColor===null||j.isInstancedMesh&&oe.instancingColor===!1&&j.instanceColor!==null||j.isInstancedMesh&&oe.instancingMorph===!0&&j.morphTexture===null||j.isInstancedMesh&&oe.instancingMorph===!1&&j.morphTexture!==null||oe.envMap!==qt||st.fog===!0&&oe.fog!==Ct||oe.numClippingPlanes!==void 0&&(oe.numClippingPlanes!==Ut.numPlanes||oe.numIntersection!==Ut.numIntersection)||oe.vertexAlphas!==le||oe.vertexTangents!==he||oe.morphTargets!==se||oe.morphNormals!==be||oe.morphColors!==Be||oe.toneMapping!==je||oe.morphTargetsCount!==Fe)&&(Ce=!0):(Ce=!0,oe.__version=st.version);let Dn=oe.currentProgram;Ce===!0&&(Dn=ds(st,q,j));let ps=!1,Tn=!1,Gs=!1;const qe=Dn.getUniforms(),Wn=oe.uniforms;if(ot.useProgram(Dn.program)&&(ps=!0,Tn=!0,Gs=!0),st.id!==C&&(C=st.id,Tn=!0),ps||w!==P){ot.buffers.depth.getReversed()&&P.reversedDepth!==!0&&(P._reversedDepth=!0,P.updateProjectionMatrix()),qe.setValue(F,"projectionMatrix",P.projectionMatrix),qe.setValue(F,"viewMatrix",P.matrixWorldInverse);const Nn=qe.map.cameraPosition;Nn!==void 0&&Nn.setValue(F,zt.setFromMatrixPosition(P.matrixWorld)),ft.logarithmicDepthBuffer&&qe.setValue(F,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),(st.isMeshPhongMaterial||st.isMeshToonMaterial||st.isMeshLambertMaterial||st.isMeshBasicMaterial||st.isMeshStandardMaterial||st.isShaderMaterial)&&qe.setValue(F,"isOrthographic",P.isOrthographicCamera===!0),w!==P&&(w=P,Tn=!0,Gs=!0)}if(j.isSkinnedMesh){qe.setOptional(F,j,"bindMatrix"),qe.setOptional(F,j,"bindMatrixInverse");const xn=j.skeleton;xn&&(xn.boneTexture===null&&xn.computeBoneTexture(),qe.setValue(F,"boneTexture",xn.boneTexture,Tt))}j.isBatchedMesh&&(qe.setOptional(F,j,"batchingTexture"),qe.setValue(F,"batchingTexture",j._matricesTexture,Tt),qe.setOptional(F,j,"batchingIdTexture"),qe.setValue(F,"batchingIdTexture",j._indirectTexture,Tt),qe.setOptional(F,j,"batchingColorTexture"),j._colorsTexture!==null&&qe.setValue(F,"batchingColorTexture",j._colorsTexture,Tt));const Xn=tt.morphAttributes;if((Xn.position!==void 0||Xn.normal!==void 0||Xn.color!==void 0)&&bt.update(j,tt,Dn),(Tn||oe.receiveShadow!==j.receiveShadow)&&(oe.receiveShadow=j.receiveShadow,qe.setValue(F,"receiveShadow",j.receiveShadow)),st.isMeshGouraudMaterial&&st.envMap!==null&&(Wn.envMap.value=qt,Wn.flipEnvMap.value=qt.isCubeTexture&&qt.isRenderTargetTexture===!1?-1:1),st.isMeshStandardMaterial&&st.envMap===null&&q.environment!==null&&(Wn.envMapIntensity.value=q.environmentIntensity),Tn&&(qe.setValue(F,"toneMappingExposure",T.toneMappingExposure),oe.needsLights&&gc(Wn,Gs),Ct&&st.fog===!0&&mt.refreshFogUniforms(Wn,Ct),mt.refreshMaterialUniforms(Wn,st,X,Q,_.state.transmissionRenderTarget[P.id]),ju.upload(F,Qe(oe),Wn,Tt)),st.isShaderMaterial&&st.uniformsNeedUpdate===!0&&(ju.upload(F,Qe(oe),Wn,Tt),st.uniformsNeedUpdate=!1),st.isSpriteMaterial&&qe.setValue(F,"center",j.center),qe.setValue(F,"modelViewMatrix",j.modelViewMatrix),qe.setValue(F,"normalMatrix",j.normalMatrix),qe.setValue(F,"modelMatrix",j.matrixWorld),st.isShaderMaterial||st.isRawShaderMaterial){const xn=st.uniformsGroups;for(let Nn=0,Sr=xn.length;Nn<Sr;Nn++){const ti=xn[Nn];At.update(ti,Dn),At.bind(ti,Dn)}}return Dn}function gc(P,q){P.ambientLightColor.needsUpdate=q,P.lightProbe.needsUpdate=q,P.directionalLights.needsUpdate=q,P.directionalLightShadows.needsUpdate=q,P.pointLights.needsUpdate=q,P.pointLightShadows.needsUpdate=q,P.spotLights.needsUpdate=q,P.spotLightShadows.needsUpdate=q,P.rectAreaLights.needsUpdate=q,P.hemisphereLights.needsUpdate=q}function vc(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return L},this.getRenderTarget=function(){return z},this.setRenderTargetTextures=function(P,q,tt){const st=Mt.get(P);st.__autoAllocateDepthBuffer=P.resolveDepthBuffer===!1,st.__autoAllocateDepthBuffer===!1&&(st.__useRenderToTexture=!1),Mt.get(P.texture).__webglTexture=q,Mt.get(P.depthTexture).__webglTexture=st.__autoAllocateDepthBuffer?void 0:tt,st.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(P,q){const tt=Mt.get(P);tt.__webglFramebuffer=q,tt.__useDefaultFramebuffer=q===void 0};const wf=F.createFramebuffer();this.setRenderTarget=function(P,q=0,tt=0){z=P,R=q,L=tt;let st=!0,j=null,Ct=!1,Ot=!1;if(P){const qt=Mt.get(P);if(qt.__useDefaultFramebuffer!==void 0)ot.bindFramebuffer(F.FRAMEBUFFER,null),st=!1;else if(qt.__webglFramebuffer===void 0)Tt.setupRenderTarget(P);else if(qt.__hasExternalTextures)Tt.rebindTextures(P,Mt.get(P.texture).__webglTexture,Mt.get(P.depthTexture).__webglTexture);else if(P.depthBuffer){const se=P.depthTexture;if(qt.__boundDepthTexture!==se){if(se!==null&&Mt.has(se)&&(P.width!==se.image.width||P.height!==se.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");Tt.setupDepthRenderbuffer(P)}}const le=P.texture;(le.isData3DTexture||le.isDataArrayTexture||le.isCompressedArrayTexture)&&(Ot=!0);const he=Mt.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(Array.isArray(he[q])?j=he[q][tt]:j=he[q],Ct=!0):P.samples>0&&Tt.useMultisampledRTT(P)===!1?j=Mt.get(P).__webglMultisampledFramebuffer:Array.isArray(he)?j=he[tt]:j=he,B.copy(P.viewport),Y.copy(P.scissor),W=P.scissorTest}else B.copy(St).multiplyScalar(X).floor(),Y.copy(Lt).multiplyScalar(X).floor(),W=Yt;if(tt!==0&&(j=wf),ot.bindFramebuffer(F.FRAMEBUFFER,j)&&st&&ot.drawBuffers(P,j),ot.viewport(B),ot.scissor(Y),ot.setScissorTest(W),Ct){const qt=Mt.get(P.texture);F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_CUBE_MAP_POSITIVE_X+q,qt.__webglTexture,tt)}else if(Ot){const qt=q;for(let le=0;le<P.textures.length;le++){const he=Mt.get(P.textures[le]);F.framebufferTextureLayer(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0+le,he.__webglTexture,tt,qt)}}else if(P!==null&&tt!==0){const qt=Mt.get(P.texture);F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_2D,qt.__webglTexture,tt)}C=-1},this.readRenderTargetPixels=function(P,q,tt,st,j,Ct,Ot,Jt=0){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let qt=Mt.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Ot!==void 0&&(qt=qt[Ot]),qt){ot.bindFramebuffer(F.FRAMEBUFFER,qt);try{const le=P.textures[Jt],he=le.format,se=le.type;if(!ft.textureFormatReadable(he)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!ft.textureTypeReadable(se)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=P.width-st&&tt>=0&&tt<=P.height-j&&(P.textures.length>1&&F.readBuffer(F.COLOR_ATTACHMENT0+Jt),F.readPixels(q,tt,st,j,H.convert(he),H.convert(se),Ct))}finally{const le=z!==null?Mt.get(z).__webglFramebuffer:null;ot.bindFramebuffer(F.FRAMEBUFFER,le)}}},this.readRenderTargetPixelsAsync=async function(P,q,tt,st,j,Ct,Ot,Jt=0){if(!(P&&P.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let qt=Mt.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Ot!==void 0&&(qt=qt[Ot]),qt)if(q>=0&&q<=P.width-st&&tt>=0&&tt<=P.height-j){ot.bindFramebuffer(F.FRAMEBUFFER,qt);const le=P.textures[Jt],he=le.format,se=le.type;if(!ft.textureFormatReadable(he))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!ft.textureTypeReadable(se))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const be=F.createBuffer();F.bindBuffer(F.PIXEL_PACK_BUFFER,be),F.bufferData(F.PIXEL_PACK_BUFFER,Ct.byteLength,F.STREAM_READ),P.textures.length>1&&F.readBuffer(F.COLOR_ATTACHMENT0+Jt),F.readPixels(q,tt,st,j,H.convert(he),H.convert(se),0);const Be=z!==null?Mt.get(z).__webglFramebuffer:null;ot.bindFramebuffer(F.FRAMEBUFFER,Be);const je=F.fenceSync(F.SYNC_GPU_COMMANDS_COMPLETE,0);return F.flush(),await u1(F,je,4),F.bindBuffer(F.PIXEL_PACK_BUFFER,be),F.getBufferSubData(F.PIXEL_PACK_BUFFER,0,Ct),F.deleteBuffer(be),F.deleteSync(je),Ct}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(P,q=null,tt=0){const st=Math.pow(2,-tt),j=Math.floor(P.image.width*st),Ct=Math.floor(P.image.height*st),Ot=q!==null?q.x:0,Jt=q!==null?q.y:0;Tt.setTexture2D(P,0),F.copyTexSubImage2D(F.TEXTURE_2D,tt,0,0,Ot,Jt,j,Ct),ot.unbindTexture()};const ko=F.createFramebuffer(),Wo=F.createFramebuffer();this.copyTextureToTexture=function(P,q,tt=null,st=null,j=0,Ct=null){Ct===null&&(j!==0?(Kl("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Ct=j,j=0):Ct=0);let Ot,Jt,qt,le,he,se,be,Be,je;const Ge=P.isCompressedTexture?P.mipmaps[Ct]:P.image;if(tt!==null)Ot=tt.max.x-tt.min.x,Jt=tt.max.y-tt.min.y,qt=tt.isBox3?tt.max.z-tt.min.z:1,le=tt.min.x,he=tt.min.y,se=tt.isBox3?tt.min.z:0;else{const Xn=Math.pow(2,-j);Ot=Math.floor(Ge.width*Xn),Jt=Math.floor(Ge.height*Xn),P.isDataArrayTexture?qt=Ge.depth:P.isData3DTexture?qt=Math.floor(Ge.depth*Xn):qt=1,le=0,he=0,se=0}st!==null?(be=st.x,Be=st.y,je=st.z):(be=0,Be=0,je=0);const Fe=H.convert(q.format),oe=H.convert(q.type);let Ke;q.isData3DTexture?(Tt.setTexture3D(q,0),Ke=F.TEXTURE_3D):q.isDataArrayTexture||q.isCompressedArrayTexture?(Tt.setTexture2DArray(q,0),Ke=F.TEXTURE_2D_ARRAY):(Tt.setTexture2D(q,0),Ke=F.TEXTURE_2D),F.pixelStorei(F.UNPACK_FLIP_Y_WEBGL,q.flipY),F.pixelStorei(F.UNPACK_PREMULTIPLY_ALPHA_WEBGL,q.premultiplyAlpha),F.pixelStorei(F.UNPACK_ALIGNMENT,q.unpackAlignment);const Ce=F.getParameter(F.UNPACK_ROW_LENGTH),Dn=F.getParameter(F.UNPACK_IMAGE_HEIGHT),ps=F.getParameter(F.UNPACK_SKIP_PIXELS),Tn=F.getParameter(F.UNPACK_SKIP_ROWS),Gs=F.getParameter(F.UNPACK_SKIP_IMAGES);F.pixelStorei(F.UNPACK_ROW_LENGTH,Ge.width),F.pixelStorei(F.UNPACK_IMAGE_HEIGHT,Ge.height),F.pixelStorei(F.UNPACK_SKIP_PIXELS,le),F.pixelStorei(F.UNPACK_SKIP_ROWS,he),F.pixelStorei(F.UNPACK_SKIP_IMAGES,se);const qe=P.isDataArrayTexture||P.isData3DTexture,Wn=q.isDataArrayTexture||q.isData3DTexture;if(P.isDepthTexture){const Xn=Mt.get(P),xn=Mt.get(q),Nn=Mt.get(Xn.__renderTarget),Sr=Mt.get(xn.__renderTarget);ot.bindFramebuffer(F.READ_FRAMEBUFFER,Nn.__webglFramebuffer),ot.bindFramebuffer(F.DRAW_FRAMEBUFFER,Sr.__webglFramebuffer);for(let ti=0;ti<qt;ti++)qe&&(F.framebufferTextureLayer(F.READ_FRAMEBUFFER,F.COLOR_ATTACHMENT0,Mt.get(P).__webglTexture,j,se+ti),F.framebufferTextureLayer(F.DRAW_FRAMEBUFFER,F.COLOR_ATTACHMENT0,Mt.get(q).__webglTexture,Ct,je+ti)),F.blitFramebuffer(le,he,Ot,Jt,be,Be,Ot,Jt,F.DEPTH_BUFFER_BIT,F.NEAREST);ot.bindFramebuffer(F.READ_FRAMEBUFFER,null),ot.bindFramebuffer(F.DRAW_FRAMEBUFFER,null)}else if(j!==0||P.isRenderTargetTexture||Mt.has(P)){const Xn=Mt.get(P),xn=Mt.get(q);ot.bindFramebuffer(F.READ_FRAMEBUFFER,ko),ot.bindFramebuffer(F.DRAW_FRAMEBUFFER,Wo);for(let Nn=0;Nn<qt;Nn++)qe?F.framebufferTextureLayer(F.READ_FRAMEBUFFER,F.COLOR_ATTACHMENT0,Xn.__webglTexture,j,se+Nn):F.framebufferTexture2D(F.READ_FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_2D,Xn.__webglTexture,j),Wn?F.framebufferTextureLayer(F.DRAW_FRAMEBUFFER,F.COLOR_ATTACHMENT0,xn.__webglTexture,Ct,je+Nn):F.framebufferTexture2D(F.DRAW_FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_2D,xn.__webglTexture,Ct),j!==0?F.blitFramebuffer(le,he,Ot,Jt,be,Be,Ot,Jt,F.COLOR_BUFFER_BIT,F.NEAREST):Wn?F.copyTexSubImage3D(Ke,Ct,be,Be,je+Nn,le,he,Ot,Jt):F.copyTexSubImage2D(Ke,Ct,be,Be,le,he,Ot,Jt);ot.bindFramebuffer(F.READ_FRAMEBUFFER,null),ot.bindFramebuffer(F.DRAW_FRAMEBUFFER,null)}else Wn?P.isDataTexture||P.isData3DTexture?F.texSubImage3D(Ke,Ct,be,Be,je,Ot,Jt,qt,Fe,oe,Ge.data):q.isCompressedArrayTexture?F.compressedTexSubImage3D(Ke,Ct,be,Be,je,Ot,Jt,qt,Fe,Ge.data):F.texSubImage3D(Ke,Ct,be,Be,je,Ot,Jt,qt,Fe,oe,Ge):P.isDataTexture?F.texSubImage2D(F.TEXTURE_2D,Ct,be,Be,Ot,Jt,Fe,oe,Ge.data):P.isCompressedTexture?F.compressedTexSubImage2D(F.TEXTURE_2D,Ct,be,Be,Ge.width,Ge.height,Fe,Ge.data):F.texSubImage2D(F.TEXTURE_2D,Ct,be,Be,Ot,Jt,Fe,oe,Ge);F.pixelStorei(F.UNPACK_ROW_LENGTH,Ce),F.pixelStorei(F.UNPACK_IMAGE_HEIGHT,Dn),F.pixelStorei(F.UNPACK_SKIP_PIXELS,ps),F.pixelStorei(F.UNPACK_SKIP_ROWS,Tn),F.pixelStorei(F.UNPACK_SKIP_IMAGES,Gs),Ct===0&&q.generateMipmaps&&F.generateMipmap(Ke),ot.unbindTexture()},this.initRenderTarget=function(P){Mt.get(P).__webglFramebuffer===void 0&&Tt.setupRenderTarget(P)},this.initTexture=function(P){P.isCubeTexture?Tt.setTextureCube(P,0):P.isData3DTexture?Tt.setTexture3D(P,0):P.isDataArrayTexture||P.isCompressedArrayTexture?Tt.setTexture2DArray(P,0):Tt.setTexture2D(P,0),ot.unbindTexture()},this.resetState=function(){R=0,L=0,z=null,ot.reset(),nt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Si}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=Re._getDrawingBufferColorSpace(t),e.unpackColorSpace=Re._getUnpackColorSpace()}}const A3=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:wm,AddEquation:ha,AddOperation:Qy,AdditiveAnimationBlendMode:Om,AdditiveBlending:im,AgXToneMapping:ix,AlphaFormat:Pm,AlwaysCompare:_x,AlwaysDepth:nh,AlwaysStencilFunc:om,AmbientLight:hS,AnimationAction:xS,AnimationClip:nc,AnimationLoader:zT,AnimationMixer:fA,AnimationObjectGroup:uA,AnimationUtils:PT,ArcCurve:zx,ArrayCamera:vS,ArrowHelper:zA,AttachedBindMode:rm,Audio:_S,AudioAnalyser:tA,AudioContext:lg,AudioListener:JT,AudioLoader:ZT,AxesHelper:BA,BackSide:Qn,BasicDepthPacking:cx,BasicShadowMap:Uy,BatchedMesh:Ux,Bone:Wm,BooleanKeyframeTrack:_r,Box2:SA,Box3:Gn,Box3Helper:IA,BoxGeometry:vr,BoxHelper:LA,BufferAttribute:Xe,BufferGeometry:xe,BufferGeometryLoader:gS,ByteType:Rm,Cache:rs,Camera:sf,CameraHelper:PA,CanvasTexture:nT,CapsuleGeometry:hf,CatmullRomCurve3:Bx,CineonToneMapping:ex,CircleGeometry:ff,ClampToEdgeWrapping:Li,Clock:cg,Color:Xt,ColorKeyframeTrack:ag,ColorManagement:Re,CompressedArrayTexture:tT,CompressedCubeTexture:eT,CompressedTexture:uf,CompressedTextureLoader:BT,ConeGeometry:cc,ConstantAlphaFactor:jy,ConstantColorFactor:Yy,Controls:HA,CubeCamera:Tx,CubeReflectionMapping:Fs,CubeRefractionMapping:pa,CubeTexture:oc,CubeTextureLoader:FT,CubeUVReflectionMapping:Lo,CubicBezierCurve:jm,CubicBezierCurve3:Fx,CubicInterpolant:sS,CullFaceBack:nm,CullFaceFront:Ny,CullFaceFrontBack:cE,CullFaceNone:Dy,Curve:Ji,CurvePath:Vx,CustomBlending:Py,CustomToneMapping:nx,CylinderGeometry:lc,Cylindrical:xA,Data3DTexture:nf,DataArrayTexture:ef,DataTexture:ls,DataTextureLoader:HT,DataUtils:T1,DecrementStencilOp:bE,DecrementWrapStencilOp:TE,DefaultLoadingManager:xo,DepthFormat:To,DepthStencilFormat:Ao,DepthTexture:qm,DetachedBindMode:ax,DirectionalLight:uS,DirectionalLightHelper:UA,DiscreteInterpolant:aS,DodecahedronGeometry:df,DoubleSide:Zi,DstAlphaFactor:Gy,DstColorFactor:Wy,DynamicCopyUsage:HE,DynamicDrawUsage:LE,DynamicReadUsage:zE,EdgesGeometry:Ox,EllipseCurve:pf,EqualCompare:px,EqualDepth:sh,EqualStencilFunc:RE,EquirectangularReflectionMapping:Vl,EquirectangularRefractionMapping:Gl,Euler:bi,EventDispatcher:hs,ExternalTexture:Ym,ExtrudeGeometry:mf,FileLoader:Vs,Float16BufferAttribute:U1,Float32BufferAttribute:$t,FloatType:ri,Fog:rf,FogExp2:af,FramebufferTexture:$1,FrontSide:Bs,Frustum:Oo,FrustumArray:cf,GLBufferAttribute:vA,GLSL1:GE,GLSL3:lm,GreaterCompare:mx,GreaterDepth:rh,GreaterEqualCompare:vx,GreaterEqualDepth:ah,GreaterEqualStencilFunc:PE,GreaterStencilFunc:NE,GridHelper:DA,Group:yo,HalfFloatType:Io,HemisphereLight:oS,HemisphereLightHelper:RA,IcosahedronGeometry:gf,ImageBitmapLoader:YT,ImageLoader:ic,ImageUtils:Sx,IncrementStencilOp:ME,IncrementWrapStencilOp:EE,InstancedBufferAttribute:No,InstancedBufferGeometry:mS,InstancedInterleavedBuffer:gA,InstancedMesh:Nx,Int16BufferAttribute:D1,Int32BufferAttribute:N1,Int8BufferAttribute:w1,IntType:Zh,InterleavedBuffer:of,InterleavedBufferAttribute:dr,Interpolant:fc,InterpolateDiscrete:Xl,InterpolateLinear:Oh,InterpolateSmooth:Yu,InterpolationSamplingMode:XE,InterpolationSamplingType:WE,InvertStencilOp:AE,KeepStencilOp:nr,KeyframeTrack:Oi,LOD:Rx,LatheGeometry:vf,Layers:Ro,LessCompare:dx,LessDepth:ih,LessEqualCompare:zm,LessEqualDepth:fr,LessEqualStencilFunc:DE,LessStencilFunc:CE,Light:xa,LightProbe:pS,Line:ga,Line3:EA,LineBasicMaterial:$n,LineCurve:Km,LineCurve3:Hx,LineDashedMaterial:eS,LineLoop:Px,LineSegments:fs,LinearFilter:mn,LinearInterpolant:sg,LinearMipMapLinearFilter:dE,LinearMipMapNearestFilter:fE,LinearMipmapLinearFilter:as,LinearMipmapNearestFilter:Ul,LinearSRGBColorSpace:ma,LinearToneMapping:$y,LinearTransfer:Yl,Loader:oi,LoaderUtils:dm,LoadingManager:rg,LoopOnce:rx,LoopPingPong:lx,LoopRepeat:ox,MOUSE:tr,Material:kn,MaterialLoader:Ef,MathUtils:l1,Matrix2:dg,Matrix3:ve,Matrix4:de,MaxEquation:zy,Mesh:dn,MeshBasicMaterial:_a,MeshDepthMaterial:eg,MeshDistanceMaterial:ng,MeshLambertMaterial:$x,MeshMatcapMaterial:tS,MeshNormalMaterial:Qx,MeshPhongMaterial:Kx,MeshPhysicalMaterial:jx,MeshStandardMaterial:tg,MeshToonMaterial:Jx,MinEquation:Oy,MirroredRepeatWrapping:Wl,MixOperation:Jy,MultiplyBlending:am,MultiplyOperation:ac,NearestFilter:Cn,NearestMipMapLinearFilter:hE,NearestMipMapNearestFilter:uE,NearestMipmapLinearFilter:vo,NearestMipmapNearestFilter:Cm,NeutralToneMapping:sx,NeverCompare:fx,NeverDepth:eh,NeverStencilFunc:wE,NoBlending:Os,NoColorSpace:Ls,NoToneMapping:os,NormalAnimationBlendMode:tf,NormalBlending:cr,NotEqualCompare:gx,NotEqualDepth:oh,NotEqualStencilFunc:UE,NumberKeyframeTrack:tc,Object3D:Le,ObjectLoader:XT,ObjectSpaceNormalMap:hx,OctahedronGeometry:uc,OneFactor:Fy,OneMinusConstantAlphaFactor:Ky,OneMinusConstantColorFactor:Zy,OneMinusDstAlphaFactor:ky,OneMinusDstColorFactor:Xy,OneMinusSrcAlphaFactor:th,OneMinusSrcColorFactor:Vy,OrthographicCamera:cs,PCFShadowMap:qh,PCFSoftShadowMap:Nl,PMREMGenerator:vm,Path:Hh,PerspectiveCamera:en,Plane:Ps,PlaneGeometry:zo,PlaneHelper:OA,PointLight:cS,PointLightHelper:wA,Points:Lx,PointsMaterial:Xm,PolarGridHelper:NA,PolyhedronGeometry:ya,PositionalAudio:$T,PropertyBinding:Ue,PropertyMixer:yS,QuadraticBezierCurve:Jm,QuadraticBezierCurve3:Qm,Quaternion:Vn,QuaternionKeyframeTrack:dc,QuaternionLinearInterpolant:rS,RED_GREEN_RGTC2_Format:Lh,RED_RGTC1_Format:Uh,REVISION:Xh,RGBADepthPacking:ux,RGBAFormat:Hn,RGBAIntegerFormat:$h,RGBA_ASTC_10x10_Format:Ah,RGBA_ASTC_10x5_Format:bh,RGBA_ASTC_10x6_Format:Eh,RGBA_ASTC_10x8_Format:Th,RGBA_ASTC_12x10_Format:wh,RGBA_ASTC_12x12_Format:Ch,RGBA_ASTC_4x4_Format:mh,RGBA_ASTC_5x4_Format:gh,RGBA_ASTC_5x5_Format:vh,RGBA_ASTC_6x5_Format:_h,RGBA_ASTC_6x6_Format:yh,RGBA_ASTC_8x5_Format:xh,RGBA_ASTC_8x6_Format:Sh,RGBA_ASTC_8x8_Format:Mh,RGBA_BPTC_Format:Rh,RGBA_ETC2_EAC_Format:ph,RGBA_PVRTC_2BPPV1_Format:hh,RGBA_PVRTC_4BPPV1_Format:uh,RGBA_S3TC_DXT1_Format:Ll,RGBA_S3TC_DXT3_Format:Il,RGBA_S3TC_DXT5_Format:Ol,RGBDepthPacking:_E,RGBFormat:Lm,RGBIntegerFormat:pE,RGB_BPTC_SIGNED_Format:Dh,RGB_BPTC_UNSIGNED_Format:Nh,RGB_ETC1_Format:fh,RGB_ETC2_Format:dh,RGB_PVRTC_2BPPV1_Format:ch,RGB_PVRTC_4BPPV1_Format:lh,RGB_S3TC_DXT1_Format:Pl,RGDepthPacking:yE,RGFormat:Im,RGIntegerFormat:Qh,RawShaderMaterial:Zx,Ray:gr,Raycaster:SS,RectAreaLight:fS,RedFormat:Jh,RedIntegerFormat:rc,ReinhardToneMapping:tx,RenderTarget:Fm,RenderTarget3D:dA,RepeatWrapping:kl,ReplaceStencilOp:SE,ReverseSubtractEquation:Iy,RingGeometry:_f,SIGNED_RED_GREEN_RGTC2_Format:Ih,SIGNED_RED_RGTC1_Format:Ph,SRGBColorSpace:Fn,SRGBTransfer:Ve,Scene:Gm,ShaderChunk:Me,ShaderLib:Yi,ShaderMaterial:Ki,ShadowMaterial:Yx,Shape:hr,ShapeGeometry:yf,ShapePath:FA,ShapeUtils:ji,ShortType:Dm,Skeleton:lf,SkeletonHelper:AA,SkinnedMesh:Dx,Source:da,Sphere:Rn,SphereGeometry:hc,Spherical:mm,SphericalHarmonics3:dS,SplineCurve:$m,SpotLight:lS,SpotLightHelper:TA,Sprite:Cx,SpriteMaterial:km,SrcAlphaFactor:$u,SrcAlphaSaturateFactor:qy,SrcColorFactor:Hy,StaticCopyUsage:FE,StaticDrawUsage:Zl,StaticReadUsage:OE,StereoCamera:jT,StreamCopyUsage:VE,StreamDrawUsage:IE,StreamReadUsage:BE,StringKeyframeTrack:yr,SubtractEquation:Ly,SubtractiveBlending:sm,TOUCH:er,TangentSpaceNormalMap:va,TetrahedronGeometry:xf,Texture:ln,TextureLoader:VT,TextureUtils:XA,Timer:_A,TimestampQuery:kE,TorusGeometry:Sf,TorusKnotGeometry:Mf,Triangle:ai,TriangleFanDrawMode:vE,TriangleStripDrawMode:gE,TrianglesDrawMode:mE,TubeGeometry:bf,UVMapping:Yh,Uint16BufferAttribute:Hm,Uint32BufferAttribute:Vm,Uint8BufferAttribute:C1,Uint8ClampedBufferAttribute:R1,Uniform:fg,UniformsGroup:mA,UniformsLib:Ft,UniformsUtils:Ex,UnsignedByteType:Ii,UnsignedInt101111Type:Um,UnsignedInt248Type:Eo,UnsignedInt5999Type:Nm,UnsignedIntType:Hs,UnsignedShort4444Type:jh,UnsignedShort5551Type:Kh,UnsignedShortType:bo,VSMShadowMap:qi,Vector2:dt,Vector3:I,Vector4:Pe,VectorKeyframeTrack:ec,VideoFrameTexture:Q1,VideoTexture:Ix,WebGL3DRenderTarget:m1,WebGLArrayRenderTarget:p1,WebGLCoordinateSystem:Si,WebGLCubeRenderTarget:Ax,WebGLRenderTarget:us,WebGLRenderer:RS,WebGLUtils:CS,WebGPUCoordinateSystem:wo,WebXRController:Zu,WireframeGeometry:qx,WrapAroundEnding:ql,ZeroCurvatureEnding:ar,ZeroFactor:By,ZeroSlopeEnding:rr,ZeroStencilOp:xE,createCanvasElement:xx},Symbol.toStringTag,{value:"Module"}));var Fp={exports:{}},Us={};/**
 * @license React
 * react-reconciler-constants.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var iy;function w3(){return iy||(iy=1,Us.ConcurrentRoot=1,Us.ContinuousEventPriority=8,Us.DefaultEventPriority=32,Us.DiscreteEventPriority=2,Us.IdleEventPriority=268435456,Us.LegacyRoot=0,Us.NoEventPriority=0),Us}var sy;function C3(){return sy||(sy=1,Fp.exports=w3()),Fp.exports}var Ku=C3(),Hp={exports:{}},Vp={},Gp={exports:{}},kp={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ay;function R3(){if(ay)return kp;ay=1;var s=Am();function t(m,g){return m===g&&(m!==0||1/m===1/g)||m!==m&&g!==g}var e=typeof Object.is=="function"?Object.is:t,n=s.useState,i=s.useEffect,r=s.useLayoutEffect,l=s.useDebugValue;function c(m,g){var v=g(),x=n({inst:{value:v,getSnapshot:g}}),b=x[0].inst,S=x[1];return r(function(){b.value=v,b.getSnapshot=g,h(b)&&S({inst:b})},[m,v,g]),i(function(){return h(b)&&S({inst:b}),m(function(){h(b)&&S({inst:b})})},[m]),l(v),v}function h(m){var g=m.getSnapshot;m=m.value;try{var v=g();return!e(m,v)}catch{return!0}}function f(m,g){return g()}var p=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?f:c;return kp.useSyncExternalStore=s.useSyncExternalStore!==void 0?s.useSyncExternalStore:p,kp}var ry;function D3(){return ry||(ry=1,Gp.exports=R3()),Gp.exports}/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var oy;function N3(){if(oy)return Vp;oy=1;var s=Am(),t=D3();function e(f,p){return f===p&&(f!==0||1/f===1/p)||f!==f&&p!==p}var n=typeof Object.is=="function"?Object.is:e,i=t.useSyncExternalStore,r=s.useRef,l=s.useEffect,c=s.useMemo,h=s.useDebugValue;return Vp.useSyncExternalStoreWithSelector=function(f,p,m,g,v){var x=r(null);if(x.current===null){var b={hasValue:!1,value:null};x.current=b}else b=x.current;x=c(function(){function _(R){if(!E){if(E=!0,A=R,R=g(R),v!==void 0&&b.hasValue){var L=b.value;if(v(L,R))return T=L}return T=R}if(L=T,n(A,R))return L;var z=g(R);return v!==void 0&&v(L,z)?(A=R,L):(A=R,T=z)}var E=!1,A,T,N=m===void 0?null:m;return[function(){return _(p())},N===null?void 0:function(){return _(N())}]},[p,m,g,v]);var S=i(f,x[0],x[1]);return l(function(){b.hasValue=!0,b.value=S},[S]),h(S),S},Vp}var ly;function U3(){return ly||(ly=1,Hp.exports=N3()),Hp.exports}var P3=U3();const L3=Ry(P3),cy=s=>{let t;const e=new Set,n=(f,p)=>{const m=typeof f=="function"?f(t):f;if(!Object.is(m,t)){const g=t;t=p??(typeof m!="object"||m===null)?m:Object.assign({},t,m),e.forEach(v=>v(t,g))}},i=()=>t,c={setState:n,getState:i,getInitialState:()=>h,subscribe:f=>(e.add(f),()=>e.delete(f))},h=t=s(n,i,c);return c},DS=(s=>s?cy(s):cy),{useSyncExternalStoreWithSelector:I3}=L3,O3=s=>s;function z3(s,t=O3,e){const n=I3(s.subscribe,s.getState,s.getInitialState,t,e);return wl.useDebugValue(n),n}const uy=(s,t)=>{const e=DS(s),n=(i,r=t)=>z3(e,i,r);return Object.assign(n,e),n},B3=((s,t)=>s?uy(s,t):uy),F3=s=>typeof s=="object"&&typeof s.then=="function",lr=[];function NS(s,t,e=(n,i)=>n===i){if(s===t)return!0;if(!s||!t)return!1;const n=s.length;if(t.length!==n)return!1;for(let i=0;i<n;i++)if(!e(s[i],t[i]))return!1;return!0}function US(s,t=null,e=!1,n={}){t===null&&(t=[s]);for(const r of lr)if(NS(t,r.keys,r.equal)){if(e)return;if(Object.prototype.hasOwnProperty.call(r,"error"))throw r.error;if(Object.prototype.hasOwnProperty.call(r,"response"))return n.lifespan&&n.lifespan>0&&(r.timeout&&clearTimeout(r.timeout),r.timeout=setTimeout(r.remove,n.lifespan)),r.response;if(!e)throw r.promise}const i={keys:t,equal:n.equal,remove:()=>{const r=lr.indexOf(i);r!==-1&&lr.splice(r,1)},promise:(F3(s)?s:s(...t)).then(r=>{i.response=r,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(r=>i.error=r)};if(lr.push(i),!e)throw i.promise}const H3=(s,t,e)=>US(s,t,!1,e),V3=(s,t,e)=>void US(s,t,!0,e),G3=s=>{if(s===void 0||s.length===0)lr.splice(0,lr.length);else{const t=lr.find(e=>NS(s,e.keys,e.equal));t&&t.remove()}};var Wp={exports:{}},Xp={exports:{}},qp={exports:{}},Yp={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var hy;function k3(){return hy||(hy=1,(function(s){function t(k,Q){var X=k.length;k.push(Q);t:for(;0<X;){var lt=X-1>>>1,_t=k[lt];if(0<i(_t,Q))k[lt]=Q,k[X]=_t,X=lt;else break t}}function e(k){return k.length===0?null:k[0]}function n(k){if(k.length===0)return null;var Q=k[0],X=k.pop();if(X!==Q){k[0]=X;t:for(var lt=0,_t=k.length,St=_t>>>1;lt<St;){var Lt=2*(lt+1)-1,Yt=k[Lt],Zt=Lt+1,ie=k[Zt];if(0>i(Yt,X))Zt<_t&&0>i(ie,Yt)?(k[lt]=ie,k[Zt]=X,lt=Zt):(k[lt]=Yt,k[Lt]=X,lt=Lt);else if(Zt<_t&&0>i(ie,X))k[lt]=ie,k[Zt]=X,lt=Zt;else break t}}return Q}function i(k,Q){var X=k.sortIndex-Q.sortIndex;return X!==0?X:k.id-Q.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var r=performance;s.unstable_now=function(){return r.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,b=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function A(k){for(var Q=e(f);Q!==null;){if(Q.callback===null)n(f);else if(Q.startTime<=k)n(f),Q.sortIndex=Q.expirationTime,t(h,Q);else break;Q=e(f)}}function T(k){if(b=!1,A(k),!x)if(e(h)!==null)x=!0,$();else{var Q=e(f);Q!==null&&et(T,Q.startTime-k)}}var N=!1,R=-1,L=5,z=-1;function C(){return!(s.unstable_now()-z<L)}function w(){if(N){var k=s.unstable_now();z=k;var Q=!0;try{t:{x=!1,b&&(b=!1,_(R),R=-1),v=!0;var X=g;try{e:{for(A(k),m=e(h);m!==null&&!(m.expirationTime>k&&C());){var lt=m.callback;if(typeof lt=="function"){m.callback=null,g=m.priorityLevel;var _t=lt(m.expirationTime<=k);if(k=s.unstable_now(),typeof _t=="function"){m.callback=_t,A(k),Q=!0;break e}m===e(h)&&n(h),A(k)}else n(h);m=e(h)}if(m!==null)Q=!0;else{var St=e(f);St!==null&&et(T,St.startTime-k),Q=!1}}break t}finally{m=null,g=X,v=!1}Q=void 0}}finally{Q?B():N=!1}}}var B;if(typeof E=="function")B=function(){E(w)};else if(typeof MessageChannel<"u"){var Y=new MessageChannel,W=Y.port2;Y.port1.onmessage=w,B=function(){W.postMessage(null)}}else B=function(){S(w,0)};function $(){N||(N=!0,B())}function et(k,Q){R=S(function(){k(s.unstable_now())},Q)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(k){k.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,$())},s.unstable_forceFrameRate=function(k){0>k||125<k?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):L=0<k?Math.floor(1e3/k):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return e(h)},s.unstable_next=function(k){switch(g){case 1:case 2:case 3:var Q=3;break;default:Q=g}var X=g;g=Q;try{return k()}finally{g=X}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(k,Q){switch(k){case 1:case 2:case 3:case 4:case 5:break;default:k=3}var X=g;g=k;try{return Q()}finally{g=X}},s.unstable_scheduleCallback=function(k,Q,X){var lt=s.unstable_now();switch(typeof X=="object"&&X!==null?(X=X.delay,X=typeof X=="number"&&0<X?lt+X:lt):X=lt,k){case 1:var _t=-1;break;case 2:_t=250;break;case 5:_t=1073741823;break;case 4:_t=1e4;break;default:_t=5e3}return _t=X+_t,k={id:p++,callback:Q,priorityLevel:k,startTime:X,expirationTime:_t,sortIndex:-1},X>lt?(k.sortIndex=X,t(f,k),e(h)===null&&k===e(f)&&(b?(_(R),R=-1):b=!0,et(T,X-lt))):(k.sortIndex=_t,t(h,k),x||v||(x=!0,$())),k},s.unstable_shouldYield=C,s.unstable_wrapCallback=function(k){var Q=g;return function(){var X=g;g=Q;try{return k.apply(this,arguments)}finally{g=X}}}})(Yp)),Yp}var fy;function PS(){return fy||(fy=1,qp.exports=k3()),qp.exports}/**
 * @license React
 * react-reconciler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var dy;function W3(){return dy||(dy=1,(function(s){s.exports=function(t){function e(a,o,u,d){return new yM(a,o,u,d)}function n(){}function i(a){var o="https://react.dev/errors/"+a;if(1<arguments.length){o+="?args[]="+encodeURIComponent(arguments[1]);for(var u=2;u<arguments.length;u++)o+="&args[]="+encodeURIComponent(arguments[u])}return"Minified React error #"+a+"; visit "+o+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function r(a){return a===null||typeof a!="object"?null:(a=Y0&&a[Y0]||a["@@iterator"],typeof a=="function"?a:null)}function l(a){if(a==null)return null;if(typeof a=="function")return a.$$typeof===TM?null:a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case wr:return"Fragment";case Ar:return"Portal";case gd:return"Profiler";case W0:return"StrictMode";case _d:return"Suspense";case yd:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case Zs:return(a.displayName||"Context")+".Provider";case X0:return(a._context.displayName||"Context")+".Consumer";case vd:var o=a.render;return a=a.displayName,a||(a=o.displayName||o.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case xd:return o=a.displayName||null,o!==null?o:l(a.type)||"Memo";case js:o=a._payload,a=a._init;try{return l(a(o))}catch{}}return null}function c(a){if(Sd===void 0)try{throw Error()}catch(u){var o=u.stack.trim().match(/\n( *(at )?)/);Sd=o&&o[1]||"",Z0=-1<u.stack.indexOf(`
    at`)?" (<anonymous>)":-1<u.stack.indexOf("@")?"@unknown:0:0":""}return`
`+Sd+a+Z0}function h(a,o){if(!a||Md)return"";Md=!0;var u=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var d={DetermineComponentFrameRoot:function(){try{if(o){var Gt=function(){throw Error()};if(Object.defineProperty(Gt.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Gt,[])}catch(_e){var Wt=_e}Reflect.construct(a,[],Gt)}else{try{Gt.call()}catch(_e){Wt=_e}a.call(Gt.prototype)}}else{try{throw Error()}catch(_e){Wt=_e}(Gt=a())&&typeof Gt.catch=="function"&&Gt.catch(function(){})}}catch(_e){if(_e&&Wt&&typeof _e.stack=="string")return[_e.stack,Wt.stack]}return[null,null]}};d.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var y=Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot,"name");y&&y.configurable&&Object.defineProperty(d.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var M=d.DetermineComponentFrameRoot(),U=M[0],G=M[1];if(U&&G){var J=U.split(`
`),pt=G.split(`
`);for(y=d=0;d<J.length&&!J[d].includes("DetermineComponentFrameRoot");)d++;for(;y<pt.length&&!pt[y].includes("DetermineComponentFrameRoot");)y++;if(d===J.length||y===pt.length)for(d=J.length-1,y=pt.length-1;1<=d&&0<=y&&J[d]!==pt[y];)y--;for(;1<=d&&0<=y;d--,y--)if(J[d]!==pt[y]){if(d!==1||y!==1)do if(d--,y--,0>y||J[d]!==pt[y]){var Pt=`
`+J[d].replace(" at new "," at ");return a.displayName&&Pt.includes("<anonymous>")&&(Pt=Pt.replace("<anonymous>",a.displayName)),Pt}while(1<=d&&0<=y);break}}}finally{Md=!1,Error.prepareStackTrace=u}return(u=a?a.displayName||a.name:"")?c(u):""}function f(a){switch(a.tag){case 26:case 27:case 5:return c(a.type);case 16:return c("Lazy");case 13:return c("Suspense");case 19:return c("SuspenseList");case 0:case 15:return a=h(a.type,!1),a;case 11:return a=h(a.type.render,!1),a;case 1:return a=h(a.type,!0),a;default:return""}}function p(a){try{var o="";do o+=f(a),a=a.return;while(a);return o}catch(u){return`
Error generating stack: `+u.message+`
`+u.stack}}function m(a){var o=a,u=a;if(a.alternate)for(;o.return;)o=o.return;else{a=o;do o=a,(o.flags&4098)!==0&&(u=o.return),a=o.return;while(a)}return o.tag===3?u:null}function g(a){if(m(a)!==a)throw Error(i(188))}function v(a){var o=a.alternate;if(!o){if(o=m(a),o===null)throw Error(i(188));return o!==a?null:a}for(var u=a,d=o;;){var y=u.return;if(y===null)break;var M=y.alternate;if(M===null){if(d=y.return,d!==null){u=d;continue}break}if(y.child===M.child){for(M=y.child;M;){if(M===u)return g(y),a;if(M===d)return g(y),o;M=M.sibling}throw Error(i(188))}if(u.return!==d.return)u=y,d=M;else{for(var U=!1,G=y.child;G;){if(G===u){U=!0,u=y,d=M;break}if(G===d){U=!0,d=y,u=M;break}G=G.sibling}if(!U){for(G=M.child;G;){if(G===u){U=!0,u=M,d=y;break}if(G===d){U=!0,d=M,u=y;break}G=G.sibling}if(!U)throw Error(i(189))}}if(u.alternate!==d)throw Error(i(190))}if(u.tag!==3)throw Error(i(188));return u.stateNode.current===u?a:o}function x(a){var o=a.tag;if(o===5||o===26||o===27||o===6)return a;for(a=a.child;a!==null;){if(o=x(a),o!==null)return o;a=a.sibling}return null}function b(a){var o=a.tag;if(o===5||o===26||o===27||o===6)return a;for(a=a.child;a!==null;){if(a.tag!==4&&(o=b(a),o!==null))return o;a=a.sibling}return null}function S(a){return{current:a}}function _(a){0>Rr||(a.current=Cd[Rr],Cd[Rr]=null,Rr--)}function E(a,o){Rr++,Cd[Rr]=a.current,a.current=o}function A(a){return a>>>=0,a===0?32:31-(Hb(a)/Vb|0)|0}function T(a){var o=a&42;if(o!==0)return o;switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return a&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return a}}function N(a,o){var u=a.pendingLanes;if(u===0)return 0;var d=0,y=a.suspendedLanes,M=a.pingedLanes,U=a.warmLanes;a=a.finishedLanes!==0;var G=u&134217727;return G!==0?(u=G&~y,u!==0?d=T(u):(M&=G,M!==0?d=T(M):a||(U=G&~U,U!==0&&(d=T(U))))):(G=u&~y,G!==0?d=T(G):M!==0?d=T(M):a||(U=u&~U,U!==0&&(d=T(U)))),d===0?0:o!==0&&o!==d&&(o&y)===0&&(y=d&-d,U=o&-o,y>=U||y===32&&(U&4194176)!==0)?o:d}function R(a,o){return(a.pendingLanes&~(a.suspendedLanes&~a.pingedLanes)&o)===0}function L(a,o){switch(a){case 1:case 2:case 4:case 8:return o+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function z(){var a=Pc;return Pc<<=1,(Pc&4194176)===0&&(Pc=128),a}function C(){var a=Lc;return Lc<<=1,(Lc&62914560)===0&&(Lc=4194304),a}function w(a){for(var o=[],u=0;31>u;u++)o.push(a);return o}function B(a,o){a.pendingLanes|=o,o!==268435456&&(a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0)}function Y(a,o,u,d,y,M){var U=a.pendingLanes;a.pendingLanes=u,a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0,a.expiredLanes&=u,a.entangledLanes&=u,a.errorRecoveryDisabledLanes&=u,a.shellSuspendCounter=0;var G=a.entanglements,J=a.expirationTimes,pt=a.hiddenUpdates;for(u=U&~u;0<u;){var Pt=31-pi(u),Gt=1<<Pt;G[Pt]=0,J[Pt]=-1;var Wt=pt[Pt];if(Wt!==null)for(pt[Pt]=null,Pt=0;Pt<Wt.length;Pt++){var _e=Wt[Pt];_e!==null&&(_e.lane&=-536870913)}u&=~Gt}d!==0&&W(a,d,0),M!==0&&y===0&&a.tag!==0&&(a.suspendedLanes|=M&~(U&~o))}function W(a,o,u){a.pendingLanes|=o,a.suspendedLanes&=~o;var d=31-pi(o);a.entangledLanes|=o,a.entanglements[d]=a.entanglements[d]|1073741824|u&4194218}function $(a,o){var u=a.entangledLanes|=o;for(a=a.entanglements;u;){var d=31-pi(u),y=1<<d;y&o|a[d]&o&&(a[d]|=o),u&=~y}}function et(a){return a&=-a,2<a?8<a?(a&134217727)!==0?32:268435456:8:2}function k(a){if(mi&&typeof mi.onCommitFiberRoot=="function")try{mi.onCommitFiberRoot(nl,a,void 0,(a.current.flags&128)===128)}catch{}}function Q(a){if(typeof qb=="function"&&Yb(a),mi&&typeof mi.setStrictMode=="function")try{mi.setStrictMode(nl,a)}catch{}}function X(a,o){return a===o&&(a!==0||1/a===1/o)||a!==a&&o!==o}function lt(a,o){if(typeof a=="object"&&a!==null){var u=xv.get(a);return u!==void 0?u:(o={value:a,source:o,stack:p(o)},xv.set(a,o),o)}return{value:a,source:o,stack:p(o)}}function _t(a,o){Nr[Ur++]=zc,Nr[Ur++]=Oc,Oc=a,zc=o}function St(a,o,u){wi[Ci++]=xs,wi[Ci++]=Ss,wi[Ci++]=Da,Da=a;var d=xs;a=Ss;var y=32-pi(d)-1;d&=~(1<<y),u+=1;var M=32-pi(o)+y;if(30<M){var U=y-y%5;M=(d&(1<<U)-1).toString(32),d>>=U,y-=U,xs=1<<32-pi(o)+y|u<<y|d,Ss=M+a}else xs=1<<M|u<<y|d,Ss=a}function Lt(a){a.return!==null&&(_t(a,1),St(a,1,0))}function Yt(a){for(;a===Oc;)Oc=Nr[--Ur],Nr[Ur]=null,zc=Nr[--Ur],Nr[Ur]=null;for(;a===Da;)Da=wi[--Ci],wi[Ci]=null,Ss=wi[--Ci],wi[Ci]=null,xs=wi[--Ci],wi[Ci]=null}function Zt(a,o){E(Js,o),E(il,a),E(wn,null),a=CM(o),_(wn),E(wn,a)}function ie(){_(wn),_(il),_(Js)}function ut(a){a.memoizedState!==null&&E(Bc,a);var o=wn.current,u=RM(o,a.type);o!==u&&(E(il,a),E(wn,u))}function xt(a){il.current===a&&(_(wn),_(il)),Bc.current===a&&(_(Bc),ys?Ra._currentValue=Cr:Ra._currentValue2=Cr)}function zt(a){var o=Error(i(418,""));throw F(lt(o,a)),Nd}function te(a,o){if(!Ti)throw Error(i(175));Mb(a.stateNode,a.type,a.memoizedProps,o,a)||zt(a)}function Bt(a){for(Yn=a.return;Yn;)switch(Yn.tag){case 3:case 27:Qi=!0;return;case 5:case 13:Qi=!1;return;default:Yn=Yn.return}}function kt(a){if(!Ti||a!==Yn)return!1;if(!Ie)return Bt(a),Ie=!0,!1;var o=!1;if(Ln?a.tag!==3&&a.tag!==27&&(a.tag!==5||cv(a.type)&&!Uc(a.type,a.memoizedProps))&&(o=!0):a.tag!==3&&(a.tag!==5||cv(a.type)&&!Uc(a.type,a.memoizedProps))&&(o=!0),o&&In&&zt(a),Bt(a),a.tag===13){if(!Ti)throw Error(i(316));if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(i(317));In=Tb(a)}else In=Yn?ov(a.stateNode):null;return!0}function ge(){Ti&&(In=Yn=null,Ie=!1)}function F(a){Vi===null?Vi=[a]:Vi.push(a)}function gt(){for(var a=Pr,o=Ud=Pr=0;o<a;){var u=Ri[o];Ri[o++]=null;var d=Ri[o];Ri[o++]=null;var y=Ri[o];Ri[o++]=null;var M=Ri[o];if(Ri[o++]=null,d!==null&&y!==null){var U=d.pending;U===null?y.next=y:(y.next=U.next,U.next=y),d.pending=y}M!==0&&Nt(u,y,M)}}function ht(a,o,u,d){Ri[Pr++]=a,Ri[Pr++]=o,Ri[Pr++]=u,Ri[Pr++]=d,Ud|=d,a.lanes|=d,a=a.alternate,a!==null&&(a.lanes|=d)}function ft(a,o,u,d){return ht(a,o,u,d),Mt(a)}function ot(a,o){return ht(a,null,null,o),Mt(a)}function Nt(a,o,u){a.lanes|=u;var d=a.alternate;d!==null&&(d.lanes|=u);for(var y=!1,M=a.return;M!==null;)M.childLanes|=u,d=M.alternate,d!==null&&(d.childLanes|=u),M.tag===22&&(a=M.stateNode,a===null||a._visibility&1||(y=!0)),a=M,M=M.return;y&&o!==null&&a.tag===3&&(M=a.stateNode,y=31-pi(u),M=M.hiddenUpdates,a=M[y],a===null?M[y]=[o]:a.push(o),o.lane=u|536870912)}function Mt(a){if(50<fl)throw fl=0,Zd=null,Error(i(185));for(var o=a.return;o!==null;)a=o,o=a.return;return a.tag===3?a.stateNode:null}function Tt(a){a!==Lr&&a.next===null&&(Lr===null?Fc=Lr=a:Lr=Lr.next=a),Hc=!0,Pd||(Pd=!0,rt(ce))}function re(a,o){if(!Ld&&Hc){Ld=!0;do for(var u=!1,d=Fc;d!==null;){if(a!==0){var y=d.pendingLanes;if(y===0)var M=0;else{var U=d.suspendedLanes,G=d.pingedLanes;M=(1<<31-pi(42|a)+1)-1,M&=y&~(U&~G),M=M&201326677?M&201326677|1:M?M|2:0}M!==0&&(u=!0,K(d,M))}else M=Ne,M=N(d,d===Ye?M:0),(M&3)===0||R(d,M)||(u=!0,K(d,M));d=d.next}while(u);Ld=!1}}function ce(){Hc=Pd=!1;var a=0;Ir!==0&&(zM()&&(a=Ir),Ir=0);for(var o=Hi(),u=null,d=Fc;d!==null;){var y=d.next,M=O(d,o);M===0?(d.next=null,u===null?Fc=y:u.next=y,y===null&&(Lr=u)):(u=d,(a!==0||(M&3)!==0)&&(Hc=!0)),d=y}re(a)}function O(a,o){for(var u=a.suspendedLanes,d=a.pingedLanes,y=a.expirationTimes,M=a.pendingLanes&-62914561;0<M;){var U=31-pi(M),G=1<<U,J=y[U];J===-1?((G&u)===0||(G&d)!==0)&&(y[U]=L(G,o)):J<=o&&(a.expiredLanes|=G),M&=~G}if(o=Ye,u=Ne,u=N(a,a===o?u:0),d=a.callbackNode,u===0||a===o&&Ze===2||a.cancelPendingCommit!==null)return d!==null&&d!==null&&Rd(d),a.callbackNode=null,a.callbackPriority=0;if((u&3)===0||R(a,u)){if(o=u&-u,o===a.callbackPriority)return o;switch(d!==null&&Rd(d),et(u)){case 2:case 8:u=Wb;break;case 32:u=Dd;break;case 268435456:u=Xb;break;default:u=Dd}return d=D.bind(null,a),u=Ic(u,d),a.callbackPriority=o,a.callbackNode=u,o}return d!==null&&d!==null&&Rd(d),a.callbackPriority=2,a.callbackNode=null,2}function D(a,o){var u=a.callbackNode;if(Aa()&&a.callbackNode!==u)return null;var d=Ne;return d=N(a,a===Ye?d:0),d===0?null:(b0(a,d,o),O(a,Hi()),a.callbackNode!=null&&a.callbackNode===u?D.bind(null,a):null)}function K(a,o){if(Aa())return null;b0(a,o,!0)}function rt(a){kM?WM(function(){(We&6)!==0?Ic(yv,a):a()}):Ic(yv,a)}function mt(){return Ir===0&&(Ir=z()),Ir}function ct(a,o){if(sl===null){var u=sl=[];Id=0,Or=mt(),zr={status:"pending",value:void 0,then:function(d){u.push(d)}}}return Id++,o.then(Qt,Qt),o}function Qt(){if(--Id===0&&sl!==null){zr!==null&&(zr.status="fulfilled");var a=sl;sl=null,Or=0,zr=null;for(var o=0;o<a.length;o++)(0,a[o])()}}function Ut(a,o){var u=[],d={status:"pending",value:null,reason:null,then:function(y){u.push(y)}};return a.then(function(){d.status="fulfilled",d.value=o;for(var y=0;y<u.length;y++)(0,u[y])(o)},function(y){for(d.status="rejected",d.reason=y,y=0;y<u.length;y++)(0,u[y])(void 0)}),d}function jt(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function Kt(a,o){a=a.updateQueue,o.updateQueue===a&&(o.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,callbacks:null})}function bt(a){return{lane:a,tag:0,payload:null,callback:null,next:null}}function It(a,o,u){var d=a.updateQueue;if(d===null)return null;if(d=d.shared,(We&2)!==0){var y=d.pending;return y===null?o.next=o:(o.next=y.next,y.next=o),d.pending=o,o=Mt(a),Nt(a,null,u),o}return ht(a,d,o,u),Mt(a)}function ee(a,o,u){if(o=o.updateQueue,o!==null&&(o=o.shared,(u&4194176)!==0)){var d=o.lanes;d&=a.pendingLanes,u|=d,o.lanes=u,$(a,u)}}function H(a,o){var u=a.updateQueue,d=a.alternate;if(d!==null&&(d=d.updateQueue,u===d)){var y=null,M=null;if(u=u.firstBaseUpdate,u!==null){do{var U={lane:u.lane,tag:u.tag,payload:u.payload,callback:null,next:null};M===null?y=M=U:M=M.next=U,u=u.next}while(u!==null);M===null?y=M=o:M=M.next=o}else y=M=o;u={baseState:d.baseState,firstBaseUpdate:y,lastBaseUpdate:M,shared:d.shared,callbacks:d.callbacks},a.updateQueue=u;return}a=u.lastBaseUpdate,a===null?u.firstBaseUpdate=o:a.next=o,u.lastBaseUpdate=o}function nt(){if(Od){var a=zr;if(a!==null)throw a}}function At(a,o,u,d){Od=!1;var y=a.updateQueue;Qs=!1;var M=y.firstBaseUpdate,U=y.lastBaseUpdate,G=y.shared.pending;if(G!==null){y.shared.pending=null;var J=G,pt=J.next;J.next=null,U===null?M=pt:U.next=pt,U=J;var Pt=a.alternate;Pt!==null&&(Pt=Pt.updateQueue,G=Pt.lastBaseUpdate,G!==U&&(G===null?Pt.firstBaseUpdate=pt:G.next=pt,Pt.lastBaseUpdate=J))}if(M!==null){var Gt=y.baseState;U=0,Pt=pt=J=null,G=M;do{var Wt=G.lane&-536870913,_e=Wt!==G.lane;if(_e?(Ne&Wt)===Wt:(d&Wt)===Wt){Wt!==0&&Wt===Or&&(Od=!0),Pt!==null&&(Pt=Pt.next={lane:0,tag:G.tag,payload:G.payload,callback:null,next:null});t:{var Ui=a,dl=G;Wt=o;var Fa=u;switch(dl.tag){case 1:if(Ui=dl.payload,typeof Ui=="function"){Gt=Ui.call(Fa,Gt,Wt);break t}Gt=Ui;break t;case 3:Ui.flags=Ui.flags&-65537|128;case 0:if(Ui=dl.payload,Wt=typeof Ui=="function"?Ui.call(Fa,Gt,Wt):Ui,Wt==null)break t;Gt=md({},Gt,Wt);break t;case 2:Qs=!0}}Wt=G.callback,Wt!==null&&(a.flags|=64,_e&&(a.flags|=8192),_e=y.callbacks,_e===null?y.callbacks=[Wt]:_e.push(Wt))}else _e={lane:Wt,tag:G.tag,payload:G.payload,callback:G.callback,next:null},Pt===null?(pt=Pt=_e,J=Gt):Pt=Pt.next=_e,U|=Wt;if(G=G.next,G===null){if(G=y.shared.pending,G===null)break;_e=G,G=_e.next,_e.next=null,y.lastBaseUpdate=_e,y.shared.pending=null}}while(!0);Pt===null&&(J=Gt),y.baseState=J,y.firstBaseUpdate=pt,y.lastBaseUpdate=Pt,M===null&&(y.shared.lanes=0),ea|=U,a.lanes=U,a.memoizedState=Gt}}function V(a,o){if(typeof a!="function")throw Error(i(191,a));a.call(o)}function yt(a,o){var u=a.callbacks;if(u!==null)for(a.callbacks=null,a=0;a<u.length;a++)V(u[a],o)}function wt(a,o){if(gi(a,o))return!0;if(typeof a!="object"||a===null||typeof o!="object"||o===null)return!1;var u=Object.keys(a),d=Object.keys(o);if(u.length!==d.length)return!1;for(d=0;d<u.length;d++){var y=u[d];if(!Zb.call(o,y)||!gi(a[y],o[y]))return!1}return!0}function Ht(a){return a=a.status,a==="fulfilled"||a==="rejected"}function Et(){}function vt(a,o,u){switch(u=a[u],u===void 0?a.push(o):u!==o&&(o.then(Et,Et),o=u),o.status){case"fulfilled":return o.value;case"rejected":throw a=o.reason,a===al?Error(i(483)):a;default:if(typeof o.status=="string")o.then(Et,Et);else{if(a=Ye,a!==null&&100<a.shellSuspendCounter)throw Error(i(482));a=o,a.status="pending",a.then(function(d){if(o.status==="pending"){var y=o;y.status="fulfilled",y.value=d}},function(d){if(o.status==="pending"){var y=o;y.status="rejected",y.reason=d}})}switch(o.status){case"fulfilled":return o.value;case"rejected":throw a=o.reason,a===al?Error(i(483)):a}throw Br=o,al}}function Vt(){if(Br===null)throw Error(i(459));var a=Br;return Br=null,a}function ne(a){var o=rl;return rl+=1,Fr===null&&(Fr=[]),vt(Fr,a,o)}function Te(a,o){o=o.props.ref,a.ref=o!==void 0?o:null}function Se(a,o){throw o.$$typeof===MM?Error(i(525)):(a=Object.prototype.toString.call(o),Error(i(31,a==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":a)))}function _n(a){var o=a._init;return o(a._payload)}function yn(a){function o(it,Z){if(a){var at=it.deletions;at===null?(it.deletions=[Z],it.flags|=16):at.push(Z)}}function u(it,Z){if(!a)return null;for(;Z!==null;)o(it,Z),Z=Z.sibling;return null}function d(it){for(var Z=new Map;it!==null;)it.key!==null?Z.set(it.key,it):Z.set(it.index,it),it=it.sibling;return Z}function y(it,Z){return it=Ys(it,Z),it.index=0,it.sibling=null,it}function M(it,Z,at){return it.index=at,a?(at=it.alternate,at!==null?(at=at.index,at<Z?(it.flags|=33554434,Z):at):(it.flags|=33554434,Z)):(it.flags|=1048576,Z)}function U(it){return a&&it.alternate===null&&(it.flags|=33554434),it}function G(it,Z,at,Rt){return Z===null||Z.tag!==6?(Z=fd(at,it.mode,Rt),Z.return=it,Z):(Z=y(Z,at),Z.return=it,Z)}function J(it,Z,at,Rt){var ae=at.type;return ae===wr?Pt(it,Z,at.props.children,Rt,at.key):Z!==null&&(Z.elementType===ae||typeof ae=="object"&&ae!==null&&ae.$$typeof===js&&_n(ae)===Z.type)?(Z=y(Z,at.props),Te(Z,at),Z.return=it,Z):(Z=Rc(at.type,at.key,at.props,null,it.mode,Rt),Te(Z,at),Z.return=it,Z)}function pt(it,Z,at,Rt){return Z===null||Z.tag!==4||Z.stateNode.containerInfo!==at.containerInfo||Z.stateNode.implementation!==at.implementation?(Z=dd(at,it.mode,Rt),Z.return=it,Z):(Z=y(Z,at.children||[]),Z.return=it,Z)}function Pt(it,Z,at,Rt,ae){return Z===null||Z.tag!==7?(Z=wa(at,it.mode,Rt,ae),Z.return=it,Z):(Z=y(Z,at),Z.return=it,Z)}function Gt(it,Z,at){if(typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint")return Z=fd(""+Z,it.mode,at),Z.return=it,Z;if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case Dc:return at=Rc(Z.type,Z.key,Z.props,null,it.mode,at),Te(at,Z),at.return=it,at;case Ar:return Z=dd(Z,it.mode,at),Z.return=it,Z;case js:var Rt=Z._init;return Z=Rt(Z._payload),Gt(it,Z,at)}if(Nc(Z)||r(Z))return Z=wa(Z,it.mode,at,null),Z.return=it,Z;if(typeof Z.then=="function")return Gt(it,ne(Z),at);if(Z.$$typeof===Zs)return Gt(it,bc(it,Z),at);Se(it,Z)}return null}function Wt(it,Z,at,Rt){var ae=Z!==null?Z.key:null;if(typeof at=="string"&&at!==""||typeof at=="number"||typeof at=="bigint")return ae!==null?null:G(it,Z,""+at,Rt);if(typeof at=="object"&&at!==null){switch(at.$$typeof){case Dc:return at.key===ae?J(it,Z,at,Rt):null;case Ar:return at.key===ae?pt(it,Z,at,Rt):null;case js:return ae=at._init,at=ae(at._payload),Wt(it,Z,at,Rt)}if(Nc(at)||r(at))return ae!==null?null:Pt(it,Z,at,Rt,null);if(typeof at.then=="function")return Wt(it,Z,ne(at),Rt);if(at.$$typeof===Zs)return Wt(it,Z,bc(it,at),Rt);Se(it,at)}return null}function _e(it,Z,at,Rt,ae){if(typeof Rt=="string"&&Rt!==""||typeof Rt=="number"||typeof Rt=="bigint")return it=it.get(at)||null,G(Z,it,""+Rt,ae);if(typeof Rt=="object"&&Rt!==null){switch(Rt.$$typeof){case Dc:return it=it.get(Rt.key===null?at:Rt.key)||null,J(Z,it,Rt,ae);case Ar:return it=it.get(Rt.key===null?at:Rt.key)||null,pt(Z,it,Rt,ae);case js:var Je=Rt._init;return Rt=Je(Rt._payload),_e(it,Z,at,Rt,ae)}if(Nc(Rt)||r(Rt))return it=it.get(at)||null,Pt(Z,it,Rt,ae,null);if(typeof Rt.then=="function")return _e(it,Z,at,ne(Rt),ae);if(Rt.$$typeof===Zs)return _e(it,Z,at,bc(Z,Rt),ae);Se(Z,Rt)}return null}function Ui(it,Z,at,Rt){for(var ae=null,Je=null,pe=Z,Oe=Z=0,bn=null;pe!==null&&Oe<at.length;Oe++){pe.index>Oe?(bn=pe,pe=null):bn=pe.sibling;var ze=Wt(it,pe,at[Oe],Rt);if(ze===null){pe===null&&(pe=bn);break}a&&pe&&ze.alternate===null&&o(it,pe),Z=M(ze,Z,Oe),Je===null?ae=ze:Je.sibling=ze,Je=ze,pe=bn}if(Oe===at.length)return u(it,pe),Ie&&_t(it,Oe),ae;if(pe===null){for(;Oe<at.length;Oe++)pe=Gt(it,at[Oe],Rt),pe!==null&&(Z=M(pe,Z,Oe),Je===null?ae=pe:Je.sibling=pe,Je=pe);return Ie&&_t(it,Oe),ae}for(pe=d(pe);Oe<at.length;Oe++)bn=_e(pe,it,Oe,at[Oe],Rt),bn!==null&&(a&&bn.alternate!==null&&pe.delete(bn.key===null?Oe:bn.key),Z=M(bn,Z,Oe),Je===null?ae=bn:Je.sibling=bn,Je=bn);return a&&pe.forEach(function(ia){return o(it,ia)}),Ie&&_t(it,Oe),ae}function dl(it,Z,at,Rt){if(at==null)throw Error(i(151));for(var ae=null,Je=null,pe=Z,Oe=Z=0,bn=null,ze=at.next();pe!==null&&!ze.done;Oe++,ze=at.next()){pe.index>Oe?(bn=pe,pe=null):bn=pe.sibling;var ia=Wt(it,pe,ze.value,Rt);if(ia===null){pe===null&&(pe=bn);break}a&&pe&&ia.alternate===null&&o(it,pe),Z=M(ia,Z,Oe),Je===null?ae=ia:Je.sibling=ia,Je=ia,pe=bn}if(ze.done)return u(it,pe),Ie&&_t(it,Oe),ae;if(pe===null){for(;!ze.done;Oe++,ze=at.next())ze=Gt(it,ze.value,Rt),ze!==null&&(Z=M(ze,Z,Oe),Je===null?ae=ze:Je.sibling=ze,Je=ze);return Ie&&_t(it,Oe),ae}for(pe=d(pe);!ze.done;Oe++,ze=at.next())ze=_e(pe,it,Oe,ze.value,Rt),ze!==null&&(a&&ze.alternate!==null&&pe.delete(ze.key===null?Oe:ze.key),Z=M(ze,Z,Oe),Je===null?ae=ze:Je.sibling=ze,Je=ze);return a&&pe.forEach(function(eE){return o(it,eE)}),Ie&&_t(it,Oe),ae}function Fa(it,Z,at,Rt){if(typeof at=="object"&&at!==null&&at.type===wr&&at.key===null&&(at=at.props.children),typeof at=="object"&&at!==null){switch(at.$$typeof){case Dc:t:{for(var ae=at.key;Z!==null;){if(Z.key===ae){if(ae=at.type,ae===wr){if(Z.tag===7){u(it,Z.sibling),Rt=y(Z,at.props.children),Rt.return=it,it=Rt;break t}}else if(Z.elementType===ae||typeof ae=="object"&&ae!==null&&ae.$$typeof===js&&_n(ae)===Z.type){u(it,Z.sibling),Rt=y(Z,at.props),Te(Rt,at),Rt.return=it,it=Rt;break t}u(it,Z);break}else o(it,Z);Z=Z.sibling}at.type===wr?(Rt=wa(at.props.children,it.mode,Rt,at.key),Rt.return=it,it=Rt):(Rt=Rc(at.type,at.key,at.props,null,it.mode,Rt),Te(Rt,at),Rt.return=it,it=Rt)}return U(it);case Ar:t:{for(ae=at.key;Z!==null;){if(Z.key===ae)if(Z.tag===4&&Z.stateNode.containerInfo===at.containerInfo&&Z.stateNode.implementation===at.implementation){u(it,Z.sibling),Rt=y(Z,at.children||[]),Rt.return=it,it=Rt;break t}else{u(it,Z);break}else o(it,Z);Z=Z.sibling}Rt=dd(at,it.mode,Rt),Rt.return=it,it=Rt}return U(it);case js:return ae=at._init,at=ae(at._payload),Fa(it,Z,at,Rt)}if(Nc(at))return Ui(it,Z,at,Rt);if(r(at)){if(ae=r(at),typeof ae!="function")throw Error(i(150));return at=ae.call(at),dl(it,Z,at,Rt)}if(typeof at.then=="function")return Fa(it,Z,ne(at),Rt);if(at.$$typeof===Zs)return Fa(it,Z,bc(it,at),Rt);Se(it,at)}return typeof at=="string"&&at!==""||typeof at=="number"||typeof at=="bigint"?(at=""+at,Z!==null&&Z.tag===6?(u(it,Z.sibling),Rt=y(Z,at),Rt.return=it,it=Rt):(u(it,Z),Rt=fd(at,it.mode,Rt),Rt.return=it,it=Rt),U(it)):u(it,Z)}return function(it,Z,at,Rt){try{rl=0;var ae=Fa(it,Z,at,Rt);return Fr=null,ae}catch(pe){if(pe===al)throw pe;var Je=e(29,pe,null,it.mode);return Je.lanes=Rt,Je.return=it,Je}finally{}}}function Ho(a,o){a=Ts,E(Gc,a),E(Hr,o),Ts=a|o.baseLanes}function zi(){E(Gc,Ts),E(Hr,Hr.current)}function Sa(){Ts=Gc.current,_(Hr),_(Gc)}function Bi(a){var o=a.alternate;E(pn,pn.current&1),E(Di,a),$i===null&&(o===null||Hr.current!==null||o.memoizedState!==null)&&($i=a)}function Vo(a){if(a.tag===22){if(E(pn,pn.current),E(Di,a),$i===null){var o=a.alternate;o!==null&&o.memoizedState!==null&&($i=a)}}else li()}function li(){E(pn,pn.current),E(Di,Di.current)}function Ei(a){_(Di),$i===a&&($i=null),_(pn)}function ds(a){for(var o=a;o!==null;){if(o.tag===13){var u=o.memoizedState;if(u!==null&&(u=u.dehydrated,u===null||Td(u)||Ad(u)))return o}else if(o.tag===19&&o.memoizedProps.revealOrder!==void 0){if((o.flags&128)!==0)return o}else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break;for(;o.sibling===null;){if(o.return===null||o.return===a)return null;o=o.return}o.sibling.return=o.return,o=o.sibling}return null}function Qe(){throw Error(i(321))}function xr(a,o){if(o===null)return!1;for(var u=0;u<o.length&&u<a.length;u++)if(!gi(a[u],o[u]))return!1;return!0}function Go(a,o,u,d,y,M){return $s=M,Ee=o,o.memoizedState=null,o.updateQueue=null,o.lanes=0,me.H=a===null||a.memoizedState===null?Pa:ta,Ua=!1,M=u(d,y),Ua=!1,Vr&&(M=vc(o,u,d,y)),gc(a),M}function gc(a){me.H=ts;var o=ke!==null&&ke.next!==null;if($s=0,un=ke=Ee=null,kc=!1,ol=0,Gr=null,o)throw Error(i(300));a===null||Sn||(a=a.dependencies,a!==null&&Mc(a)&&(Sn=!0))}function vc(a,o,u,d){Ee=a;var y=0;do{if(Vr&&(Gr=null),ol=0,Vr=!1,25<=y)throw Error(i(301));if(y+=1,un=ke=null,a.updateQueue!=null){var M=a.updateQueue;M.lastEffect=null,M.events=null,M.stores=null,M.memoCache!=null&&(M.memoCache.index=0)}me.H=La,M=o(u,d)}while(Vr);return M}function wf(){var a=me.H,o=a.useState()[0];return o=typeof o.then=="function"?st(o):o,a=a.useState()[0],(ke!==null?ke.memoizedState:null)!==a&&(Ee.flags|=1024),o}function ko(){var a=Wc!==0;return Wc=0,a}function Wo(a,o,u){o.updateQueue=a.updateQueue,o.flags&=-2053,a.lanes&=~u}function P(a){if(kc){for(a=a.memoizedState;a!==null;){var o=a.queue;o!==null&&(o.pending=null),a=a.next}kc=!1}$s=0,un=ke=Ee=null,Vr=!1,ol=Wc=0,Gr=null}function q(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return un===null?Ee.memoizedState=un=a:un=un.next=a,un}function tt(){if(ke===null){var a=Ee.alternate;a=a!==null?a.memoizedState:null}else a=ke.next;var o=un===null?Ee.memoizedState:un.next;if(o!==null)un=o,ke=a;else{if(a===null)throw Ee.alternate===null?Error(i(467)):Error(i(310));ke=a,a={memoizedState:ke.memoizedState,baseState:ke.baseState,baseQueue:ke.baseQueue,queue:ke.queue,next:null},un===null?Ee.memoizedState=un=a:un=un.next=a}return un}function st(a){var o=ol;return ol+=1,Gr===null&&(Gr=[]),a=vt(Gr,a,o),o=Ee,(un===null?o.memoizedState:un.next)===null&&(o=o.alternate,me.H=o===null||o.memoizedState===null?Pa:ta),a}function j(a){if(a!==null&&typeof a=="object"){if(typeof a.then=="function")return st(a);if(a.$$typeof===Zs)return Un(a)}throw Error(i(438,String(a)))}function Ct(a){var o=null,u=Ee.updateQueue;if(u!==null&&(o=u.memoCache),o==null){var d=Ee.alternate;d!==null&&(d=d.updateQueue,d!==null&&(d=d.memoCache,d!=null&&(o={data:d.data.map(function(y){return y.slice()}),index:0})))}if(o==null&&(o={data:[],index:0}),u===null&&(u=Bd(),Ee.updateQueue=u),u.memoCache=o,u=o.data[o.index],u===void 0)for(u=o.data[o.index]=Array(a),d=0;d<a;d++)u[d]=EM;return o.index++,u}function Ot(a,o){return typeof o=="function"?o(a):o}function Jt(a){var o=tt();return qt(o,ke,a)}function qt(a,o,u){var d=a.queue;if(d===null)throw Error(i(311));d.lastRenderedReducer=u;var y=a.baseQueue,M=d.pending;if(M!==null){if(y!==null){var U=y.next;y.next=M.next,M.next=U}o.baseQueue=y=M,d.pending=null}if(M=a.baseState,y===null)a.memoizedState=M;else{o=y.next;var G=U=null,J=null,pt=o,Pt=!1;do{var Gt=pt.lane&-536870913;if(Gt!==pt.lane?(Ne&Gt)===Gt:($s&Gt)===Gt){var Wt=pt.revertLane;if(Wt===0)J!==null&&(J=J.next={lane:0,revertLane:0,action:pt.action,hasEagerState:pt.hasEagerState,eagerState:pt.eagerState,next:null}),Gt===Or&&(Pt=!0);else if(($s&Wt)===Wt){pt=pt.next,Wt===Or&&(Pt=!0);continue}else Gt={lane:0,revertLane:pt.revertLane,action:pt.action,hasEagerState:pt.hasEagerState,eagerState:pt.eagerState,next:null},J===null?(G=J=Gt,U=M):J=J.next=Gt,Ee.lanes|=Wt,ea|=Wt;Gt=pt.action,Ua&&u(M,Gt),M=pt.hasEagerState?pt.eagerState:u(M,Gt)}else Wt={lane:Gt,revertLane:pt.revertLane,action:pt.action,hasEagerState:pt.hasEagerState,eagerState:pt.eagerState,next:null},J===null?(G=J=Wt,U=M):J=J.next=Wt,Ee.lanes|=Gt,ea|=Gt;pt=pt.next}while(pt!==null&&pt!==o);if(J===null?U=M:J.next=G,!gi(M,a.memoizedState)&&(Sn=!0,Pt&&(u=zr,u!==null)))throw u;a.memoizedState=M,a.baseState=U,a.baseQueue=J,d.lastRenderedState=M}return y===null&&(d.lanes=0),[a.memoizedState,d.dispatch]}function le(a){var o=tt(),u=o.queue;if(u===null)throw Error(i(311));u.lastRenderedReducer=a;var d=u.dispatch,y=u.pending,M=o.memoizedState;if(y!==null){u.pending=null;var U=y=y.next;do M=a(M,U.action),U=U.next;while(U!==y);gi(M,o.memoizedState)||(Sn=!0),o.memoizedState=M,o.baseQueue===null&&(o.baseState=M),u.lastRenderedState=M}return[M,d]}function he(a,o,u){var d=Ee,y=tt(),M=Ie;if(M){if(u===void 0)throw Error(i(407));u=u()}else u=o();var U=!gi((ke||y).memoizedState,u);if(U&&(y.memoizedState=u,Sn=!0),y=y.queue,Cf(Be.bind(null,d,y,a),[a]),y.getSnapshot!==o||U||un!==null&&un.memoizedState.tag&1){if(d.flags|=2048,ti(9,be.bind(null,d,y,u,o),{destroy:void 0},null),Ye===null)throw Error(i(349));M||($s&60)!==0||se(d,o,u)}return u}function se(a,o,u){a.flags|=16384,a={getSnapshot:o,value:u},o=Ee.updateQueue,o===null?(o=Bd(),Ee.updateQueue=o,o.stores=[a]):(u=o.stores,u===null?o.stores=[a]:u.push(a))}function be(a,o,u,d){o.value=u,o.getSnapshot=d,je(o)&&Ge(a)}function Be(a,o,u){return u(function(){je(o)&&Ge(a)})}function je(a){var o=a.getSnapshot;a=a.value;try{var u=o();return!gi(a,u)}catch{return!0}}function Ge(a){var o=ot(a,2);o!==null&&qn(o,a,2)}function Fe(a){var o=q();if(typeof a=="function"){var u=a;if(a=u(),Ua){Q(!0);try{u()}finally{Q(!1)}}}return o.memoizedState=o.baseState=a,o.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ot,lastRenderedState:a},o}function oe(a,o,u,d){return a.baseState=u,qt(a,ke,typeof d=="function"?d:Ot)}function Ke(a,o,u,d,y){if(xc(a))throw Error(i(485));if(a=o.action,a!==null){var M={payload:y,action:a,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(U){M.listeners.push(U)}};me.T!==null?u(!0):M.isTransition=!1,d(M),u=o.pending,u===null?(M.next=o.pending=M,Ce(o,M)):(M.next=u.next,o.pending=u.next=M)}}function Ce(a,o){var u=o.action,d=o.payload,y=a.state;if(o.isTransition){var M=me.T,U={};me.T=U;try{var G=u(y,d),J=me.S;J!==null&&J(U,G),Dn(a,o,G)}catch(pt){Tn(a,o,pt)}finally{me.T=M}}else try{M=u(y,d),Dn(a,o,M)}catch(pt){Tn(a,o,pt)}}function Dn(a,o,u){u!==null&&typeof u=="object"&&typeof u.then=="function"?u.then(function(d){ps(a,o,d)},function(d){return Tn(a,o,d)}):ps(a,o,u)}function ps(a,o,u){o.status="fulfilled",o.value=u,Gs(o),a.state=u,o=a.pending,o!==null&&(u=o.next,u===o?a.pending=null:(u=u.next,o.next=u,Ce(a,u)))}function Tn(a,o,u){var d=a.pending;if(a.pending=null,d!==null){d=d.next;do o.status="rejected",o.reason=u,Gs(o),o=o.next;while(o!==d)}a.action=null}function Gs(a){a=a.listeners;for(var o=0;o<a.length;o++)(0,a[o])()}function qe(a,o){return o}function Wn(a,o){if(Ie){var u=Ye.formState;if(u!==null){t:{var d=Ee;if(Ie){if(In){var y=mb(In,Qi);if(y){In=ov(y),d=gb(y);break t}}zt(d)}d=!1}d&&(o=u[0])}}u=q(),u.memoizedState=u.baseState=o,d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:qe,lastRenderedState:o},u.queue=d,u=Ug.bind(null,Ee,d),d.dispatch=u,d=Fe(!1);var M=Uf.bind(null,Ee,!1,d.queue);return d=q(),y={state:o,dispatch:null,action:a,pending:null},d.queue=y,u=Ke.bind(null,Ee,y,M,u),y.dispatch=u,d.memoizedState=a,[o,u,!1]}function Xn(a){var o=tt();return xn(o,ke,a)}function xn(a,o,u){o=qt(a,o,qe)[0],a=Jt(Ot)[0],o=typeof o=="object"&&o!==null&&typeof o.then=="function"?st(o):o;var d=tt(),y=d.queue,M=y.dispatch;return u!==d.memoizedState&&(Ee.flags|=2048,ti(9,Nn.bind(null,y,u),{destroy:void 0},null)),[o,M,a]}function Nn(a,o){a.action=o}function Sr(a){var o=tt(),u=ke;if(u!==null)return xn(o,u,a);tt(),o=o.memoizedState,u=tt();var d=u.queue.dispatch;return u.memoizedState=a,[o,d,!1]}function ti(a,o,u,d){return a={tag:a,create:o,inst:u,deps:d,next:null},o=Ee.updateQueue,o===null&&(o=Bd(),Ee.updateQueue=o),u=o.lastEffect,u===null?o.lastEffect=a.next=a:(d=u.next,u.next=a,a.next=d,o.lastEffect=a),a}function yg(){return tt().memoizedState}function _c(a,o,u,d){var y=q();Ee.flags|=a,y.memoizedState=ti(1|o,u,{destroy:void 0},d===void 0?null:d)}function yc(a,o,u,d){var y=tt();d=d===void 0?null:d;var M=y.memoizedState.inst;ke!==null&&d!==null&&xr(d,ke.memoizedState.deps)?y.memoizedState=ti(o,u,M,d):(Ee.flags|=a,y.memoizedState=ti(1|o,u,M,d))}function xg(a,o){_c(8390656,8,a,o)}function Cf(a,o){yc(2048,8,a,o)}function Sg(a,o){return yc(4,2,a,o)}function Mg(a,o){return yc(4,4,a,o)}function bg(a,o){if(typeof o=="function"){a=a();var u=o(a);return function(){typeof u=="function"?u():o(null)}}if(o!=null)return a=a(),o.current=a,function(){o.current=null}}function Eg(a,o,u){u=u!=null?u.concat([a]):null,yc(4,4,bg.bind(null,o,a),u)}function Rf(){}function Tg(a,o){var u=tt();o=o===void 0?null:o;var d=u.memoizedState;return o!==null&&xr(o,d[1])?d[0]:(u.memoizedState=[a,o],a)}function Ag(a,o){var u=tt();o=o===void 0?null:o;var d=u.memoizedState;if(o!==null&&xr(o,d[1]))return d[0];if(d=a(),Ua){Q(!0);try{a()}finally{Q(!1)}}return u.memoizedState=[d,o],d}function Df(a,o,u){return u===void 0||($s&1073741824)!==0?a.memoizedState=o:(a.memoizedState=u,a=M0(),Ee.lanes|=a,ea|=a,u)}function wg(a,o,u,d){return gi(u,o)?u:Hr.current!==null?(a=Df(a,u,d),gi(a,o)||(Sn=!0),a):($s&42)===0?(Sn=!0,a.memoizedState=u):(a=M0(),Ee.lanes|=a,ea|=a,o)}function Cg(a,o,u,d,y){var M=Ca();ni(M!==0&&8>M?M:8);var U=me.T,G={};me.T=G,Uf(a,!1,o,u);try{var J=y(),pt=me.S;if(pt!==null&&pt(G,J),J!==null&&typeof J=="object"&&typeof J.then=="function"){var Pt=Ut(J,d);Xo(a,o,Pt,fi(a))}else Xo(a,o,d,fi(a))}catch(Gt){Xo(a,o,{then:function(){},status:"rejected",reason:Gt},fi())}finally{ni(M),me.T=U}}function Rg(a){var o=a.memoizedState;if(o!==null)return o;o={memoizedState:Cr,baseState:Cr,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ot,lastRenderedState:Cr},next:null};var u={};return o.next={memoizedState:u,baseState:u,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ot,lastRenderedState:u},next:null},a.memoizedState=o,a=a.alternate,a!==null&&(a.memoizedState=o),o}function Nf(){return Un(Ra)}function Dg(){return tt().memoizedState}function Ng(){return tt().memoizedState}function nM(a){for(var o=a.return;o!==null;){switch(o.tag){case 24:case 3:var u=fi();a=bt(u);var d=It(o,a,u);d!==null&&(qn(d,o,u),ee(d,o,u)),o={cache:Xf()},a.payload=o;return}o=o.return}}function iM(a,o,u){var d=fi();u={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null},xc(a)?Pg(o,u):(u=ft(a,o,u,d),u!==null&&(qn(u,a,d),Lg(u,o,d)))}function Ug(a,o,u){var d=fi();Xo(a,o,u,d)}function Xo(a,o,u,d){var y={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null};if(xc(a))Pg(o,y);else{var M=a.alternate;if(a.lanes===0&&(M===null||M.lanes===0)&&(M=o.lastRenderedReducer,M!==null))try{var U=o.lastRenderedState,G=M(U,u);if(y.hasEagerState=!0,y.eagerState=G,gi(G,U))return ht(a,o,y,0),Ye===null&&gt(),!1}catch{}finally{}if(u=ft(a,o,y,d),u!==null)return qn(u,a,d),Lg(u,o,d),!0}return!1}function Uf(a,o,u,d){if(d={lane:2,revertLane:mt(),action:d,hasEagerState:!1,eagerState:null,next:null},xc(a)){if(o)throw Error(i(479))}else o=ft(a,u,d,2),o!==null&&qn(o,a,2)}function xc(a){var o=a.alternate;return a===Ee||o!==null&&o===Ee}function Pg(a,o){Vr=kc=!0;var u=a.pending;u===null?o.next=o:(o.next=u.next,u.next=o),a.pending=o}function Lg(a,o,u){if((u&4194176)!==0){var d=o.lanes;d&=a.pendingLanes,u|=d,o.lanes=u,$(a,u)}}function Pf(a,o,u,d){o=a.memoizedState,u=u(d,o),u=u==null?o:md({},o,u),a.memoizedState=u,a.lanes===0&&(a.updateQueue.baseState=u)}function Ig(a,o,u,d,y,M,U){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(d,M,U):o.prototype&&o.prototype.isPureReactComponent?!wt(u,d)||!wt(y,M):!0}function Og(a,o,u,d){a=o.state,typeof o.componentWillReceiveProps=="function"&&o.componentWillReceiveProps(u,d),typeof o.UNSAFE_componentWillReceiveProps=="function"&&o.UNSAFE_componentWillReceiveProps(u,d),o.state!==a&&Fd.enqueueReplaceState(o,o.state,null)}function Ma(a,o){var u=o;if("ref"in o){u={};for(var d in o)d!=="ref"&&(u[d]=o[d])}if(a=a.defaultProps){u===o&&(u=md({},u));for(var y in a)u[y]===void 0&&(u[y]=a[y])}return u}function Sc(a,o){try{var u=a.onUncaughtError;u(o.value,{componentStack:o.stack})}catch(d){setTimeout(function(){throw d})}}function zg(a,o,u){try{var d=a.onCaughtError;d(u.value,{componentStack:u.stack,errorBoundary:o.tag===1?o.stateNode:null})}catch(y){setTimeout(function(){throw y})}}function Lf(a,o,u){return u=bt(u),u.tag=3,u.payload={element:null},u.callback=function(){Sc(a,o)},u}function Bg(a){return a=bt(a),a.tag=3,a}function Fg(a,o,u,d){var y=u.type.getDerivedStateFromError;if(typeof y=="function"){var M=d.value;a.payload=function(){return y(M)},a.callback=function(){zg(o,u,d)}}var U=u.stateNode;U!==null&&typeof U.componentDidCatch=="function"&&(a.callback=function(){zg(o,u,d),typeof y!="function"&&(na===null?na=new Set([this]):na.add(this));var G=d.stack;this.componentDidCatch(d.value,{componentStack:G!==null?G:""})})}function sM(a,o,u,d,y){if(u.flags|=32768,d!==null&&typeof d=="object"&&typeof d.then=="function"){if(o=u.alternate,o!==null&&Yo(o,u,y,!0),u=Di.current,u!==null){switch(u.tag){case 13:return $i===null?ld():u.alternate===null&&rn===0&&(rn=3),u.flags&=-257,u.flags|=65536,u.lanes=y,d===Vc?u.flags|=16384:(o=u.updateQueue,o===null?u.updateQueue=new Set([d]):o.add(d),ud(a,d,y)),!1;case 22:return u.flags|=65536,d===Vc?u.flags|=16384:(o=u.updateQueue,o===null?(o={transitions:null,markerInstances:null,retryQueue:new Set([d])},u.updateQueue=o):(u=o.retryQueue,u===null?o.retryQueue=new Set([d]):u.add(d)),ud(a,d,y)),!1}throw Error(i(435,u.tag))}return ud(a,d,y),ld(),!1}if(Ie)return o=Di.current,o!==null?((o.flags&65536)===0&&(o.flags|=256),o.flags|=65536,o.lanes=y,d!==Nd&&(a=Error(i(422),{cause:d}),F(lt(a,u)))):(d!==Nd&&(o=Error(i(423),{cause:d}),F(lt(o,u))),a=a.current.alternate,a.flags|=65536,y&=-y,a.lanes|=y,d=lt(d,u),y=Lf(a.stateNode,d,y),H(a,y),rn!==4&&(rn=2)),!1;var M=Error(i(520),{cause:d});if(M=lt(M,u),cl===null?cl=[M]:cl.push(M),rn!==4&&(rn=2),o===null)return!0;d=lt(d,u),u=o;do{switch(u.tag){case 3:return u.flags|=65536,a=y&-y,u.lanes|=a,a=Lf(u.stateNode,d,a),H(u,a),!1;case 1:if(o=u.type,M=u.stateNode,(u.flags&128)===0&&(typeof o.getDerivedStateFromError=="function"||M!==null&&typeof M.componentDidCatch=="function"&&(na===null||!na.has(M))))return u.flags|=65536,y&=-y,u.lanes|=y,y=Bg(y),Fg(y,a,u,d),H(u,y),!1}u=u.return}while(u!==null);return!1}function An(a,o,u,d){o.child=a===null?Sv(o,null,u,d):Na(o,a.child,u,d)}function Hg(a,o,u,d,y){u=u.render;var M=o.ref;if("ref"in d){var U={};for(var G in d)G!=="ref"&&(U[G]=d[G])}else U=d;return ba(o),d=Go(a,o,u,U,M,y),G=ko(),a!==null&&!Sn?(Wo(a,o,y),ms(a,o,y)):(Ie&&G&&Lt(o),o.flags|=1,An(a,o,d,y),o.child)}function Vg(a,o,u,d,y){if(a===null){var M=u.type;return typeof M=="function"&&!hd(M)&&M.defaultProps===void 0&&u.compare===null?(o.tag=15,o.type=M,Gg(a,o,M,d,y)):(a=Rc(u.type,null,d,o,o.mode,y),a.ref=o.ref,a.return=o,o.child=a)}if(M=a.child,!Gf(a,y)){var U=M.memoizedProps;if(u=u.compare,u=u!==null?u:wt,u(U,d)&&a.ref===o.ref)return ms(a,o,y)}return o.flags|=1,a=Ys(M,d),a.ref=o.ref,a.return=o,o.child=a}function Gg(a,o,u,d,y){if(a!==null){var M=a.memoizedProps;if(wt(M,d)&&a.ref===o.ref)if(Sn=!1,o.pendingProps=d=M,Gf(a,y))(a.flags&131072)!==0&&(Sn=!0);else return o.lanes=a.lanes,ms(a,o,y)}return If(a,o,u,d,y)}function kg(a,o,u){var d=o.pendingProps,y=d.children,M=(o.stateNode._pendingVisibility&2)!==0,U=a!==null?a.memoizedState:null;if(qo(a,o),d.mode==="hidden"||M){if((o.flags&128)!==0){if(d=U!==null?U.baseLanes|u:u,a!==null){for(y=o.child=a.child,M=0;y!==null;)M=M|y.lanes|y.childLanes,y=y.sibling;o.childLanes=M&~d}else o.childLanes=0,o.child=null;return Wg(a,o,d,u)}if((u&536870912)!==0)o.memoizedState={baseLanes:0,cachePool:null},a!==null&&Ec(o,U!==null?U.cachePool:null),U!==null?Ho(o,U):zi(),Vo(o);else return o.lanes=o.childLanes=536870912,Wg(a,o,U!==null?U.baseLanes|u:u,u)}else U!==null?(Ec(o,U.cachePool),Ho(o,U),li(),o.memoizedState=null):(a!==null&&Ec(o,null),zi(),li());return An(a,o,y,u),o.child}function Wg(a,o,u,d){var y=qf();return y=y===null?null:{parent:ys?sn._currentValue:sn._currentValue2,pool:y},o.memoizedState={baseLanes:u,cachePool:y},a!==null&&Ec(o,null),zi(),Vo(o),a!==null&&Yo(a,o,d,!0),null}function qo(a,o){var u=o.ref;if(u===null)a!==null&&a.ref!==null&&(o.flags|=2097664);else{if(typeof u!="function"&&typeof u!="object")throw Error(i(284));(a===null||a.ref!==u)&&(o.flags|=2097664)}}function If(a,o,u,d,y){return ba(o),u=Go(a,o,u,d,void 0,y),d=ko(),a!==null&&!Sn?(Wo(a,o,y),ms(a,o,y)):(Ie&&d&&Lt(o),o.flags|=1,An(a,o,u,y),o.child)}function Xg(a,o,u,d,y,M){return ba(o),o.updateQueue=null,u=vc(o,d,u,y),gc(a),d=ko(),a!==null&&!Sn?(Wo(a,o,M),ms(a,o,M)):(Ie&&d&&Lt(o),o.flags|=1,An(a,o,u,M),o.child)}function qg(a,o,u,d,y){if(ba(o),o.stateNode===null){var M=Dr,U=u.contextType;typeof U=="object"&&U!==null&&(M=Un(U)),M=new u(d,M),o.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,M.updater=Fd,o.stateNode=M,M._reactInternals=o,M=o.stateNode,M.props=d,M.state=o.memoizedState,M.refs={},jt(o),U=u.contextType,M.context=typeof U=="object"&&U!==null?Un(U):Dr,M.state=o.memoizedState,U=u.getDerivedStateFromProps,typeof U=="function"&&(Pf(o,u,U,d),M.state=o.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(U=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),U!==M.state&&Fd.enqueueReplaceState(M,M.state,null),At(o,d,M,y),nt(),M.state=o.memoizedState),typeof M.componentDidMount=="function"&&(o.flags|=4194308),d=!0}else if(a===null){M=o.stateNode;var G=o.memoizedProps,J=Ma(u,G);M.props=J;var pt=M.context,Pt=u.contextType;U=Dr,typeof Pt=="object"&&Pt!==null&&(U=Un(Pt));var Gt=u.getDerivedStateFromProps;Pt=typeof Gt=="function"||typeof M.getSnapshotBeforeUpdate=="function",G=o.pendingProps!==G,Pt||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(G||pt!==U)&&Og(o,M,d,U),Qs=!1;var Wt=o.memoizedState;M.state=Wt,At(o,d,M,y),nt(),pt=o.memoizedState,G||Wt!==pt||Qs?(typeof Gt=="function"&&(Pf(o,u,Gt,d),pt=o.memoizedState),(J=Qs||Ig(o,u,J,d,Wt,pt,U))?(Pt||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount()),typeof M.componentDidMount=="function"&&(o.flags|=4194308)):(typeof M.componentDidMount=="function"&&(o.flags|=4194308),o.memoizedProps=d,o.memoizedState=pt),M.props=d,M.state=pt,M.context=U,d=J):(typeof M.componentDidMount=="function"&&(o.flags|=4194308),d=!1)}else{M=o.stateNode,Kt(a,o),U=o.memoizedProps,Pt=Ma(u,U),M.props=Pt,Gt=o.pendingProps,Wt=M.context,pt=u.contextType,J=Dr,typeof pt=="object"&&pt!==null&&(J=Un(pt)),G=u.getDerivedStateFromProps,(pt=typeof G=="function"||typeof M.getSnapshotBeforeUpdate=="function")||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(U!==Gt||Wt!==J)&&Og(o,M,d,J),Qs=!1,Wt=o.memoizedState,M.state=Wt,At(o,d,M,y),nt();var _e=o.memoizedState;U!==Gt||Wt!==_e||Qs||a!==null&&a.dependencies!==null&&Mc(a.dependencies)?(typeof G=="function"&&(Pf(o,u,G,d),_e=o.memoizedState),(Pt=Qs||Ig(o,u,Pt,d,Wt,_e,J)||a!==null&&a.dependencies!==null&&Mc(a.dependencies))?(pt||typeof M.UNSAFE_componentWillUpdate!="function"&&typeof M.componentWillUpdate!="function"||(typeof M.componentWillUpdate=="function"&&M.componentWillUpdate(d,_e,J),typeof M.UNSAFE_componentWillUpdate=="function"&&M.UNSAFE_componentWillUpdate(d,_e,J)),typeof M.componentDidUpdate=="function"&&(o.flags|=4),typeof M.getSnapshotBeforeUpdate=="function"&&(o.flags|=1024)):(typeof M.componentDidUpdate!="function"||U===a.memoizedProps&&Wt===a.memoizedState||(o.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||U===a.memoizedProps&&Wt===a.memoizedState||(o.flags|=1024),o.memoizedProps=d,o.memoizedState=_e),M.props=d,M.state=_e,M.context=J,d=Pt):(typeof M.componentDidUpdate!="function"||U===a.memoizedProps&&Wt===a.memoizedState||(o.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||U===a.memoizedProps&&Wt===a.memoizedState||(o.flags|=1024),d=!1)}return M=d,qo(a,o),d=(o.flags&128)!==0,M||d?(M=o.stateNode,u=d&&typeof u.getDerivedStateFromError!="function"?null:M.render(),o.flags|=1,a!==null&&d?(o.child=Na(o,a.child,null,y),o.child=Na(o,null,u,y)):An(a,o,u,y),o.memoizedState=M.state,a=o.child):a=ms(a,o,y),a}function Yg(a,o,u,d){return ge(),o.flags|=256,An(a,o,u,d),o.child}function Of(a){return{baseLanes:a,cachePool:$g()}}function zf(a,o,u){return a=a!==null?a.childLanes&~u:0,o&&(a|=Ni),a}function Zg(a,o,u){var d=o.pendingProps,y=!1,M=(o.flags&128)!==0,U;if((U=M)||(U=a!==null&&a.memoizedState===null?!1:(pn.current&2)!==0),U&&(y=!0,o.flags&=-129),U=(o.flags&32)!==0,o.flags&=-33,a===null){if(Ie){if(y?Bi(o):li(),Ie){var G=In,J;(J=G)&&(G=Sb(G,Qi),G!==null?(o.memoizedState={dehydrated:G,treeContext:Da!==null?{id:xs,overflow:Ss}:null,retryLane:536870912},J=e(18,null,null,0),J.stateNode=G,J.return=o,o.child=J,Yn=o,In=null,J=!0):J=!1),J||zt(o)}if(G=o.memoizedState,G!==null&&(G=G.dehydrated,G!==null))return Ad(G)?o.lanes=16:o.lanes=536870912,null;Ei(o)}return G=d.children,d=d.fallback,y?(li(),y=o.mode,G=Ff({mode:"hidden",children:G},y),d=wa(d,y,u,null),G.return=o,d.return=o,G.sibling=d,o.child=G,y=o.child,y.memoizedState=Of(u),y.childLanes=zf(a,U,u),o.memoizedState=Hd,d):(Bi(o),Bf(o,G))}if(J=a.memoizedState,J!==null&&(G=J.dehydrated,G!==null)){if(M)o.flags&256?(Bi(o),o.flags&=-257,o=Hf(a,o,u)):o.memoizedState!==null?(li(),o.child=a.child,o.flags|=128,o=null):(li(),y=d.fallback,G=o.mode,d=Ff({mode:"visible",children:d.children},G),y=wa(y,G,u,null),y.flags|=2,d.return=o,y.return=o,d.sibling=y,o.child=d,Na(o,a.child,null,u),d=o.child,d.memoizedState=Of(u),d.childLanes=zf(a,U,u),o.memoizedState=Hd,o=y);else if(Bi(o),Ad(G))U=db(G).digest,d=Error(i(419)),d.stack="",d.digest=U,F({value:d,source:null,stack:null}),o=Hf(a,o,u);else if(Sn||Yo(a,o,u,!1),U=(u&a.childLanes)!==0,Sn||U){if(U=Ye,U!==null){if(d=u&-u,(d&42)!==0)d=1;else switch(d){case 2:d=1;break;case 8:d=4;break;case 32:d=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:d=64;break;case 268435456:d=134217728;break;default:d=0}if(d=(d&(U.suspendedLanes|u))!==0?0:d,d!==0&&d!==J.retryLane)throw J.retryLane=d,ot(a,d),qn(U,a,d),bv}Td(G)||ld(),o=Hf(a,o,u)}else Td(G)?(o.flags|=128,o.child=a.child,o=gM.bind(null,a),pb(G,o),o=null):(a=J.treeContext,Ti&&(In=_b(G),Yn=o,Ie=!0,Vi=null,Qi=!1,a!==null&&(wi[Ci++]=xs,wi[Ci++]=Ss,wi[Ci++]=Da,xs=a.id,Ss=a.overflow,Da=o)),o=Bf(o,d.children),o.flags|=4096);return o}return y?(li(),y=d.fallback,G=o.mode,J=a.child,M=J.sibling,d=Ys(J,{mode:"hidden",children:d.children}),d.subtreeFlags=J.subtreeFlags&31457280,M!==null?y=Ys(M,y):(y=wa(y,G,u,null),y.flags|=2),y.return=o,d.return=o,d.sibling=y,o.child=d,d=y,y=o.child,G=a.child.memoizedState,G===null?G=Of(u):(J=G.cachePool,J!==null?(M=ys?sn._currentValue:sn._currentValue2,J=J.parent!==M?{parent:M,pool:M}:J):J=$g(),G={baseLanes:G.baseLanes|u,cachePool:J}),y.memoizedState=G,y.childLanes=zf(a,U,u),o.memoizedState=Hd,d):(Bi(o),u=a.child,a=u.sibling,u=Ys(u,{mode:"visible",children:d.children}),u.return=o,u.sibling=null,a!==null&&(U=o.deletions,U===null?(o.deletions=[a],o.flags|=16):U.push(a)),o.child=u,o.memoizedState=null,u)}function Bf(a,o){return o=Ff({mode:"visible",children:o},a.mode),o.return=a,a.child=o}function Ff(a,o){return B0(a,o,0,null)}function Hf(a,o,u){return Na(o,a.child,null,u),a=Bf(o,o.pendingProps.children),a.flags|=2,o.memoizedState=null,a}function jg(a,o,u){a.lanes|=o;var d=a.alternate;d!==null&&(d.lanes|=o),kf(a.return,o,u)}function Vf(a,o,u,d,y){var M=a.memoizedState;M===null?a.memoizedState={isBackwards:o,rendering:null,renderingStartTime:0,last:d,tail:u,tailMode:y}:(M.isBackwards=o,M.rendering=null,M.renderingStartTime=0,M.last=d,M.tail=u,M.tailMode=y)}function Kg(a,o,u){var d=o.pendingProps,y=d.revealOrder,M=d.tail;if(An(a,o,d.children,u),d=pn.current,(d&2)!==0)d=d&1|2,o.flags|=128;else{if(a!==null&&(a.flags&128)!==0)t:for(a=o.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&jg(a,u,o);else if(a.tag===19)jg(a,u,o);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break t;for(;a.sibling===null;){if(a.return===null||a.return===o)break t;a=a.return}a.sibling.return=a.return,a=a.sibling}d&=1}switch(E(pn,d),y){case"forwards":for(u=o.child,y=null;u!==null;)a=u.alternate,a!==null&&ds(a)===null&&(y=u),u=u.sibling;u=y,u===null?(y=o.child,o.child=null):(y=u.sibling,u.sibling=null),Vf(o,!1,y,u,M);break;case"backwards":for(u=null,y=o.child,o.child=null;y!==null;){if(a=y.alternate,a!==null&&ds(a)===null){o.child=y;break}a=y.sibling,y.sibling=u,u=y,y=a}Vf(o,!0,u,null,M);break;case"together":Vf(o,!1,null,null,void 0);break;default:o.memoizedState=null}return o.child}function ms(a,o,u){if(a!==null&&(o.dependencies=a.dependencies),ea|=o.lanes,(u&o.childLanes)===0)if(a!==null){if(Yo(a,o,u,!1),(u&o.childLanes)===0)return null}else return null;if(a!==null&&o.child!==a.child)throw Error(i(153));if(o.child!==null){for(a=o.child,u=Ys(a,a.pendingProps),o.child=u,u.return=o;a.sibling!==null;)a=a.sibling,u=u.sibling=Ys(a,a.pendingProps),u.return=o;u.sibling=null}return o.child}function Gf(a,o){return(a.lanes&o)!==0?!0:(a=a.dependencies,!!(a!==null&&Mc(a)))}function aM(a,o,u){switch(o.tag){case 3:Zt(o,o.stateNode.containerInfo),ks(o,sn,a.memoizedState.cache),ge();break;case 27:case 5:ut(o);break;case 4:Zt(o,o.stateNode.containerInfo);break;case 10:ks(o,o.type,o.memoizedProps.value);break;case 13:var d=o.memoizedState;if(d!==null)return d.dehydrated!==null?(Bi(o),o.flags|=128,null):(u&o.child.childLanes)!==0?Zg(a,o,u):(Bi(o),a=ms(a,o,u),a!==null?a.sibling:null);Bi(o);break;case 19:var y=(a.flags&128)!==0;if(d=(u&o.childLanes)!==0,d||(Yo(a,o,u,!1),d=(u&o.childLanes)!==0),y){if(d)return Kg(a,o,u);o.flags|=128}if(y=o.memoizedState,y!==null&&(y.rendering=null,y.tail=null,y.lastEffect=null),E(pn,pn.current),d)break;return null;case 22:case 23:return o.lanes=0,kg(a,o,u);case 24:ks(o,sn,a.memoizedState.cache)}return ms(a,o,u)}function Jg(a,o,u){if(a!==null)if(a.memoizedProps!==o.pendingProps)Sn=!0;else{if(!Gf(a,u)&&(o.flags&128)===0)return Sn=!1,aM(a,o,u);Sn=(a.flags&131072)!==0}else Sn=!1,Ie&&(o.flags&1048576)!==0&&St(o,zc,o.index);switch(o.lanes=0,o.tag){case 16:t:{a=o.pendingProps;var d=o.elementType,y=d._init;if(d=y(d._payload),o.type=d,typeof d=="function")hd(d)?(a=Ma(d,a),o.tag=1,o=qg(null,o,d,a,u)):(o.tag=0,o=If(null,o,d,a,u));else{if(d!=null){if(y=d.$$typeof,y===vd){o.tag=11,o=Hg(null,o,d,a,u);break t}else if(y===xd){o.tag=14,o=Vg(null,o,d,a,u);break t}}throw o=l(d)||d,Error(i(306,o,""))}}return o;case 0:return If(a,o,o.type,o.pendingProps,u);case 1:return d=o.type,y=Ma(d,o.pendingProps),qg(a,o,d,y,u);case 3:t:{if(Zt(o,o.stateNode.containerInfo),a===null)throw Error(i(387));var M=o.pendingProps;y=o.memoizedState,d=y.element,Kt(a,o),At(o,M,null,u);var U=o.memoizedState;if(M=U.cache,ks(o,sn,M),M!==y.cache&&Wf(o,[sn],u,!0),nt(),M=U.element,Ti&&y.isDehydrated)if(y={element:M,isDehydrated:!1,cache:U.cache},o.updateQueue.baseState=y,o.memoizedState=y,o.flags&256){o=Yg(a,o,M,u);break t}else if(M!==d){d=lt(Error(i(424)),o),F(d),o=Yg(a,o,M,u);break t}else for(Ti&&(In=vb(o.stateNode.containerInfo),Yn=o,Ie=!0,Vi=null,Qi=!0),u=Sv(o,null,M,u),o.child=u;u;)u.flags=u.flags&-3|4096,u=u.sibling;else{if(ge(),M===d){o=ms(a,o,u);break t}An(a,o,M,u)}o=o.child}return o;case 26:if(Ai)return qo(a,o),a===null?(u=hv(o.type,null,o.pendingProps,null))?o.memoizedState=u:Ie||(o.stateNode=Pb(o.type,o.pendingProps,Js.current,o)):o.memoizedState=hv(o.type,a.memoizedProps,o.pendingProps,a.memoizedState),null;case 27:if(Ln)return ut(o),a===null&&Ln&&Ie&&(d=o.stateNode=vv(o.type,o.pendingProps,Js.current,wn.current,!1),Yn=o,Qi=!0,In=lv(d)),d=o.pendingProps.children,a!==null||Ie?An(a,o,d,u):o.child=Na(o,null,d,u),qo(a,o),o.child;case 5:return a===null&&Ie&&(Db(o.type,o.pendingProps,wn.current),(y=d=In)&&(d=yb(d,o.type,o.pendingProps,Qi),d!==null?(o.stateNode=d,Yn=o,In=lv(d),Qi=!1,y=!0):y=!1),y||zt(o)),ut(o),y=o.type,M=o.pendingProps,U=a!==null?a.memoizedProps:null,d=M.children,Uc(y,M)?d=null:U!==null&&Uc(y,U)&&(o.flags|=32),o.memoizedState!==null&&(y=Go(a,o,wf,null,null,u),ys?Ra._currentValue=y:Ra._currentValue2=y),qo(a,o),An(a,o,d,u),o.child;case 6:return a===null&&Ie&&(Nb(o.pendingProps,wn.current),(a=u=In)&&(u=xb(u,o.pendingProps,Qi),u!==null?(o.stateNode=u,Yn=o,In=null,a=!0):a=!1),a||zt(o)),null;case 13:return Zg(a,o,u);case 4:return Zt(o,o.stateNode.containerInfo),d=o.pendingProps,a===null?o.child=Na(o,null,d,u):An(a,o,d,u),o.child;case 11:return Hg(a,o,o.type,o.pendingProps,u);case 7:return An(a,o,o.pendingProps,u),o.child;case 8:return An(a,o,o.pendingProps.children,u),o.child;case 12:return An(a,o,o.pendingProps.children,u),o.child;case 10:return d=o.pendingProps,ks(o,o.type,d.value),An(a,o,d.children,u),o.child;case 9:return y=o.type._context,d=o.pendingProps.children,ba(o),y=Un(y),d=d(y),o.flags|=1,An(a,o,d,u),o.child;case 14:return Vg(a,o,o.type,o.pendingProps,u);case 15:return Gg(a,o,o.type,o.pendingProps,u);case 19:return Kg(a,o,u);case 22:return kg(a,o,u);case 24:return ba(o),d=Un(sn),a===null?(y=qf(),y===null&&(y=Ye,M=Xf(),y.pooledCache=M,M.refCount++,M!==null&&(y.pooledCacheLanes|=u),y=M),o.memoizedState={parent:d,cache:y},jt(o),ks(o,sn,y)):((a.lanes&u)!==0&&(Kt(a,o),At(o,null,null,u),nt()),y=a.memoizedState,M=o.memoizedState,y.parent!==d?(y={parent:d,cache:d},o.memoizedState=y,o.lanes===0&&(o.memoizedState=o.updateQueue.baseState=y),ks(o,sn,d)):(d=M.cache,ks(o,sn,d),d!==y.cache&&Wf(o,[sn],u,!0))),An(a,o,o.pendingProps.children,u),o.child;case 29:throw o.pendingProps}throw Error(i(156,o.tag))}function ks(a,o,u){ys?(E(Xc,o._currentValue),o._currentValue=u):(E(Xc,o._currentValue2),o._currentValue2=u)}function gs(a){var o=Xc.current;ys?a._currentValue=o:a._currentValue2=o,_(Xc)}function kf(a,o,u){for(;a!==null;){var d=a.alternate;if((a.childLanes&o)!==o?(a.childLanes|=o,d!==null&&(d.childLanes|=o)):d!==null&&(d.childLanes&o)!==o&&(d.childLanes|=o),a===u)break;a=a.return}}function Wf(a,o,u,d){var y=a.child;for(y!==null&&(y.return=a);y!==null;){var M=y.dependencies;if(M!==null){var U=y.child;M=M.firstContext;t:for(;M!==null;){var G=M;M=y;for(var J=0;J<o.length;J++)if(G.context===o[J]){M.lanes|=u,G=M.alternate,G!==null&&(G.lanes|=u),kf(M.return,u,a),d||(U=null);break t}M=G.next}}else if(y.tag===18){if(U=y.return,U===null)throw Error(i(341));U.lanes|=u,M=U.alternate,M!==null&&(M.lanes|=u),kf(U,u,a),U=null}else U=y.child;if(U!==null)U.return=y;else for(U=y;U!==null;){if(U===a){U=null;break}if(y=U.sibling,y!==null){y.return=U.return,U=y;break}U=U.return}y=U}}function Yo(a,o,u,d){a=null;for(var y=o,M=!1;y!==null;){if(!M){if((y.flags&524288)!==0)M=!0;else if((y.flags&262144)!==0)break}if(y.tag===10){var U=y.alternate;if(U===null)throw Error(i(387));if(U=U.memoizedProps,U!==null){var G=y.type;gi(y.pendingProps.value,U.value)||(a!==null?a.push(G):a=[G])}}else if(y===Bc.current){if(U=y.alternate,U===null)throw Error(i(387));U.memoizedState.memoizedState!==y.memoizedState.memoizedState&&(a!==null?a.push(Ra):a=[Ra])}y=y.return}a!==null&&Wf(o,a,u,d),o.flags|=262144}function Mc(a){for(a=a.firstContext;a!==null;){var o=a.context;if(!gi(ys?o._currentValue:o._currentValue2,a.memoizedValue))return!0;a=a.next}return!1}function ba(a){Ia=a,Ms=null,a=a.dependencies,a!==null&&(a.firstContext=null)}function Un(a){return Qg(Ia,a)}function bc(a,o){return Ia===null&&ba(a),Qg(a,o)}function Qg(a,o){var u=ys?o._currentValue:o._currentValue2;if(o={context:o,memoizedValue:u,next:null},Ms===null){if(a===null)throw Error(i(308));Ms=o,a.dependencies={lanes:0,firstContext:o},a.flags|=524288}else Ms=Ms.next=o;return u}function Xf(){return{controller:new Kb,data:new Map,refCount:0}}function Zo(a){a.refCount--,a.refCount===0&&Jb(Qb,function(){a.controller.abort()})}function qf(){var a=Oa.current;return a!==null?a:Ye.pooledCache}function Ec(a,o){o===null?E(Oa,Oa.current):E(Oa,o.pool)}function $g(){var a=qf();return a===null?null:{parent:ys?sn._currentValue:sn._currentValue2,pool:a}}function ci(a){a.flags|=4}function t0(a,o){if(a!==null&&a.child===o.child)return!1;if((o.flags&16)!==0)return!0;for(a=o.child;a!==null;){if((a.flags&13878)!==0||(a.subtreeFlags&13878)!==0)return!0;a=a.sibling}return!1}function Yf(a,o,u,d){if(Pn)for(u=o.child;u!==null;){if(u.tag===5||u.tag===6)bd(a,u.stateNode);else if(!(u.tag===4||Ln&&u.tag===27)&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===o)break;for(;u.sibling===null;){if(u.return===null||u.return===o)return;u=u.return}u.sibling.return=u.return,u=u.sibling}else if(Ks)for(var y=o.child;y!==null;){if(y.tag===5){var M=y.stateNode;u&&d&&(M=av(M,y.type,y.memoizedProps)),bd(a,M)}else if(y.tag===6)M=y.stateNode,u&&d&&(M=rv(M,y.memoizedProps)),bd(a,M);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)M=y.child,M!==null&&(M.return=y),Yf(a,y,!0,!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===o)break;for(;y.sibling===null;){if(y.return===null||y.return===o)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function e0(a,o,u,d){if(Ks)for(var y=o.child;y!==null;){if(y.tag===5){var M=y.stateNode;u&&d&&(M=av(M,y.type,y.memoizedProps)),iv(a,M)}else if(y.tag===6)M=y.stateNode,u&&d&&(M=rv(M,y.memoizedProps)),iv(a,M);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)M=y.child,M!==null&&(M.return=y),e0(a,y,!(y.memoizedProps!==null&&y.memoizedProps.mode==="manual"),!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===o)break;for(;y.sibling===null;){if(y.return===null||y.return===o)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function n0(a,o){if(Ks&&t0(a,o)){a=o.stateNode;var u=a.containerInfo,d=nv();e0(d,o,!1,!1),a.pendingChildren=d,ci(o),fb(u,d)}}function Zf(a,o,u,d){if(Pn)a.memoizedProps!==d&&ci(o);else if(Ks){var y=a.stateNode,M=a.memoizedProps;if((a=t0(a,o))||M!==d){var U=wn.current;M=hb(y,u,M,d,!a,null),M===y?o.stateNode=y:(K0(M,u,d,U)&&ci(o),o.stateNode=M,a?Yf(M,o,!1,!1):ci(o))}else o.stateNode=y}}function jf(a,o,u){if(FM(o,u)){if(a.flags|=16777216,!$0(o,u))if(w0())a.flags|=8192;else throw Br=Vc,zd}else a.flags&=-16777217}function i0(a,o){if(Ib(o)){if(a.flags|=16777216,!gv(o))if(w0())a.flags|=8192;else throw Br=Vc,zd}else a.flags&=-16777217}function Tc(a,o){o!==null&&(a.flags|=4),a.flags&16384&&(o=a.tag!==22?C():536870912,a.lanes|=o,Xr|=o)}function jo(a,o){if(!Ie)switch(a.tailMode){case"hidden":o=a.tail;for(var u=null;o!==null;)o.alternate!==null&&(u=o),o=o.sibling;u===null?a.tail=null:u.sibling=null;break;case"collapsed":u=a.tail;for(var d=null;u!==null;)u.alternate!==null&&(d=u),u=u.sibling;d===null?o||a.tail===null?a.tail=null:a.tail.sibling=null:d.sibling=null}}function tn(a){var o=a.alternate!==null&&a.alternate.child===a.child,u=0,d=0;if(o)for(var y=a.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags&31457280,d|=y.flags&31457280,y.return=a,y=y.sibling;else for(y=a.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags,d|=y.flags,y.return=a,y=y.sibling;return a.subtreeFlags|=d,a.childLanes=u,o}function rM(a,o,u){var d=o.pendingProps;switch(Yt(o),o.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return tn(o),null;case 1:return tn(o),null;case 3:return u=o.stateNode,d=null,a!==null&&(d=a.memoizedState.cache),o.memoizedState.cache!==d&&(o.flags|=2048),gs(sn),ie(),u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),(a===null||a.child===null)&&(kt(o)?ci(o):a===null||a.memoizedState.isDehydrated&&(o.flags&256)===0||(o.flags|=1024,Vi!==null&&(rd(Vi),Vi=null))),n0(a,o),tn(o),null;case 26:if(Ai){u=o.type;var y=o.memoizedState;return a===null?(ci(o),y!==null?(tn(o),i0(o,y)):(tn(o),jf(o,u,d))):y?y!==a.memoizedState?(ci(o),tn(o),i0(o,y)):(tn(o),o.flags&=-16777217):(Pn?a.memoizedProps!==d&&ci(o):Zf(a,o,u,d),tn(o),jf(o,u,d)),null}case 27:if(Ln){if(xt(o),u=Js.current,y=o.type,a!==null&&o.stateNode!=null)Pn?a.memoizedProps!==d&&ci(o):Zf(a,o,y,d);else{if(!d){if(o.stateNode===null)throw Error(i(166));return tn(o),null}a=wn.current,kt(o)?te(o,a):(a=vv(y,d,u,a,!0),o.stateNode=a,ci(o))}return tn(o),null}case 5:if(xt(o),u=o.type,a!==null&&o.stateNode!=null)Zf(a,o,u,d);else{if(!d){if(o.stateNode===null)throw Error(i(166));return tn(o),null}a=wn.current,kt(o)?te(o,a):(y=UM(u,d,Js.current,a,o),Yf(y,o,!1,!1),o.stateNode=y,K0(y,u,d,a)&&ci(o))}return tn(o),jf(o,o.type,o.pendingProps),null;case 6:if(a&&o.stateNode!=null)u=a.memoizedProps,Pn?u!==d&&ci(o):Ks&&(u!==d?(o.stateNode=J0(d,Js.current,wn.current,o),ci(o)):o.stateNode=a.stateNode);else{if(typeof d!="string"&&o.stateNode===null)throw Error(i(166));if(a=Js.current,u=wn.current,kt(o)){if(!Ti)throw Error(i(176));if(a=o.stateNode,u=o.memoizedProps,d=null,y=Yn,y!==null)switch(y.tag){case 27:case 5:d=y.memoizedProps}bb(a,u,o,d)||zt(o)}else o.stateNode=J0(d,a,u,o)}return tn(o),null;case 13:if(d=o.memoizedState,a===null||a.memoizedState!==null&&a.memoizedState.dehydrated!==null){if(y=kt(o),d!==null&&d.dehydrated!==null){if(a===null){if(!y)throw Error(i(318));if(!Ti)throw Error(i(344));if(y=o.memoizedState,y=y!==null?y.dehydrated:null,!y)throw Error(i(317));Eb(y,o)}else ge(),(o.flags&128)===0&&(o.memoizedState=null),o.flags|=4;tn(o),y=!1}else Vi!==null&&(rd(Vi),Vi=null),y=!0;if(!y)return o.flags&256?(Ei(o),o):(Ei(o),null)}if(Ei(o),(o.flags&128)!==0)return o.lanes=u,o;if(u=d!==null,a=a!==null&&a.memoizedState!==null,u){d=o.child,y=null,d.alternate!==null&&d.alternate.memoizedState!==null&&d.alternate.memoizedState.cachePool!==null&&(y=d.alternate.memoizedState.cachePool.pool);var M=null;d.memoizedState!==null&&d.memoizedState.cachePool!==null&&(M=d.memoizedState.cachePool.pool),M!==y&&(d.flags|=2048)}return u!==a&&u&&(o.child.flags|=8192),Tc(o,o.updateQueue),tn(o),null;case 4:return ie(),n0(a,o),a===null&&IM(o.stateNode.containerInfo),tn(o),null;case 10:return gs(o.type),tn(o),null;case 19:if(_(pn),y=o.memoizedState,y===null)return tn(o),null;if(d=(o.flags&128)!==0,M=y.rendering,M===null)if(d)jo(y,!1);else{if(rn!==0||a!==null&&(a.flags&128)!==0)for(a=o.child;a!==null;){if(M=ds(a),M!==null){for(o.flags|=128,jo(y,!1),a=M.updateQueue,o.updateQueue=a,Tc(o,a),o.subtreeFlags=0,a=u,u=o.child;u!==null;)z0(u,a),u=u.sibling;return E(pn,pn.current&1|2),o.child}a=a.sibling}y.tail!==null&&Hi()>ul&&(o.flags|=128,d=!0,jo(y,!1),o.lanes=4194304)}else{if(!d)if(a=ds(M),a!==null){if(o.flags|=128,d=!0,a=a.updateQueue,o.updateQueue=a,Tc(o,a),jo(y,!0),y.tail===null&&y.tailMode==="hidden"&&!M.alternate&&!Ie)return tn(o),null}else 2*Hi()-y.renderingStartTime>ul&&u!==536870912&&(o.flags|=128,d=!0,jo(y,!1),o.lanes=4194304);y.isBackwards?(M.sibling=o.child,o.child=M):(a=y.last,a!==null?a.sibling=M:o.child=M,y.last=M)}return y.tail!==null?(o=y.tail,y.rendering=o,y.tail=o.sibling,y.renderingStartTime=Hi(),o.sibling=null,a=pn.current,E(pn,d?a&1|2:a&1),o):(tn(o),null);case 22:case 23:return Ei(o),Sa(),d=o.memoizedState!==null,a!==null?a.memoizedState!==null!==d&&(o.flags|=8192):d&&(o.flags|=8192),d?(u&536870912)!==0&&(o.flags&128)===0&&(tn(o),o.subtreeFlags&6&&(o.flags|=8192)):tn(o),u=o.updateQueue,u!==null&&Tc(o,u.retryQueue),u=null,a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),d=null,o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(d=o.memoizedState.cachePool.pool),d!==u&&(o.flags|=2048),a!==null&&_(Oa),null;case 24:return u=null,a!==null&&(u=a.memoizedState.cache),o.memoizedState.cache!==u&&(o.flags|=2048),gs(sn),tn(o),null;case 25:return null}throw Error(i(156,o.tag))}function oM(a,o){switch(Yt(o),o.tag){case 1:return a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 3:return gs(sn),ie(),a=o.flags,(a&65536)!==0&&(a&128)===0?(o.flags=a&-65537|128,o):null;case 26:case 27:case 5:return xt(o),null;case 13:if(Ei(o),a=o.memoizedState,a!==null&&a.dehydrated!==null){if(o.alternate===null)throw Error(i(340));ge()}return a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 19:return _(pn),null;case 4:return ie(),null;case 10:return gs(o.type),null;case 22:case 23:return Ei(o),Sa(),a!==null&&_(Oa),a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 24:return gs(sn),null;case 25:return null;default:return null}}function s0(a,o){switch(Yt(o),o.tag){case 3:gs(sn),ie();break;case 26:case 27:case 5:xt(o);break;case 4:ie();break;case 13:Ei(o);break;case 19:_(pn);break;case 10:gs(o.type);break;case 22:case 23:Ei(o),Sa(),a!==null&&_(Oa);break;case 24:gs(sn)}}function Ko(a,o){try{var u=o.updateQueue,d=u!==null?u.lastEffect:null;if(d!==null){var y=d.next;u=y;do{if((u.tag&a)===a){d=void 0;var M=u.create,U=u.inst;d=M(),U.destroy=d}u=u.next}while(u!==y)}}catch(G){He(o,o.return,G)}}function Ws(a,o,u){try{var d=o.updateQueue,y=d!==null?d.lastEffect:null;if(y!==null){var M=y.next;d=M;do{if((d.tag&a)===a){var U=d.inst,G=U.destroy;if(G!==void 0){U.destroy=void 0,y=o;var J=u;try{G()}catch(pt){He(y,J,pt)}}}d=d.next}while(d!==M)}}catch(pt){He(o,o.return,pt)}}function a0(a){var o=a.updateQueue;if(o!==null){var u=a.stateNode;try{yt(o,u)}catch(d){He(a,a.return,d)}}}function r0(a,o,u){u.props=Ma(a.type,a.memoizedProps),u.state=a.memoizedState;try{u.componentWillUnmount()}catch(d){He(a,o,d)}}function Ea(a,o){try{var u=a.ref;if(u!==null){var d=a.stateNode;switch(a.tag){case 26:case 27:case 5:var y=$o(d);break;default:y=d}typeof u=="function"?a.refCleanup=u(y):u.current=y}}catch(M){He(a,o,M)}}function ui(a,o){var u=a.ref,d=a.refCleanup;if(u!==null)if(typeof d=="function")try{d()}catch(y){He(a,o,y)}finally{a.refCleanup=null,a=a.alternate,a!=null&&(a.refCleanup=null)}else if(typeof u=="function")try{u(null)}catch(y){He(a,o,y)}else u.current=null}function o0(a){var o=a.type,u=a.memoizedProps,d=a.stateNode;try{tb(d,o,u,a)}catch(y){He(a,a.return,y)}}function l0(a,o,u){try{eb(a.stateNode,a.type,u,o,a)}catch(d){He(a,a.return,d)}}function c0(a){return a.tag===5||a.tag===3||(Ai?a.tag===26:!1)||(Ln?a.tag===27:!1)||a.tag===4}function Kf(a){t:for(;;){for(;a.sibling===null;){if(a.return===null||c0(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&(!Ln||a.tag!==27)&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue t;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function Jf(a,o,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,o?ib(u,a,o):QM(u,a);else if(!(d===4||Ln&&d===27)&&(a=a.child,a!==null))for(Jf(a,o,u),a=a.sibling;a!==null;)Jf(a,o,u),a=a.sibling}function Ac(a,o,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,o?nb(u,a,o):JM(u,a);else if(!(d===4||Ln&&d===27)&&(a=a.child,a!==null))for(Ac(a,o,u),a=a.sibling;a!==null;)Ac(a,o,u),a=a.sibling}function u0(a,o,u){a=a.containerInfo;try{sv(a,u)}catch(d){He(o,o.return,d)}}function lM(a,o){for(DM(a.containerInfo),Mn=o;Mn!==null;)if(a=Mn,o=a.child,(a.subtreeFlags&1028)!==0&&o!==null)o.return=a,Mn=o;else for(;Mn!==null;){a=Mn;var u=a.alternate;switch(o=a.flags,a.tag){case 0:break;case 11:case 15:break;case 1:if((o&1024)!==0&&u!==null){o=void 0;var d=a,y=u.memoizedProps;u=u.memoizedState;var M=d.stateNode;try{var U=Ma(d.type,y,d.elementType===d.type);o=M.getSnapshotBeforeUpdate(U,u),M.__reactInternalSnapshotBeforeUpdate=o}catch(G){He(d,d.return,G)}}break;case 3:(o&1024)!==0&&Pn&&ub(a.stateNode.containerInfo);break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((o&1024)!==0)throw Error(i(163))}if(o=a.sibling,o!==null){o.return=a.return,Mn=o;break}Mn=a.return}return U=Av,Av=!1,U}function h0(a,o,u){var d=u.flags;switch(u.tag){case 0:case 11:case 15:vs(a,u),d&4&&Ko(5,u);break;case 1:if(vs(a,u),d&4)if(a=u.stateNode,o===null)try{a.componentDidMount()}catch(G){He(u,u.return,G)}else{var y=Ma(u.type,o.memoizedProps);o=o.memoizedState;try{a.componentDidUpdate(y,o,a.__reactInternalSnapshotBeforeUpdate)}catch(G){He(u,u.return,G)}}d&64&&a0(u),d&512&&Ea(u,u.return);break;case 3:if(vs(a,u),d&64&&(d=u.updateQueue,d!==null)){if(a=null,u.child!==null)switch(u.child.tag){case 27:case 5:a=$o(u.child.stateNode);break;case 1:a=u.child.stateNode}try{yt(d,a)}catch(G){He(u,u.return,G)}}break;case 26:if(Ai){vs(a,u),d&512&&Ea(u,u.return);break}case 27:case 5:vs(a,u),o===null&&d&4&&o0(u),d&512&&Ea(u,u.return);break;case 12:vs(a,u);break;case 13:vs(a,u),d&4&&d0(a,u);break;case 22:if(y=u.memoizedState!==null||bs,!y){o=o!==null&&o.memoizedState!==null||an;var M=bs,U=an;bs=y,(an=o)&&!U?Xs(a,u,(u.subtreeFlags&8772)!==0):vs(a,u),bs=M,an=U}d&512&&(u.memoizedProps.mode==="manual"?Ea(u,u.return):ui(u,u.return));break;default:vs(a,u)}}function f0(a){var o=a.alternate;o!==null&&(a.alternate=null,f0(o)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(o=a.stateNode,o!==null&&BM(o)),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function Fi(a,o,u){for(u=u.child;u!==null;)Qf(a,o,u),u=u.sibling}function Qf(a,o,u){if(mi&&typeof mi.onCommitFiberUnmount=="function")try{mi.onCommitFiberUnmount(nl,u)}catch{}switch(u.tag){case 26:if(Ai){an||ui(u,o),Fi(a,o,u),u.memoizedState?dv(u.memoizedState):u.stateNode&&mv(u.stateNode);break}case 27:if(Ln){an||ui(u,o);var d=hn,y=vi;hn=u.stateNode,Fi(a,o,u),Fb(u.stateNode),hn=d,vi=y;break}case 5:an||ui(u,o);case 6:if(Pn){if(d=hn,y=vi,hn=null,Fi(a,o,u),hn=d,vi=y,hn!==null)if(vi)try{ab(hn,u.stateNode)}catch(M){He(u,o,M)}else try{sb(hn,u.stateNode)}catch(M){He(u,o,M)}}else Fi(a,o,u);break;case 18:Pn&&hn!==null&&(vi?Rb(hn,u.stateNode):Cb(hn,u.stateNode));break;case 4:Pn?(d=hn,y=vi,hn=u.stateNode.containerInfo,vi=!0,Fi(a,o,u),hn=d,vi=y):(Ks&&u0(u.stateNode,u,nv()),Fi(a,o,u));break;case 0:case 11:case 14:case 15:an||Ws(2,u,o),an||Ws(4,u,o),Fi(a,o,u);break;case 1:an||(ui(u,o),d=u.stateNode,typeof d.componentWillUnmount=="function"&&r0(u,o,d)),Fi(a,o,u);break;case 21:Fi(a,o,u);break;case 22:an||ui(u,o),an=(d=an)||u.memoizedState!==null,Fi(a,o,u),an=d;break;default:Fi(a,o,u)}}function d0(a,o){if(Ti&&o.memoizedState===null&&(a=o.alternate,a!==null&&(a=a.memoizedState,a!==null&&(a=a.dehydrated,a!==null))))try{wb(a)}catch(u){He(o,o.return,u)}}function cM(a){switch(a.tag){case 13:case 19:var o=a.stateNode;return o===null&&(o=a.stateNode=new Tv),o;case 22:return a=a.stateNode,o=a._retryCache,o===null&&(o=a._retryCache=new Tv),o;default:throw Error(i(435,a.tag))}}function $f(a,o){var u=cM(a);o.forEach(function(d){var y=vM.bind(null,a,d);u.has(d)||(u.add(d),d.then(y,y))})}function ei(a,o){var u=o.deletions;if(u!==null)for(var d=0;d<u.length;d++){var y=u[d],M=a,U=o;if(Pn){var G=U;t:for(;G!==null;){switch(G.tag){case 27:case 5:hn=G.stateNode,vi=!1;break t;case 3:hn=G.stateNode.containerInfo,vi=!0;break t;case 4:hn=G.stateNode.containerInfo,vi=!0;break t}G=G.return}if(hn===null)throw Error(i(160));Qf(M,U,y),hn=null,vi=!1}else Qf(M,U,y);M=y.alternate,M!==null&&(M.return=null),y.return=null}if(o.subtreeFlags&13878)for(o=o.child;o!==null;)p0(o,a),o=o.sibling}function p0(a,o){var u=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ei(o,a),hi(a),d&4&&(Ws(3,a,a.return),Ko(3,a),Ws(5,a,a.return));break;case 1:ei(o,a),hi(a),d&512&&(an||u===null||ui(u,u.return)),d&64&&bs&&(a=a.updateQueue,a!==null&&(d=a.callbacks,d!==null&&(u=a.shared.hiddenCallbacks,a.shared.hiddenCallbacks=u===null?d:u.concat(d))));break;case 26:if(Ai){var y=Gi;ei(o,a),hi(a),d&512&&(an||u===null||ui(u,u.return)),d&4&&(d=u!==null?u.memoizedState:null,o=a.memoizedState,u===null?o===null?a.stateNode===null?a.stateNode=Ub(y,a.type,a.memoizedProps,a):pv(y,a.type,a.stateNode):a.stateNode=fv(y,o,a.memoizedProps):d!==o?(d===null?u.stateNode!==null&&mv(u.stateNode):dv(d),o===null?pv(y,a.type,a.stateNode):fv(y,o,a.memoizedProps)):o===null&&a.stateNode!==null&&l0(a,a.memoizedProps,u.memoizedProps));break}case 27:if(Ln&&d&4&&a.alternate===null){y=a.stateNode;var M=a.memoizedProps;try{zb(y),Bb(a.type,M,y,a)}catch(Pt){He(a,a.return,Pt)}}case 5:if(ei(o,a),hi(a),d&512&&(an||u===null||ui(u,u.return)),Pn){if(a.flags&32){o=a.stateNode;try{ev(o)}catch(Pt){He(a,a.return,Pt)}}d&4&&a.stateNode!=null&&(o=a.memoizedProps,l0(a,o,u!==null?u.memoizedProps:o)),d&1024&&(Vd=!0)}break;case 6:if(ei(o,a),hi(a),d&4&&Pn){if(a.stateNode===null)throw Error(i(162));d=a.memoizedProps,u=u!==null?u.memoizedProps:d,o=a.stateNode;try{$M(o,u,d)}catch(Pt){He(a,a.return,Pt)}}break;case 3:if(Ai?(Lb(),y=Gi,Gi=wd(o.containerInfo),ei(o,a),Gi=y):ei(o,a),hi(a),d&4){if(Pn&&Ti&&u!==null&&u.memoizedState.isDehydrated)try{Ab(o.containerInfo)}catch(Pt){He(a,a.return,Pt)}if(Ks){d=o.containerInfo,u=o.pendingChildren;try{sv(d,u)}catch(Pt){He(a,a.return,Pt)}}}Vd&&(Vd=!1,m0(a));break;case 4:Ai?(u=Gi,Gi=wd(a.stateNode.containerInfo),ei(o,a),hi(a),Gi=u):(ei(o,a),hi(a)),d&4&&Ks&&u0(a.stateNode,a,a.stateNode.pendingChildren);break;case 12:ei(o,a),hi(a);break;case 13:ei(o,a),hi(a),a.child.flags&8192&&a.memoizedState!==null!=(u!==null&&u.memoizedState!==null)&&(Xd=Hi()),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,$f(a,d)));break;case 22:d&512&&(an||u===null||ui(u,u.return)),y=a.memoizedState!==null;var U=u!==null&&u.memoizedState!==null,G=bs,J=an;if(bs=G||y,an=J||U,ei(o,a),an=J,bs=G,hi(a),o=a.stateNode,o._current=a,o._visibility&=-3,o._visibility|=o._pendingVisibility&2,d&8192&&(o._visibility=y?o._visibility&-2:o._visibility|1,y&&(o=bs||an,u===null||U||o||Mr(a)),Pn&&(a.memoizedProps===null||a.memoizedProps.mode!=="manual"))){t:if(u=null,Pn)for(o=a;;){if(o.tag===5||Ai&&o.tag===26||Ln&&o.tag===27){if(u===null){U=u=o;try{M=U.stateNode,y?rb(M):lb(U.stateNode,U.memoizedProps)}catch(Pt){He(U,U.return,Pt)}}}else if(o.tag===6){if(u===null){U=o;try{var pt=U.stateNode;y?ob(pt):cb(pt,U.memoizedProps)}catch(Pt){He(U,U.return,Pt)}}}else if((o.tag!==22&&o.tag!==23||o.memoizedState===null||o===a)&&o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break t;for(;o.sibling===null;){if(o.return===null||o.return===a)break t;u===o&&(u=null),o=o.return}u===o&&(u=null),o.sibling.return=o.return,o=o.sibling}}d&4&&(d=a.updateQueue,d!==null&&(u=d.retryQueue,u!==null&&(d.retryQueue=null,$f(a,u))));break;case 19:ei(o,a),hi(a),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,$f(a,d)));break;case 21:break;default:ei(o,a),hi(a)}}function hi(a){var o=a.flags;if(o&2){try{if(Pn&&(!Ln||a.tag!==27)){t:{for(var u=a.return;u!==null;){if(c0(u)){var d=u;break t}u=u.return}throw Error(i(160))}switch(d.tag){case 27:if(Ln){var y=d.stateNode,M=Kf(a);Ac(a,M,y);break}case 5:var U=d.stateNode;d.flags&32&&(ev(U),d.flags&=-33);var G=Kf(a);Ac(a,G,U);break;case 3:case 4:var J=d.stateNode.containerInfo,pt=Kf(a);Jf(a,pt,J);break;default:throw Error(i(161))}}}catch(Pt){He(a,a.return,Pt)}a.flags&=-3}o&4096&&(a.flags&=-4097)}function m0(a){if(a.subtreeFlags&1024)for(a=a.child;a!==null;){var o=a;m0(o),o.tag===5&&o.flags&1024&&GM(o.stateNode),a=a.sibling}}function vs(a,o){if(o.subtreeFlags&8772)for(o=o.child;o!==null;)h0(a,o.alternate,o),o=o.sibling}function Mr(a){for(a=a.child;a!==null;){var o=a;switch(o.tag){case 0:case 11:case 14:case 15:Ws(4,o,o.return),Mr(o);break;case 1:ui(o,o.return);var u=o.stateNode;typeof u.componentWillUnmount=="function"&&r0(o,o.return,u),Mr(o);break;case 26:case 27:case 5:ui(o,o.return),Mr(o);break;case 22:ui(o,o.return),o.memoizedState===null&&Mr(o);break;default:Mr(o)}a=a.sibling}}function Xs(a,o,u){for(u=u&&(o.subtreeFlags&8772)!==0,o=o.child;o!==null;){var d=o.alternate,y=a,M=o,U=M.flags;switch(M.tag){case 0:case 11:case 15:Xs(y,M,u),Ko(4,M);break;case 1:if(Xs(y,M,u),d=M,y=d.stateNode,typeof y.componentDidMount=="function")try{y.componentDidMount()}catch(pt){He(d,d.return,pt)}if(d=M,y=d.updateQueue,y!==null){var G=d.stateNode;try{var J=y.shared.hiddenCallbacks;if(J!==null)for(y.shared.hiddenCallbacks=null,y=0;y<J.length;y++)V(J[y],G)}catch(pt){He(d,d.return,pt)}}u&&U&64&&a0(M),Ea(M,M.return);break;case 26:case 27:case 5:Xs(y,M,u),u&&d===null&&U&4&&o0(M),Ea(M,M.return);break;case 12:Xs(y,M,u);break;case 13:Xs(y,M,u),u&&U&4&&d0(y,M);break;case 22:M.memoizedState===null&&Xs(y,M,u),Ea(M,M.return);break;default:Xs(y,M,u)}o=o.sibling}}function td(a,o){var u=null;a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),a=null,o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(a=o.memoizedState.cachePool.pool),a!==u&&(a!=null&&a.refCount++,u!=null&&Zo(u))}function ed(a,o){a=null,o.alternate!==null&&(a=o.alternate.memoizedState.cache),o=o.memoizedState.cache,o!==a&&(o.refCount++,a!=null&&Zo(a))}function qs(a,o,u,d){if(o.subtreeFlags&10256)for(o=o.child;o!==null;)g0(a,o,u,d),o=o.sibling}function g0(a,o,u,d){var y=o.flags;switch(o.tag){case 0:case 11:case 15:qs(a,o,u,d),y&2048&&Ko(9,o);break;case 3:qs(a,o,u,d),y&2048&&(a=null,o.alternate!==null&&(a=o.alternate.memoizedState.cache),o=o.memoizedState.cache,o!==a&&(o.refCount++,a!=null&&Zo(a)));break;case 12:if(y&2048){qs(a,o,u,d),a=o.stateNode;try{var M=o.memoizedProps,U=M.id,G=M.onPostCommit;typeof G=="function"&&G(U,o.alternate===null?"mount":"update",a.passiveEffectDuration,-0)}catch(J){He(o,o.return,J)}}else qs(a,o,u,d);break;case 23:break;case 22:M=o.stateNode,o.memoizedState!==null?M._visibility&4?qs(a,o,u,d):Jo(a,o):M._visibility&4?qs(a,o,u,d):(M._visibility|=4,br(a,o,u,d,(o.subtreeFlags&10256)!==0)),y&2048&&td(o.alternate,o);break;case 24:qs(a,o,u,d),y&2048&&ed(o.alternate,o);break;default:qs(a,o,u,d)}}function br(a,o,u,d,y){for(y=y&&(o.subtreeFlags&10256)!==0,o=o.child;o!==null;){var M=a,U=o,G=u,J=d,pt=U.flags;switch(U.tag){case 0:case 11:case 15:br(M,U,G,J,y),Ko(8,U);break;case 23:break;case 22:var Pt=U.stateNode;U.memoizedState!==null?Pt._visibility&4?br(M,U,G,J,y):Jo(M,U):(Pt._visibility|=4,br(M,U,G,J,y)),y&&pt&2048&&td(U.alternate,U);break;case 24:br(M,U,G,J,y),y&&pt&2048&&ed(U.alternate,U);break;default:br(M,U,G,J,y)}o=o.sibling}}function Jo(a,o){if(o.subtreeFlags&10256)for(o=o.child;o!==null;){var u=a,d=o,y=d.flags;switch(d.tag){case 22:Jo(u,d),y&2048&&td(d.alternate,d);break;case 24:Jo(u,d),y&2048&&ed(d.alternate,d);break;default:Jo(u,d)}o=o.sibling}}function Ta(a){if(a.subtreeFlags&kr)for(a=a.child;a!==null;)v0(a),a=a.sibling}function v0(a){switch(a.tag){case 26:Ta(a),a.flags&kr&&(a.memoizedState!==null?Ob(Gi,a.memoizedState,a.memoizedProps):tv(a.type,a.memoizedProps));break;case 5:Ta(a),a.flags&kr&&tv(a.type,a.memoizedProps);break;case 3:case 4:if(Ai){var o=Gi;Gi=wd(a.stateNode.containerInfo),Ta(a),Gi=o}else Ta(a);break;case 22:a.memoizedState===null&&(o=a.alternate,o!==null&&o.memoizedState!==null?(o=kr,kr=16777216,Ta(a),kr=o):Ta(a));break;default:Ta(a)}}function _0(a){var o=a.alternate;if(o!==null&&(a=o.child,a!==null)){o.child=null;do o=a.sibling,a.sibling=null,a=o;while(a!==null)}}function Qo(a){var o=a.deletions;if((a.flags&16)!==0){if(o!==null)for(var u=0;u<o.length;u++){var d=o[u];Mn=d,x0(d,a)}_0(a)}if(a.subtreeFlags&10256)for(a=a.child;a!==null;)y0(a),a=a.sibling}function y0(a){switch(a.tag){case 0:case 11:case 15:Qo(a),a.flags&2048&&Ws(9,a,a.return);break;case 3:Qo(a);break;case 12:Qo(a);break;case 22:var o=a.stateNode;a.memoizedState!==null&&o._visibility&4&&(a.return===null||a.return.tag!==13)?(o._visibility&=-5,wc(a)):Qo(a);break;default:Qo(a)}}function wc(a){var o=a.deletions;if((a.flags&16)!==0){if(o!==null)for(var u=0;u<o.length;u++){var d=o[u];Mn=d,x0(d,a)}_0(a)}for(a=a.child;a!==null;){switch(o=a,o.tag){case 0:case 11:case 15:Ws(8,o,o.return),wc(o);break;case 22:u=o.stateNode,u._visibility&4&&(u._visibility&=-5,wc(o));break;default:wc(o)}a=a.sibling}}function x0(a,o){for(;Mn!==null;){var u=Mn;switch(u.tag){case 0:case 11:case 15:Ws(8,u,o);break;case 23:case 22:if(u.memoizedState!==null&&u.memoizedState.cachePool!==null){var d=u.memoizedState.cachePool.pool;d!=null&&d.refCount++}break;case 24:Zo(u.memoizedState.cache)}if(d=u.child,d!==null)d.return=u,Mn=d;else t:for(u=a;Mn!==null;){d=Mn;var y=d.sibling,M=d.return;if(f0(d),d===u){Mn=null;break t}if(y!==null){y.return=M,Mn=y;break t}Mn=M}}}function nd(a){var o=Q0(a);if(o!=null){if(typeof o.memoizedProps["data-testname"]!="string")throw Error(i(364));return o}if(a=XM(a),a===null)throw Error(i(362));return a.stateNode.current}function id(a,o){var u=a.tag;switch(o.$$typeof){case qc:if(a.type===o.value)return!0;break;case Yc:t:{for(o=o.value,a=[a,0],u=0;u<a.length;){var d=a[u++],y=d.tag,M=a[u++],U=o[M];if(y!==5&&y!==26&&y!==27||!el(d)){for(;U!=null&&id(d,U);)M++,U=o[M];if(M===o.length){o=!0;break t}else for(d=d.child;d!==null;)a.push(d,M),d=d.sibling}}o=!1}return o;case Zc:if((u===5||u===26||u===27)&&ZM(a.stateNode,o.value))return!0;break;case Kc:if((u===5||u===6||u===26||u===27)&&(a=YM(a),a!==null&&0<=a.indexOf(o.value)))return!0;break;case jc:if((u===5||u===26||u===27)&&(a=a.memoizedProps["data-testname"],typeof a=="string"&&a.toLowerCase()===o.value.toLowerCase()))return!0;break;default:throw Error(i(365))}return!1}function sd(a){switch(a.$$typeof){case qc:return"<"+(l(a.value)||"Unknown")+">";case Yc:return":has("+(sd(a)||"")+")";case Zc:return'[role="'+a.value+'"]';case Kc:return'"'+a.value+'"';case jc:return'[data-testname="'+a.value+'"]';default:throw Error(i(365))}}function S0(a,o){var u=[];a=[a,0];for(var d=0;d<a.length;){var y=a[d++],M=y.tag,U=a[d++],G=o[U];if(M!==5&&M!==26&&M!==27||!el(y)){for(;G!=null&&id(y,G);)U++,G=o[U];if(U===o.length)u.push(y);else for(y=y.child;y!==null;)a.push(y,U),y=y.sibling}}return u}function ad(a,o){if(!tl)throw Error(i(363));a=nd(a),a=S0(a,o),o=[],a=Array.from(a);for(var u=0;u<a.length;){var d=a[u++],y=d.tag;if(y===5||y===26||y===27)el(d)||o.push(d.stateNode);else for(d=d.child;d!==null;)a.push(d),d=d.sibling}return o}function fi(){if((We&2)!==0&&Ne!==0)return Ne&-Ne;if(me.T!==null){var a=Or;return a!==0?a:mt()}return OM()}function M0(){Ni===0&&(Ni=(Ne&536870912)===0||Ie?z():536870912);var a=Di.current;return a!==null&&(a.flags|=32),Ni}function qn(a,o,u){(a===Ye&&Ze===2||a.cancelPendingCommit!==null)&&(Er(a,0),_s(a,Ne,Ni,!1)),B(a,u),((We&2)===0||a!==Ye)&&(a===Ye&&((We&2)===0&&(za|=u),rn===4&&_s(a,Ne,Ni,!1)),Tt(a))}function b0(a,o,u){if((We&6)!==0)throw Error(i(327));var d=!u&&(o&60)===0&&(o&a.expiredLanes)===0||R(a,o),y=d?fM(a,o):cd(a,o,!0),M=d;do{if(y===0){Wr&&!d&&_s(a,o,0,!1);break}else if(y===6)_s(a,o,0,!Es);else{if(u=a.current.alternate,M&&!uM(u)){y=cd(a,o,!1),M=!1;continue}if(y===2){if(M=o,a.errorRecoveryDisabledLanes&M)var U=0;else U=a.pendingLanes&-536870913,U=U!==0?U:U&536870912?536870912:0;if(U!==0){o=U;t:{var G=a;y=cl;var J=Ti&&G.current.memoizedState.isDehydrated;if(J&&(Er(G,U).flags|=256),U=cd(G,U,!1),U!==2){if(Gd&&!J){G.errorRecoveryDisabledLanes|=M,za|=M,y=4;break t}M=es,es=y,M!==null&&rd(M)}y=U}if(M=!1,y!==2)continue}}if(y===1){Er(a,0),_s(a,o,0,!0);break}t:{switch(d=a,y){case 0:case 1:throw Error(i(345));case 4:if((o&4194176)===o){_s(d,o,Ni,!Es);break t}break;case 2:es=null;break;case 3:case 5:break;default:throw Error(i(329))}if(d.finishedWork=u,d.finishedLanes=o,(o&62914560)===o&&(M=Xd+300-Hi(),10<M)){if(_s(d,o,Ni,!Es),N(d,0)!==0)break t;d.timeoutHandle=PM(E0.bind(null,d,u,es,Jc,Wd,o,Ni,za,Xr,Es,2,-0,0),M);break t}E0(d,u,es,Jc,Wd,o,Ni,za,Xr,Es,0,-0,0)}}break}while(!0);Tt(a)}function rd(a){es===null?es=a:es.push.apply(es,a)}function E0(a,o,u,d,y,M,U,G,J,pt,Pt,Gt,Wt){var _e=o.subtreeFlags;if((_e&8192||(_e&16785408)===16785408)&&(HM(),v0(o),o=VM(),o!==null)){a.cancelPendingCommit=o(P0.bind(null,a,u,d,y,U,G,J,1,Gt,Wt)),_s(a,M,U,!pt);return}P0(a,u,d,y,U,G,J,Pt,Gt,Wt)}function uM(a){for(var o=a;;){var u=o.tag;if((u===0||u===11||u===15)&&o.flags&16384&&(u=o.updateQueue,u!==null&&(u=u.stores,u!==null)))for(var d=0;d<u.length;d++){var y=u[d],M=y.getSnapshot;y=y.value;try{if(!gi(M(),y))return!1}catch{return!1}}if(u=o.child,o.subtreeFlags&16384&&u!==null)u.return=o,o=u;else{if(o===a)break;for(;o.sibling===null;){if(o.return===null||o.return===a)return!0;o=o.return}o.sibling.return=o.return,o=o.sibling}}return!0}function _s(a,o,u,d){o&=~kd,o&=~za,a.suspendedLanes|=o,a.pingedLanes&=~o,d&&(a.warmLanes|=o),d=a.expirationTimes;for(var y=o;0<y;){var M=31-pi(y),U=1<<M;d[M]=-1,y&=~U}u!==0&&W(a,u,o)}function T0(){return(We&6)===0?(re(0),!1):!0}function od(){if(we!==null){if(Ze===0)var a=we.return;else a=we,Ms=Ia=null,P(a),Fr=null,rl=0,a=we;for(;a!==null;)s0(a.alternate,a),a=a.return;we=null}}function Er(a,o){a.finishedWork=null,a.finishedLanes=0;var u=a.timeoutHandle;u!==Ed&&(a.timeoutHandle=Ed,LM(u)),u=a.cancelPendingCommit,u!==null&&(a.cancelPendingCommit=null,u()),od(),Ye=a,we=u=Ys(a.current,null),Ne=o,Ze=0,_i=null,Es=!1,Wr=R(a,o),Gd=!1,Xr=Ni=kd=za=ea=rn=0,es=cl=null,Wd=!1,(o&8)!==0&&(o|=o&32);var d=a.entangledLanes;if(d!==0)for(a=a.entanglements,d&=o;0<d;){var y=31-pi(d),M=1<<y;o|=a[y],d&=~M}return Ts=o,gt(),u}function A0(a,o){Ee=null,me.H=ts,o===al?(o=Vt(),Ze=3):o===zd?(o=Vt(),Ze=4):Ze=o===bv?8:o!==null&&typeof o=="object"&&typeof o.then=="function"?6:1,_i=o,we===null&&(rn=1,Sc(a,lt(o,a.current)))}function w0(){var a=Di.current;return a===null?!0:(Ne&4194176)===Ne?$i===null:(Ne&62914560)===Ne||(Ne&536870912)!==0?a===$i:!1}function C0(){var a=me.H;return me.H=ts,a===null?ts:a}function R0(){var a=me.A;return me.A=$b,a}function ld(){rn=4,Es||(Ne&4194176)!==Ne&&Di.current!==null||(Wr=!0),(ea&134217727)===0&&(za&134217727)===0||Ye===null||_s(Ye,Ne,Ni,!1)}function cd(a,o,u){var d=We;We|=2;var y=C0(),M=R0();(Ye!==a||Ne!==o)&&(Jc=null,Er(a,o)),o=!1;var U=rn;t:do try{if(Ze!==0&&we!==null){var G=we,J=_i;switch(Ze){case 8:od(),U=6;break t;case 3:case 2:case 6:Di.current===null&&(o=!0);var pt=Ze;if(Ze=0,_i=null,Tr(a,G,J,pt),u&&Wr){U=0;break t}break;default:pt=Ze,Ze=0,_i=null,Tr(a,G,J,pt)}}hM(),U=rn;break}catch(Pt){A0(a,Pt)}while(!0);return o&&a.shellSuspendCounter++,Ms=Ia=null,We=d,me.H=y,me.A=M,we===null&&(Ye=null,Ne=0,gt()),U}function hM(){for(;we!==null;)D0(we)}function fM(a,o){var u=We;We|=2;var d=C0(),y=R0();Ye!==a||Ne!==o?(Jc=null,ul=Hi()+500,Er(a,o)):Wr=R(a,o);t:do try{if(Ze!==0&&we!==null){o=we;var M=_i;e:switch(Ze){case 1:Ze=0,_i=null,Tr(a,o,M,1);break;case 2:if(Ht(M)){Ze=0,_i=null,N0(o);break}o=function(){Ze===2&&Ye===a&&(Ze=7),Tt(a)},M.then(o,o);break t;case 3:Ze=7;break t;case 4:Ze=5;break t;case 7:Ht(M)?(Ze=0,_i=null,N0(o)):(Ze=0,_i=null,Tr(a,o,M,7));break;case 5:var U=null;switch(we.tag){case 26:U=we.memoizedState;case 5:case 27:var G=we,J=G.type,pt=G.pendingProps;if(U?gv(U):$0(J,pt)){Ze=0,_i=null;var Pt=G.sibling;if(Pt!==null)we=Pt;else{var Gt=G.return;Gt!==null?(we=Gt,Cc(Gt)):we=null}break e}}Ze=0,_i=null,Tr(a,o,M,5);break;case 6:Ze=0,_i=null,Tr(a,o,M,6);break;case 8:od(),rn=6;break t;default:throw Error(i(462))}}dM();break}catch(Wt){A0(a,Wt)}while(!0);return Ms=Ia=null,me.H=d,me.A=y,We=u,we!==null?0:(Ye=null,Ne=0,gt(),rn)}function dM(){for(;we!==null&&!Gb();)D0(we)}function D0(a){var o=Jg(a.alternate,a,Ts);a.memoizedProps=a.pendingProps,o===null?Cc(a):we=o}function N0(a){var o=a,u=o.alternate;switch(o.tag){case 15:case 0:o=Xg(u,o,o.pendingProps,o.type,void 0,Ne);break;case 11:o=Xg(u,o,o.pendingProps,o.type.render,o.ref,Ne);break;case 5:P(o);default:s0(u,o),o=we=z0(o,Ts),o=Jg(u,o,Ts)}a.memoizedProps=a.pendingProps,o===null?Cc(a):we=o}function Tr(a,o,u,d){Ms=Ia=null,P(o),Fr=null,rl=0;var y=o.return;try{if(sM(a,y,o,u,Ne)){rn=1,Sc(a,lt(u,a.current)),we=null;return}}catch(M){if(y!==null)throw we=y,M;rn=1,Sc(a,lt(u,a.current)),we=null;return}o.flags&32768?(Ie||d===1?a=!0:Wr||(Ne&536870912)!==0?a=!1:(Es=a=!0,(d===2||d===3||d===6)&&(d=Di.current,d!==null&&d.tag===13&&(d.flags|=16384))),U0(o,a)):Cc(o)}function Cc(a){var o=a;do{if((o.flags&32768)!==0){U0(o,Es);return}a=o.return;var u=rM(o.alternate,o,Ts);if(u!==null){we=u;return}if(o=o.sibling,o!==null){we=o;return}we=o=a}while(o!==null);rn===0&&(rn=5)}function U0(a,o){do{var u=oM(a.alternate,a);if(u!==null){u.flags&=32767,we=u;return}if(u=a.return,u!==null&&(u.flags|=32768,u.subtreeFlags=0,u.deletions=null),!o&&(a=a.sibling,a!==null)){we=a;return}we=a=u}while(a!==null);rn=6,we=null}function P0(a,o,u,d,y,M,U,G,J,pt){var Pt=me.T,Gt=Ca();try{ni(2),me.T=null,pM(a,o,u,d,Gt,y,M,U,G,J,pt)}finally{me.T=Pt,ni(Gt)}}function pM(a,o,u,d,y,M,U,G){do Aa();while(Ba!==null);if((We&6)!==0)throw Error(i(327));var J=a.finishedWork;if(d=a.finishedLanes,J===null)return null;if(a.finishedWork=null,a.finishedLanes=0,J===a.current)throw Error(i(177));a.callbackNode=null,a.callbackPriority=0,a.cancelPendingCommit=null;var pt=J.lanes|J.childLanes;if(pt|=Ud,Y(a,d,pt,M,U,G),a===Ye&&(we=Ye=null,Ne=0),(J.subtreeFlags&10256)===0&&(J.flags&10256)===0||Qc||(Qc=!0,qd=pt,Yd=u,_M(Dd,function(){return Aa(),null})),u=(J.flags&15990)!==0,(J.subtreeFlags&15990)!==0||u?(u=me.T,me.T=null,M=Ca(),ni(2),U=We,We|=4,lM(a,J),p0(J,a),NM(a.containerInfo),a.current=J,h0(a,J.alternate,J),kb(),We=U,ni(M),me.T=u):a.current=J,Qc?(Qc=!1,Ba=a,hl=d):L0(a,pt),pt=a.pendingLanes,pt===0&&(na=null),k(J.stateNode),Tt(a),o!==null)for(y=a.onRecoverableError,J=0;J<o.length;J++)pt=o[J],y(pt.value,{componentStack:pt.stack});return(hl&3)!==0&&Aa(),pt=a.pendingLanes,(d&4194218)!==0&&(pt&42)!==0?a===Zd?fl++:(fl=0,Zd=a):fl=0,re(0),null}function L0(a,o){(a.pooledCacheLanes&=o)===0&&(o=a.pooledCache,o!=null&&(a.pooledCache=null,Zo(o)))}function Aa(){if(Ba!==null){var a=Ba,o=qd;qd=0;var u=et(hl),d=32>u?32:u;u=me.T;var y=Ca();try{if(ni(d),me.T=null,Ba===null)var M=!1;else{d=Yd,Yd=null;var U=Ba,G=hl;if(Ba=null,hl=0,(We&6)!==0)throw Error(i(331));var J=We;if(We|=4,y0(U.current),g0(U,U.current,G,d),We=J,re(0,!1),mi&&typeof mi.onPostCommitFiberRoot=="function")try{mi.onPostCommitFiberRoot(nl,U)}catch{}M=!0}return M}finally{ni(y),me.T=u,L0(a,o)}}return!1}function I0(a,o,u){o=lt(u,o),o=Lf(a.stateNode,o,2),a=It(a,o,2),a!==null&&(B(a,2),Tt(a))}function He(a,o,u){if(a.tag===3)I0(a,a,u);else for(;o!==null;){if(o.tag===3){I0(o,a,u);break}else if(o.tag===1){var d=o.stateNode;if(typeof o.type.getDerivedStateFromError=="function"||typeof d.componentDidCatch=="function"&&(na===null||!na.has(d))){a=lt(u,a),u=Bg(2),d=It(o,u,2),d!==null&&(Fg(u,d,o,a),B(d,2),Tt(d));break}}o=o.return}}function ud(a,o,u){var d=a.pingCache;if(d===null){d=a.pingCache=new tE;var y=new Set;d.set(o,y)}else y=d.get(o),y===void 0&&(y=new Set,d.set(o,y));y.has(u)||(Gd=!0,y.add(u),a=mM.bind(null,a,o,u),o.then(a,a))}function mM(a,o,u){var d=a.pingCache;d!==null&&d.delete(o),a.pingedLanes|=a.suspendedLanes&u,a.warmLanes&=~u,Ye===a&&(Ne&u)===u&&(rn===4||rn===3&&(Ne&62914560)===Ne&&300>Hi()-Xd?(We&2)===0&&Er(a,0):kd|=u,Xr===Ne&&(Xr=0)),Tt(a)}function O0(a,o){o===0&&(o=C()),a=ot(a,o),a!==null&&(B(a,o),Tt(a))}function gM(a){var o=a.memoizedState,u=0;o!==null&&(u=o.retryLane),O0(a,u)}function vM(a,o){var u=0;switch(a.tag){case 13:var d=a.stateNode,y=a.memoizedState;y!==null&&(u=y.retryLane);break;case 19:d=a.stateNode;break;case 22:d=a.stateNode._retryCache;break;default:throw Error(i(314))}d!==null&&d.delete(o),O0(a,u)}function _M(a,o){return Ic(a,o)}function yM(a,o,u,d){this.tag=a,this.key=u,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=o,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=d,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function hd(a){return a=a.prototype,!(!a||!a.isReactComponent)}function Ys(a,o){var u=a.alternate;return u===null?(u=e(a.tag,o,a.key,a.mode),u.elementType=a.elementType,u.type=a.type,u.stateNode=a.stateNode,u.alternate=a,a.alternate=u):(u.pendingProps=o,u.type=a.type,u.flags=0,u.subtreeFlags=0,u.deletions=null),u.flags=a.flags&31457280,u.childLanes=a.childLanes,u.lanes=a.lanes,u.child=a.child,u.memoizedProps=a.memoizedProps,u.memoizedState=a.memoizedState,u.updateQueue=a.updateQueue,o=a.dependencies,u.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext},u.sibling=a.sibling,u.index=a.index,u.ref=a.ref,u.refCleanup=a.refCleanup,u}function z0(a,o){a.flags&=31457282;var u=a.alternate;return u===null?(a.childLanes=0,a.lanes=o,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=u.childLanes,a.lanes=u.lanes,a.child=u.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=u.memoizedProps,a.memoizedState=u.memoizedState,a.updateQueue=u.updateQueue,a.type=u.type,o=u.dependencies,a.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext}),a}function Rc(a,o,u,d,y,M){var U=0;if(d=a,typeof a=="function")hd(a)&&(U=1);else if(typeof a=="string")U=Ai&&Ln?uv(a,u,wn.current)?26:_v(a)?27:5:Ai?uv(a,u,wn.current)?26:5:Ln&&_v(a)?27:5;else t:switch(a){case wr:return wa(u.children,y,M,o);case W0:U=8,y|=24;break;case gd:return a=e(12,u,o,y|2),a.elementType=gd,a.lanes=M,a;case _d:return a=e(13,u,o,y),a.elementType=_d,a.lanes=M,a;case yd:return a=e(19,u,o,y),a.elementType=yd,a.lanes=M,a;case q0:return B0(u,y,M,o);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case bM:case Zs:U=10;break t;case X0:U=9;break t;case vd:U=11;break t;case xd:U=14;break t;case js:U=16,d=null;break t}U=29,u=Error(i(130,a===null?"null":typeof a,"")),d=null}return o=e(U,u,o,y),o.elementType=a,o.type=d,o.lanes=M,o}function wa(a,o,u,d){return a=e(7,a,d,o),a.lanes=u,a}function B0(a,o,u,d){a=e(22,a,d,o),a.elementType=q0,a.lanes=u;var y={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var M=y._current;if(M===null)throw Error(i(456));if((y._pendingVisibility&2)===0){var U=ot(M,2);U!==null&&(y._pendingVisibility|=2,qn(U,M,2))}},attach:function(){var M=y._current;if(M===null)throw Error(i(456));if((y._pendingVisibility&2)!==0){var U=ot(M,2);U!==null&&(y._pendingVisibility&=-3,qn(U,M,2))}}};return a.stateNode=y,a}function fd(a,o,u){return a=e(6,a,null,o),a.lanes=u,a}function dd(a,o,u){return o=e(4,a.children!==null?a.children:[],a.key,o),o.lanes=u,o.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},o}function xM(a,o,u,d,y,M,U,G){this.tag=1,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Ed,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=w(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=w(0),this.hiddenUpdates=w(null),this.identifierPrefix=d,this.onUncaughtError=y,this.onCaughtError=M,this.onRecoverableError=U,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=G,this.incompleteTransitions=new Map}function F0(a,o,u,d,y,M,U,G,J,pt,Pt,Gt){return a=new xM(a,o,u,U,G,J,pt,Gt),o=1,M===!0&&(o|=24),M=e(3,null,null,o),a.current=M,M.stateNode=a,o=Xf(),o.refCount++,a.pooledCache=o,o.refCount++,M.memoizedState={element:d,isDehydrated:u,cache:o},jt(M),a}function H0(a){return a?(a=Dr,a):Dr}function V0(a){var o=a._reactInternals;if(o===void 0)throw typeof a.render=="function"?Error(i(188)):(a=Object.keys(a).join(","),Error(i(268,a)));return a=v(o),a=a!==null?x(a):null,a===null?null:$o(a.stateNode)}function G0(a,o,u,d,y,M){y=H0(y),d.context===null?d.context=y:d.pendingContext=y,d=bt(o),d.payload={element:u},M=M===void 0?null:M,M!==null&&(d.callback=M),u=It(a,d,o),u!==null&&(qn(u,a,o),ee(u,a,o))}function k0(a,o){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var u=a.retryLane;a.retryLane=u!==0&&u<o?u:o}}function pd(a,o){k0(a,o),(a=a.alternate)&&k0(a,o)}var Ae={},SM=Am(),di=PS(),md=Object.assign,MM=Symbol.for("react.element"),Dc=Symbol.for("react.transitional.element"),Ar=Symbol.for("react.portal"),wr=Symbol.for("react.fragment"),W0=Symbol.for("react.strict_mode"),gd=Symbol.for("react.profiler"),bM=Symbol.for("react.provider"),X0=Symbol.for("react.consumer"),Zs=Symbol.for("react.context"),vd=Symbol.for("react.forward_ref"),_d=Symbol.for("react.suspense"),yd=Symbol.for("react.suspense_list"),xd=Symbol.for("react.memo"),js=Symbol.for("react.lazy"),q0=Symbol.for("react.offscreen"),EM=Symbol.for("react.memo_cache_sentinel"),Y0=Symbol.iterator,TM=Symbol.for("react.client.reference"),me=SM.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,Sd,Z0,Md=!1,Nc=Array.isArray,AM=t.rendererVersion,wM=t.rendererPackageName,j0=t.extraDevToolsConfig,$o=t.getPublicInstance,CM=t.getRootHostContext,RM=t.getChildHostContext,DM=t.prepareForCommit,NM=t.resetAfterCommit,UM=t.createInstance,bd=t.appendInitialChild,K0=t.finalizeInitialChildren,Uc=t.shouldSetTextContent,J0=t.createTextInstance,PM=t.scheduleTimeout,LM=t.cancelTimeout,Ed=t.noTimeout,ys=t.isPrimaryRenderer;t.warnsIfNotActing;var Pn=t.supportsMutation,Ks=t.supportsPersistence,Ti=t.supportsHydration,Q0=t.getInstanceFromNode;t.beforeActiveInstanceBlur,t.afterActiveInstanceBlur;var IM=t.preparePortalMount;t.prepareScopeUpdate,t.getInstanceFromScope;var ni=t.setCurrentUpdatePriority,Ca=t.getCurrentUpdatePriority,OM=t.resolveUpdatePriority;t.resolveEventType,t.resolveEventTimeStamp;var zM=t.shouldAttemptEagerTransition,BM=t.detachDeletedInstance;t.requestPostPaintCallback;var FM=t.maySuspendCommit,$0=t.preloadInstance,HM=t.startSuspendingCommit,tv=t.suspendInstance,VM=t.waitForCommitToBeReady,Cr=t.NotPendingTransition,Ra=t.HostTransitionContext,GM=t.resetFormInstance;t.bindToConsole;var kM=t.supportsMicrotasks,WM=t.scheduleMicrotask,tl=t.supportsTestSelectors,XM=t.findFiberRoot,qM=t.getBoundingRect,YM=t.getTextContent,el=t.isHiddenSubtree,ZM=t.matchAccessibilityRole,jM=t.setFocusIfFocusable,KM=t.setupIntersectionObserver,JM=t.appendChild,QM=t.appendChildToContainer,$M=t.commitTextUpdate,tb=t.commitMount,eb=t.commitUpdate,nb=t.insertBefore,ib=t.insertInContainerBefore,sb=t.removeChild,ab=t.removeChildFromContainer,ev=t.resetTextContent,rb=t.hideInstance,ob=t.hideTextInstance,lb=t.unhideInstance,cb=t.unhideTextInstance,ub=t.clearContainer,hb=t.cloneInstance,nv=t.createContainerChildSet,iv=t.appendChildToContainerChildSet,fb=t.finalizeContainerChildren,sv=t.replaceContainerChildren,av=t.cloneHiddenInstance,rv=t.cloneHiddenTextInstance,Td=t.isSuspenseInstancePending,Ad=t.isSuspenseInstanceFallback,db=t.getSuspenseInstanceFallbackErrorDetails,pb=t.registerSuspenseInstanceRetry,mb=t.canHydrateFormStateMarker,gb=t.isFormStateMarkerMatching,ov=t.getNextHydratableSibling,lv=t.getFirstHydratableChild,vb=t.getFirstHydratableChildWithinContainer,_b=t.getFirstHydratableChildWithinSuspenseInstance,yb=t.canHydrateInstance,xb=t.canHydrateTextInstance,Sb=t.canHydrateSuspenseInstance,Mb=t.hydrateInstance,bb=t.hydrateTextInstance,Eb=t.hydrateSuspenseInstance,Tb=t.getNextHydratableInstanceAfterSuspenseInstance,Ab=t.commitHydratedContainer,wb=t.commitHydratedSuspenseInstance,Cb=t.clearSuspenseBoundary,Rb=t.clearSuspenseBoundaryFromContainer,cv=t.shouldDeleteUnhydratedTailInstances;t.diffHydratedPropsForDevWarnings,t.diffHydratedTextForDevWarnings,t.describeHydratableInstanceForDevWarnings;var Db=t.validateHydratableInstance,Nb=t.validateHydratableTextInstance,Ai=t.supportsResources,uv=t.isHostHoistableType,wd=t.getHoistableRoot,hv=t.getResource,fv=t.acquireResource,dv=t.releaseResource,Ub=t.hydrateHoistable,pv=t.mountHoistable,mv=t.unmountHoistable,Pb=t.createHoistableInstance,Lb=t.prepareToCommitHoistables,Ib=t.mayResourceSuspendCommit,gv=t.preloadResource,Ob=t.suspendResource,Ln=t.supportsSingletons,vv=t.resolveSingletonInstance,zb=t.clearSingleton,Bb=t.acquireSingletonInstance,Fb=t.releaseSingletonInstance,_v=t.isHostSingletonType,Cd=[],Rr=-1,Dr={},pi=Math.clz32?Math.clz32:A,Hb=Math.log,Vb=Math.LN2,Pc=128,Lc=4194304,Ic=di.unstable_scheduleCallback,Rd=di.unstable_cancelCallback,Gb=di.unstable_shouldYield,kb=di.unstable_requestPaint,Hi=di.unstable_now,yv=di.unstable_ImmediatePriority,Wb=di.unstable_UserBlockingPriority,Dd=di.unstable_NormalPriority,Xb=di.unstable_IdlePriority,qb=di.log,Yb=di.unstable_setDisableYieldValue,nl=null,mi=null,gi=typeof Object.is=="function"?Object.is:X,xv=new WeakMap,Nr=[],Ur=0,Oc=null,zc=0,wi=[],Ci=0,Da=null,xs=1,Ss="",wn=S(null),il=S(null),Js=S(null),Bc=S(null),Yn=null,In=null,Ie=!1,Vi=null,Qi=!1,Nd=Error(i(519)),Ri=[],Pr=0,Ud=0,Fc=null,Lr=null,Pd=!1,Hc=!1,Ld=!1,Ir=0,sl=null,Id=0,Or=0,zr=null,Qs=!1,Od=!1,Zb=Object.prototype.hasOwnProperty,al=Error(i(460)),zd=Error(i(474)),Vc={then:function(){}},Br=null,Fr=null,rl=0,Na=yn(!0),Sv=yn(!1),Hr=S(null),Gc=S(0),Di=S(null),$i=null,pn=S(0),$s=0,Ee=null,ke=null,un=null,kc=!1,Vr=!1,Ua=!1,Wc=0,ol=0,Gr=null,jb=0,Bd=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}},ts={readContext:Un,use:j,useCallback:Qe,useContext:Qe,useEffect:Qe,useImperativeHandle:Qe,useLayoutEffect:Qe,useInsertionEffect:Qe,useMemo:Qe,useReducer:Qe,useRef:Qe,useState:Qe,useDebugValue:Qe,useDeferredValue:Qe,useTransition:Qe,useSyncExternalStore:Qe,useId:Qe};ts.useCacheRefresh=Qe,ts.useMemoCache=Qe,ts.useHostTransitionStatus=Qe,ts.useFormState=Qe,ts.useActionState=Qe,ts.useOptimistic=Qe;var Pa={readContext:Un,use:j,useCallback:function(a,o){return q().memoizedState=[a,o===void 0?null:o],a},useContext:Un,useEffect:xg,useImperativeHandle:function(a,o,u){u=u!=null?u.concat([a]):null,_c(4194308,4,bg.bind(null,o,a),u)},useLayoutEffect:function(a,o){return _c(4194308,4,a,o)},useInsertionEffect:function(a,o){_c(4,2,a,o)},useMemo:function(a,o){var u=q();o=o===void 0?null:o;var d=a();if(Ua){Q(!0);try{a()}finally{Q(!1)}}return u.memoizedState=[d,o],d},useReducer:function(a,o,u){var d=q();if(u!==void 0){var y=u(o);if(Ua){Q(!0);try{u(o)}finally{Q(!1)}}}else y=o;return d.memoizedState=d.baseState=y,a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:y},d.queue=a,a=a.dispatch=iM.bind(null,Ee,a),[d.memoizedState,a]},useRef:function(a){var o=q();return a={current:a},o.memoizedState=a},useState:function(a){a=Fe(a);var o=a.queue,u=Ug.bind(null,Ee,o);return o.dispatch=u,[a.memoizedState,u]},useDebugValue:Rf,useDeferredValue:function(a,o){var u=q();return Df(u,a,o)},useTransition:function(){var a=Fe(!1);return a=Cg.bind(null,Ee,a.queue,!0,!1),q().memoizedState=a,[!1,a]},useSyncExternalStore:function(a,o,u){var d=Ee,y=q();if(Ie){if(u===void 0)throw Error(i(407));u=u()}else{if(u=o(),Ye===null)throw Error(i(349));(Ne&60)!==0||se(d,o,u)}y.memoizedState=u;var M={value:u,getSnapshot:o};return y.queue=M,xg(Be.bind(null,d,M,a),[a]),d.flags|=2048,ti(9,be.bind(null,d,M,u,o),{destroy:void 0},null),u},useId:function(){var a=q(),o=Ye.identifierPrefix;if(Ie){var u=Ss,d=xs;u=(d&~(1<<32-pi(d)-1)).toString(32)+u,o=":"+o+"R"+u,u=Wc++,0<u&&(o+="H"+u.toString(32)),o+=":"}else u=jb++,o=":"+o+"r"+u.toString(32)+":";return a.memoizedState=o},useCacheRefresh:function(){return q().memoizedState=nM.bind(null,Ee)}};Pa.useMemoCache=Ct,Pa.useHostTransitionStatus=Nf,Pa.useFormState=Wn,Pa.useActionState=Wn,Pa.useOptimistic=function(a){var o=q();o.memoizedState=o.baseState=a;var u={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return o.queue=u,o=Uf.bind(null,Ee,!0,u),u.dispatch=o,[a,o]};var ta={readContext:Un,use:j,useCallback:Tg,useContext:Un,useEffect:Cf,useImperativeHandle:Eg,useInsertionEffect:Sg,useLayoutEffect:Mg,useMemo:Ag,useReducer:Jt,useRef:yg,useState:function(){return Jt(Ot)},useDebugValue:Rf,useDeferredValue:function(a,o){var u=tt();return wg(u,ke.memoizedState,a,o)},useTransition:function(){var a=Jt(Ot)[0],o=tt().memoizedState;return[typeof a=="boolean"?a:st(a),o]},useSyncExternalStore:he,useId:Dg};ta.useCacheRefresh=Ng,ta.useMemoCache=Ct,ta.useHostTransitionStatus=Nf,ta.useFormState=Xn,ta.useActionState=Xn,ta.useOptimistic=function(a,o){var u=tt();return oe(u,ke,a,o)};var La={readContext:Un,use:j,useCallback:Tg,useContext:Un,useEffect:Cf,useImperativeHandle:Eg,useInsertionEffect:Sg,useLayoutEffect:Mg,useMemo:Ag,useReducer:le,useRef:yg,useState:function(){return le(Ot)},useDebugValue:Rf,useDeferredValue:function(a,o){var u=tt();return ke===null?Df(u,a,o):wg(u,ke.memoizedState,a,o)},useTransition:function(){var a=le(Ot)[0],o=tt().memoizedState;return[typeof a=="boolean"?a:st(a),o]},useSyncExternalStore:he,useId:Dg};La.useCacheRefresh=Ng,La.useMemoCache=Ct,La.useHostTransitionStatus=Nf,La.useFormState=Sr,La.useActionState=Sr,La.useOptimistic=function(a,o){var u=tt();return ke!==null?oe(u,ke,a,o):(u.baseState=a,[a,u.queue.dispatch])};var Fd={isMounted:function(a){return(a=a._reactInternals)?m(a)===a:!1},enqueueSetState:function(a,o,u){a=a._reactInternals;var d=fi(),y=bt(d);y.payload=o,u!=null&&(y.callback=u),o=It(a,y,d),o!==null&&(qn(o,a,d),ee(o,a,d))},enqueueReplaceState:function(a,o,u){a=a._reactInternals;var d=fi(),y=bt(d);y.tag=1,y.payload=o,u!=null&&(y.callback=u),o=It(a,y,d),o!==null&&(qn(o,a,d),ee(o,a,d))},enqueueForceUpdate:function(a,o){a=a._reactInternals;var u=fi(),d=bt(u);d.tag=2,o!=null&&(d.callback=o),o=It(a,d,u),o!==null&&(qn(o,a,u),ee(o,a,u))}},Mv=typeof reportError=="function"?reportError:function(a){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var o=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof a=="object"&&a!==null&&typeof a.message=="string"?String(a.message):String(a),error:a});if(!window.dispatchEvent(o))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",a);return}console.error(a)},bv=Error(i(461)),Sn=!1,Hd={dehydrated:null,treeContext:null,retryLane:0},Xc=S(null),Ia=null,Ms=null,Kb=typeof AbortController<"u"?AbortController:function(){var a=[],o=this.signal={aborted:!1,addEventListener:function(u,d){a.push(d)}};this.abort=function(){o.aborted=!0,a.forEach(function(u){return u()})}},Jb=di.unstable_scheduleCallback,Qb=di.unstable_NormalPriority,sn={$$typeof:Zs,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0},Ev=me.S;me.S=function(a,o){typeof o=="object"&&o!==null&&typeof o.then=="function"&&ct(a,o),Ev!==null&&Ev(a,o)};var Oa=S(null),bs=!1,an=!1,Vd=!1,Tv=typeof WeakSet=="function"?WeakSet:Set,Mn=null,Av=!1,hn=null,vi=!1,Gi=null,kr=8192,$b={getCacheForType:function(a){var o=Un(sn),u=o.data.get(a);return u===void 0&&(u=a(),o.data.set(a,u)),u}},qc=0,Yc=1,Zc=2,jc=3,Kc=4;if(typeof Symbol=="function"&&Symbol.for){var ll=Symbol.for;qc=ll("selector.component"),Yc=ll("selector.has_pseudo_class"),Zc=ll("selector.role"),jc=ll("selector.test_id"),Kc=ll("selector.text")}var tE=typeof WeakMap=="function"?WeakMap:Map,We=0,Ye=null,we=null,Ne=0,Ze=0,_i=null,Es=!1,Wr=!1,Gd=!1,Ts=0,rn=0,ea=0,za=0,kd=0,Ni=0,Xr=0,cl=null,es=null,Wd=!1,Xd=0,ul=1/0,Jc=null,na=null,Qc=!1,Ba=null,hl=0,qd=0,Yd=null,fl=0,Zd=null;return Ae.attemptContinuousHydration=function(a){if(a.tag===13){var o=ot(a,67108864);o!==null&&qn(o,a,67108864),pd(a,67108864)}},Ae.attemptHydrationAtCurrentPriority=function(a){if(a.tag===13){var o=fi(),u=ot(a,o);u!==null&&qn(u,a,o),pd(a,o)}},Ae.attemptSynchronousHydration=function(a){switch(a.tag){case 3:if(a=a.stateNode,a.current.memoizedState.isDehydrated){var o=T(a.pendingLanes);if(o!==0){for(a.pendingLanes|=2,a.entangledLanes|=2;o;){var u=1<<31-pi(o);a.entanglements[1]|=u,o&=~u}Tt(a),(We&6)===0&&(ul=Hi()+500,re(0))}}break;case 13:o=ot(a,2),o!==null&&qn(o,a,2),T0(),pd(a,2)}},Ae.batchedUpdates=function(a,o){return a(o)},Ae.createComponentSelector=function(a){return{$$typeof:qc,value:a}},Ae.createContainer=function(a,o,u,d,y,M,U,G,J,pt){return F0(a,o,!1,null,u,d,M,U,G,J,pt,null)},Ae.createHasPseudoClassSelector=function(a){return{$$typeof:Yc,value:a}},Ae.createHydrationContainer=function(a,o,u,d,y,M,U,G,J,pt,Pt,Gt,Wt){return a=F0(u,d,!0,a,y,M,G,J,pt,Pt,Gt,Wt),a.context=H0(null),u=a.current,d=fi(),y=bt(d),y.callback=o??null,It(u,y,d),a.current.lanes=d,B(a,d),Tt(a),a},Ae.createPortal=function(a,o,u){var d=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Ar,key:d==null?null:""+d,children:a,containerInfo:o,implementation:u}},Ae.createRoleSelector=function(a){return{$$typeof:Zc,value:a}},Ae.createTestNameSelector=function(a){return{$$typeof:jc,value:a}},Ae.createTextSelector=function(a){return{$$typeof:Kc,value:a}},Ae.defaultOnCaughtError=function(a){console.error(a)},Ae.defaultOnRecoverableError=function(a){Mv(a)},Ae.defaultOnUncaughtError=function(a){Mv(a)},Ae.deferredUpdates=function(a){var o=me.T,u=Ca();try{return ni(32),me.T=null,a()}finally{ni(u),me.T=o}},Ae.discreteUpdates=function(a,o,u,d,y){var M=me.T,U=Ca();try{return ni(2),me.T=null,a(o,u,d,y)}finally{ni(U),me.T=M,We===0&&(ul=Hi()+500)}},Ae.findAllNodes=ad,Ae.findBoundingRects=function(a,o){if(!tl)throw Error(i(363));o=ad(a,o),a=[];for(var u=0;u<o.length;u++)a.push(qM(o[u]));for(o=a.length-1;0<o;o--){u=a[o];for(var d=u.x,y=d+u.width,M=u.y,U=M+u.height,G=o-1;0<=G;G--)if(o!==G){var J=a[G],pt=J.x,Pt=pt+J.width,Gt=J.y,Wt=Gt+J.height;if(d>=pt&&M>=Gt&&y<=Pt&&U<=Wt){a.splice(o,1);break}else if(d!==pt||u.width!==J.width||Wt<M||Gt>U){if(!(M!==Gt||u.height!==J.height||Pt<d||pt>y)){pt>d&&(J.width+=pt-d,J.x=d),Pt<y&&(J.width=y-pt),a.splice(o,1);break}}else{Gt>M&&(J.height+=Gt-M,J.y=M),Wt<U&&(J.height=U-Gt),a.splice(o,1);break}}}return a},Ae.findHostInstance=V0,Ae.findHostInstanceWithNoPortals=function(a){return a=v(a),a=a!==null?b(a):null,a===null?null:$o(a.stateNode)},Ae.findHostInstanceWithWarning=function(a){return V0(a)},Ae.flushPassiveEffects=Aa,Ae.flushSyncFromReconciler=function(a){var o=We;We|=1;var u=me.T,d=Ca();try{if(ni(2),me.T=null,a)return a()}finally{ni(d),me.T=u,We=o,(We&6)===0&&re(0)}},Ae.flushSyncWork=T0,Ae.focusWithin=function(a,o){if(!tl)throw Error(i(363));for(a=nd(a),o=S0(a,o),o=Array.from(o),a=0;a<o.length;){var u=o[a++],d=u.tag;if(!el(u)){if((d===5||d===26||d===27)&&jM(u.stateNode))return!0;for(u=u.child;u!==null;)o.push(u),u=u.sibling}}return!1},Ae.getFindAllNodesFailureDescription=function(a,o){if(!tl)throw Error(i(363));var u=0,d=[];a=[nd(a),0];for(var y=0;y<a.length;){var M=a[y++],U=M.tag,G=a[y++],J=o[G];if((U!==5&&U!==26&&U!==27||!el(M))&&(id(M,J)&&(d.push(sd(J)),G++,G>u&&(u=G)),G<o.length))for(M=M.child;M!==null;)a.push(M,G),M=M.sibling}if(u<o.length){for(a=[];u<o.length;u++)a.push(sd(o[u]));return`findAllNodes was able to match part of the selector:
  `+(d.join(" > ")+`

No matching component was found for:
  `)+a.join(" > ")}return null},Ae.getPublicRootInstance=function(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 27:case 5:return $o(a.child.stateNode);default:return a.child.stateNode}},Ae.injectIntoDevTools=function(){var a={bundleType:0,version:AM,rendererPackageName:wM,currentDispatcherRef:me,findFiberByHostInstance:Q0,reconcilerVersion:"19.0.0"};if(j0!==null&&(a.rendererConfig=j0),typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")a=!1;else{var o=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(o.isDisabled||!o.supportsFiber)a=!0;else{try{nl=o.inject(a),mi=o}catch{}a=!!o.checkDCE}}return a},Ae.isAlreadyRendering=function(){return!1},Ae.observeVisibleRects=function(a,o,u,d){if(!tl)throw Error(i(363));a=ad(a,o);var y=KM(a,u,d).disconnect;return{disconnect:function(){y()}}},Ae.shouldError=function(){return null},Ae.shouldSuspend=function(){return!1},Ae.startHostTransition=function(a,o,u,d){if(a.tag!==5)throw Error(i(476));var y=Rg(a).queue;Cg(a,y,o,Cr,u===null?n:function(){var M=Rg(a).next.queue;return Xo(a,M,{},fi()),u(d)})},Ae.updateContainer=function(a,o,u,d){var y=o.current,M=fi();return G0(y,M,a,o,u,d),M},Ae.updateContainerSync=function(a,o,u,d){return o.tag===0&&Aa(),G0(o.current,2,a,o,u,d),2},Ae},s.exports.default=s.exports,Object.defineProperty(s.exports,"__esModule",{value:!0})})(Xp)),Xp.exports}var py;function X3(){return py||(py=1,Wp.exports=W3()),Wp.exports}var q3=X3();const Y3=Ry(q3);var my=PS();function mg(s,t,e){if(!s)return;if(e(s)===!0)return s;let n=t?s.return:s.child;for(;n;){const i=mg(n,t,e);if(i)return i;n=t?null:n.sibling}}function LS(s){try{return Object.defineProperties(s,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return s}}const gg=LS(Dt.createContext(null));class IS extends Dt.Component{render(){return Dt.createElement(gg.Provider,{value:this._reactInternals},this.props.children)}}function OS(){const s=Dt.useContext(gg);if(s===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const t=Dt.useId();return Dt.useMemo(()=>{for(const e of[s,s?.alternate]){if(!e)continue;const n=mg(e,!1,i=>{let r=i.memoizedState;for(;r;){if(r.memoizedState===t)return!0;r=r.next}});if(n)return n}},[s,t])}const Z3=Symbol.for("react.context"),j3=s=>s!==null&&typeof s=="object"&&"$$typeof"in s&&s.$$typeof===Z3;function K3(){const s=OS(),[t]=Dt.useState(()=>new Map);t.clear();let e=s;for(;e;){const n=e.type;j3(n)&&n!==gg&&!t.has(n)&&t.set(n,Dt.use(LS(n))),e=e.return}return t}function J3(){const s=K3();return Dt.useMemo(()=>Array.from(s.keys()).reduce((t,e)=>n=>Dt.createElement(t,null,Dt.createElement(e.Provider,{...n,value:s.get(e)})),t=>Dt.createElement(IS,{...t})),[s])}function zS(s){let t=s.root;for(;t.getState().previousRoot;)t=t.getState().previousRoot;return t}const BS=s=>s&&s.isOrthographicCamera,Q3=s=>s&&s.hasOwnProperty("current"),$3=s=>s!=null&&(typeof s=="string"||typeof s=="number"||s.isColor),pc=((s,t)=>typeof window<"u"&&(((s=window.document)==null?void 0:s.createElement)||((t=window.navigator)==null?void 0:t.product)==="ReactNative"))()?Dt.useLayoutEffect:Dt.useEffect;function FS(s){const t=Dt.useRef(s);return pc(()=>void(t.current=s),[s]),t}function tD(){const s=OS(),t=J3();return Dt.useMemo(()=>({children:e})=>{const i=!!mg(s,!0,r=>r.type===Dt.StrictMode)?Dt.StrictMode:Dt.Fragment;return De.jsx(i,{children:De.jsx(t,{children:e})})},[s,t])}function eD({set:s}){return pc(()=>(s(new Promise(()=>null)),()=>s(!1)),[s]),null}const nD=(s=>(s=class extends Dt.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}},s.getDerivedStateFromError=()=>({error:!0}),s))();function HS(s){var t;const e=typeof window<"u"?(t=window.devicePixelRatio)!=null?t:2:1;return Array.isArray(s)?Math.min(Math.max(s[0],e),s[1]):s}function po(s){var t;return(t=s.__r3f)==null?void 0:t.root.getState()}const $e={obj:s=>s===Object(s)&&!$e.arr(s)&&typeof s!="function",fun:s=>typeof s=="function",str:s=>typeof s=="string",num:s=>typeof s=="number",boo:s=>typeof s=="boolean",und:s=>s===void 0,nul:s=>s===null,arr:s=>Array.isArray(s),equ(s,t,{arrays:e="shallow",objects:n="reference",strict:i=!0}={}){if(typeof s!=typeof t||!!s!=!!t)return!1;if($e.str(s)||$e.num(s)||$e.boo(s))return s===t;const r=$e.obj(s);if(r&&n==="reference")return s===t;const l=$e.arr(s);if(l&&e==="reference")return s===t;if((l||r)&&s===t)return!0;let c;for(c in s)if(!(c in t))return!1;if(r&&e==="shallow"&&n==="shallow"){for(c in i?t:s)if(!$e.equ(s[c],t[c],{strict:i,objects:"reference"}))return!1}else for(c in i?t:s)if(s[c]!==t[c])return!1;if($e.und(c)){if(l&&s.length===0&&t.length===0||r&&Object.keys(s).length===0&&Object.keys(t).length===0)return!0;if(s!==t)return!1}return!0}};function iD(s){const t={nodes:{},materials:{},meshes:{}};return s&&s.traverse(e=>{e.name&&(t.nodes[e.name]=e),e.material&&!t.materials[e.material.name]&&(t.materials[e.material.name]=e.material),e.isMesh&&!t.meshes[e.name]&&(t.meshes[e.name]=e)}),t}function sD(s){s.type!=="Scene"&&(s.dispose==null||s.dispose());for(const t in s){const e=s[t];e?.type!=="Scene"&&(e==null||e.dispose==null||e.dispose())}}const VS=["children","key","ref"];function aD(s){const t={};for(const e in s)VS.includes(e)||(t[e]=s[e]);return t}function Vh(s,t,e,n){const i=s;let r=i?.__r3f;return r||(r={root:t,type:e,parent:null,children:[],props:aD(n),object:i,eventCount:0,handlers:{},isHidden:!1},i&&(i.__r3f=r)),r}function sc(s,t){let e=s[t];if(!t.includes("-"))return{root:s,key:t,target:e};e=s;for(const i of t.split("-")){var n;t=i,s=e,e=(n=e)==null?void 0:n[t]}return{root:s,key:t,target:e}}const gy=/-\d+$/;function Gh(s,t){if($e.str(t.props.attach)){if(gy.test(t.props.attach)){const i=t.props.attach.replace(gy,""),{root:r,key:l}=sc(s.object,i);Array.isArray(r[l])||(r[l]=[])}const{root:e,key:n}=sc(s.object,t.props.attach);t.previousAttach=e[n],e[n]=t.object}else $e.fun(t.props.attach)&&(t.previousAttach=t.props.attach(s.object,t.object))}function kh(s,t){if($e.str(t.props.attach)){const{root:e,key:n}=sc(s.object,t.props.attach),i=t.previousAttach;i===void 0?delete e[n]:e[n]=i}else t.previousAttach==null||t.previousAttach(s.object,t.object);delete t.previousAttach}const ym=[...VS,"args","dispose","attach","object","onUpdate","dispose"],vy=new Map;function rD(s){let t=vy.get(s.constructor);try{t||(t=new s.constructor,vy.set(s.constructor,t))}catch{}return t}function oD(s,t){const e={};for(const n in t)if(!ym.includes(n)&&!$e.equ(t[n],s.props[n])){e[n]=t[n];for(const i in t)i.startsWith(`${n}-`)&&(e[i]=t[i])}for(const n in s.props){if(ym.includes(n)||t.hasOwnProperty(n))continue;const{root:i,key:r}=sc(s.object,n);if(i.constructor&&i.constructor.length===0){const l=rD(i);$e.und(l)||(e[r]=l[r])}else e[r]=0}return e}const lD=["map","emissiveMap","sheenColorMap","specularColorMap","envMap"],cD=/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;function fa(s,t){var e;const n=s.__r3f,i=n&&zS(n).getState(),r=n?.eventCount;for(const c in t){let h=t[c];if(ym.includes(c))continue;if(n&&cD.test(c)){typeof h=="function"?n.handlers[c]=h:delete n.handlers[c],n.eventCount=Object.keys(n.handlers).length;continue}if(h===void 0)continue;let{root:f,key:p,target:m}=sc(s,c);if(m instanceof Ro&&h instanceof Ro)m.mask=h.mask;else if(m instanceof Xt&&$3(h))m.set(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof m.copy=="function"&&h!=null&&h.constructor&&m.constructor===h.constructor)m.copy(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&Array.isArray(h))typeof m.fromArray=="function"?m.fromArray(h):m.set(...h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof h=="number")typeof m.setScalar=="function"?m.setScalar(h):m.set(h);else{var l;f[p]=h,i&&!i.linear&&lD.includes(p)&&(l=f[p])!=null&&l.isTexture&&f[p].format===Hn&&f[p].type===Ii&&(f[p].colorSpace=Fn)}}if(n!=null&&n.parent&&i!=null&&i.internal&&(e=n.object)!=null&&e.isObject3D&&r!==n.eventCount){const c=n.object,h=i.internal.interaction.indexOf(c);h>-1&&i.internal.interaction.splice(h,1),n.eventCount&&c.raycast!==null&&i.internal.interaction.push(c)}return n&&n.props.attach===void 0&&(n.object.isBufferGeometry?n.props.attach="geometry":n.object.isMaterial&&(n.props.attach="material")),n&&Fo(n),s}function Fo(s){var t;if(!s.parent)return;s.props.onUpdate==null||s.props.onUpdate(s.object);const e=(t=s.root)==null||t.getState==null?void 0:t.getState();e&&e.internal.frames===0&&e.invalidate()}function uD(s,t){s.manual||(BS(s)?(s.left=t.width/-2,s.right=t.width/2,s.top=t.height/2,s.bottom=t.height/-2):s.aspect=t.width/t.height,s.updateProjectionMatrix())}const Kn=s=>s?.isObject3D;function Wu(s){return(s.eventObject||s.object).uuid+"/"+s.index+s.instanceId}function GS(s,t,e,n){const i=e.get(t);i&&(e.delete(t),e.size===0&&(s.delete(n),i.target.releasePointerCapture(n)))}function hD(s,t){const{internal:e}=s.getState();e.interaction=e.interaction.filter(n=>n!==t),e.initialHits=e.initialHits.filter(n=>n!==t),e.hovered.forEach((n,i)=>{(n.eventObject===t||n.object===t)&&e.hovered.delete(i)}),e.capturedMap.forEach((n,i)=>{GS(e.capturedMap,t,n,i)})}function fD(s){function t(h){const{internal:f}=s.getState(),p=h.offsetX-f.initialClick[0],m=h.offsetY-f.initialClick[1];return Math.round(Math.sqrt(p*p+m*m))}function e(h){return h.filter(f=>["Move","Over","Enter","Out","Leave"].some(p=>{var m;return(m=f.__r3f)==null?void 0:m.handlers["onPointer"+p]}))}function n(h,f){const p=s.getState(),m=new Set,g=[],v=f?f(p.internal.interaction):p.internal.interaction;for(let _=0;_<v.length;_++){const E=po(v[_]);E&&(E.raycaster.camera=void 0)}p.previousRoot||p.events.compute==null||p.events.compute(h,p);function x(_){const E=po(_);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var A;E.events.compute==null||E.events.compute(h,E,(A=E.previousRoot)==null?void 0:A.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(_,!0):[]}let b=v.flatMap(x).sort((_,E)=>{const A=po(_.object),T=po(E.object);return!A||!T?_.distance-E.distance:T.events.priority-A.events.priority||_.distance-E.distance}).filter(_=>{const E=Wu(_);return m.has(E)?!1:(m.add(E),!0)});p.events.filter&&(b=p.events.filter(b,p));for(const _ of b){let E=_.object;for(;E;){var S;(S=E.__r3f)!=null&&S.eventCount&&g.push({..._,eventObject:E}),E=E.parent}}if("pointerId"in h&&p.internal.capturedMap.has(h.pointerId))for(let _ of p.internal.capturedMap.get(h.pointerId).values())m.has(Wu(_.intersection))||g.push(_.intersection);return g}function i(h,f,p,m){if(h.length){const g={stopped:!1};for(const v of h){let x=po(v.object);if(x||v.object.traverseAncestors(b=>{const S=po(b);if(S)return x=S,!1}),x){const{raycaster:b,pointer:S,camera:_,internal:E}=x,A=new I(S.x,S.y,0).unproject(_),T=C=>{var w,B;return(w=(B=E.capturedMap.get(C))==null?void 0:B.has(v.eventObject))!=null?w:!1},N=C=>{const w={intersection:v,target:f.target};E.capturedMap.has(C)?E.capturedMap.get(C).set(v.eventObject,w):E.capturedMap.set(C,new Map([[v.eventObject,w]])),f.target.setPointerCapture(C)},R=C=>{const w=E.capturedMap.get(C);w&&GS(E.capturedMap,v.eventObject,w,C)};let L={};for(let C in f){let w=f[C];typeof w!="function"&&(L[C]=w)}let z={...v,...L,pointer:S,intersections:h,stopped:g.stopped,delta:p,unprojectedPoint:A,ray:b.ray,camera:_,stopPropagation(){const C="pointerId"in f&&E.capturedMap.get(f.pointerId);if((!C||C.has(v.eventObject))&&(z.stopped=g.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(w=>w.eventObject===v.eventObject))){const w=h.slice(0,h.indexOf(v));r([...w,v])}},target:{hasPointerCapture:T,setPointerCapture:N,releasePointerCapture:R},currentTarget:{hasPointerCapture:T,setPointerCapture:N,releasePointerCapture:R},nativeEvent:f};if(m(z),g.stopped===!0)break}}}return h}function r(h){const{internal:f}=s.getState();for(const p of f.hovered.values())if(!h.length||!h.find(m=>m.object===p.object&&m.index===p.index&&m.instanceId===p.instanceId)){const g=p.eventObject.__r3f;if(f.hovered.delete(Wu(p)),g!=null&&g.eventCount){const v=g.handlers,x={...p,intersections:h};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function l(h,f){for(let p=0;p<f.length;p++){const m=f[p].__r3f;m==null||m.handlers.onPointerMissed==null||m.handlers.onPointerMissed(h)}}function c(h){switch(h){case"onPointerLeave":case"onPointerCancel":return()=>r([]);case"onLostPointerCapture":return f=>{const{internal:p}=s.getState();"pointerId"in f&&p.capturedMap.has(f.pointerId)&&requestAnimationFrame(()=>{p.capturedMap.has(f.pointerId)&&(p.capturedMap.delete(f.pointerId),r([]))})}}return function(p){const{onPointerMissed:m,internal:g}=s.getState();g.lastEvent.current=p;const v=h==="onPointerMove",x=h==="onClick"||h==="onContextMenu"||h==="onDoubleClick",S=n(p,v?e:void 0),_=x?t(p):0;h==="onPointerDown"&&(g.initialClick=[p.offsetX,p.offsetY],g.initialHits=S.map(A=>A.eventObject)),x&&!S.length&&_<=2&&(l(p,g.interaction),m&&m(p)),v&&r(S);function E(A){const T=A.eventObject,N=T.__r3f;if(!(N!=null&&N.eventCount))return;const R=N.handlers;if(v){if(R.onPointerOver||R.onPointerEnter||R.onPointerOut||R.onPointerLeave){const L=Wu(A),z=g.hovered.get(L);z?z.stopped&&A.stopPropagation():(g.hovered.set(L,A),R.onPointerOver==null||R.onPointerOver(A),R.onPointerEnter==null||R.onPointerEnter(A))}R.onPointerMove==null||R.onPointerMove(A)}else{const L=R[h];L?(!x||g.initialHits.includes(T))&&(l(p,g.interaction.filter(z=>!g.initialHits.includes(z))),L(A)):x&&g.initialHits.includes(T)&&l(p,g.interaction.filter(z=>!g.initialHits.includes(z)))}}i(S,p,_,E)}}return{handlePointer:c}}const _y=s=>!!(s!=null&&s.render),kS=Dt.createContext(null),dD=(s,t)=>{const e=B3((c,h)=>{const f=new I,p=new I,m=new I;function g(_=h().camera,E=p,A=h().size){const{width:T,height:N,top:R,left:L}=A,z=T/N;E.isVector3?m.copy(E):m.set(...E);const C=_.getWorldPosition(f).distanceTo(m);if(BS(_))return{width:T/_.zoom,height:N/_.zoom,top:R,left:L,factor:1,distance:C,aspect:z};{const w=_.fov*Math.PI/180,B=2*Math.tan(w/2)*C,Y=B*(T/N);return{width:Y,height:B,top:R,left:L,factor:T/Y,distance:C,aspect:z}}}let v;const x=_=>c(E=>({performance:{...E.performance,current:_}})),b=new dt;return{set:c,get:h,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},scene:null,xr:null,invalidate:(_=1)=>s(h(),_),advance:(_,E)=>t(_,E,h()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new cg,pointer:b,mouse:b,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=h();v&&clearTimeout(v),_.performance.current!==_.performance.min&&x(_.performance.min),v=setTimeout(()=>x(h().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:_=>c(E=>({...E,events:{...E.events,..._}})),setSize:(_,E,A=0,T=0)=>{const N=h().camera,R={width:_,height:E,top:A,left:T};c(L=>({size:R,viewport:{...L.viewport,...g(N,p,R)}}))},setDpr:_=>c(E=>{const A=HS(_);return{viewport:{...E.viewport,dpr:A,initialDpr:E.viewport.initialDpr||A}}}),setFrameloop:(_="always")=>{const E=h().clock;E.stop(),E.elapsedTime=0,_!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,lastEvent:Dt.createRef(),active:!1,frames:0,priority:0,subscribe:(_,E,A)=>{const T=h().internal;return T.priority=T.priority+(E>0?1:0),T.subscribers.push({ref:_,priority:E,store:A}),T.subscribers=T.subscribers.sort((N,R)=>N.priority-R.priority),()=>{const N=h().internal;N!=null&&N.subscribers&&(N.priority=N.priority-(E>0?1:0),N.subscribers=N.subscribers.filter(R=>R.ref!==_))}}}}}),n=e.getState();let i=n.size,r=n.viewport.dpr,l=n.camera;return e.subscribe(()=>{const{camera:c,size:h,viewport:f,gl:p,set:m}=e.getState();if(h.width!==i.width||h.height!==i.height||f.dpr!==r){i=h,r=f.dpr,uD(c,h),f.dpr>0&&p.setPixelRatio(f.dpr);const g=typeof HTMLCanvasElement<"u"&&p.domElement instanceof HTMLCanvasElement;p.setSize(h.width,h.height,g)}c!==l&&(l=c,m(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),e.subscribe(c=>s(c)),e};function WS(){const s=Dt.useContext(kS);if(!s)throw new Error("R3F: Hooks can only be used within the Canvas component!");return s}function ss(s=e=>e,t){return WS()(s,t)}function XS(s,t=0){const e=WS(),n=e.getState().internal.subscribe,i=FS(s);return pc(()=>n(i,t,e),[t,n,e]),null}const yy=new WeakMap,pD=s=>{var t;return typeof s=="function"&&(s==null||(t=s.prototype)==null?void 0:t.constructor)===s};function qS(s,t){return function(e,...n){let i;return pD(e)?(i=yy.get(e),i||(i=new e,yy.set(e,i))):i=e,s&&s(i),Promise.all(n.map(r=>new Promise((l,c)=>i.load(r,h=>{Kn(h?.scene)&&Object.assign(h,iD(h.scene)),l(h)},t,h=>c(new Error(`Could not load ${r}: ${h?.message}`))))))}}function YS(s,t,e,n){const i=Array.isArray(t)?t:[t],r=H3(qS(e,n),[s,...i],{equal:$e.equ});return Array.isArray(t)?r:r[0]}YS.preload=function(s,t,e){const n=Array.isArray(t)?t:[t];return V3(qS(e),[s,...n])};YS.clear=function(s,t){const e=Array.isArray(t)?t:[t];return G3([s,...e])};function mD(s){const t=Y3(s);return t.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Dt.version}),t}const ZS=0,Po={},gD=/^three(?=[A-Z])/,Af=s=>`${s[0].toUpperCase()}${s.slice(1)}`;let vD=0;const _D=s=>typeof s=="function";function yD(s){if(_D(s)){const t=`${vD++}`;return Po[t]=s,t}else Object.assign(Po,s)}function jS(s,t){const e=Af(s),n=Po[e];if(s!=="primitive"&&!n)throw new Error(`R3F: ${e} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(s==="primitive"&&!t.object)throw new Error("R3F: Primitives without 'object' are invalid!");if(t.args!==void 0&&!Array.isArray(t.args))throw new Error("R3F: The args prop must be an array!")}function xD(s,t,e){var n;return s=Af(s)in Po?s:s.replace(gD,""),jS(s,t),s==="primitive"&&(n=t.object)!=null&&n.__r3f&&delete t.object.__r3f,Vh(t.object,e,s,t)}function SD(s){if(!s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?kh(s.parent,s):Kn(s.object)&&(s.object.visible=!1),s.isHidden=!0,Fo(s)}}function KS(s){if(s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?Gh(s.parent,s):Kn(s.object)&&s.props.visible!==!1&&(s.object.visible=!0),s.isHidden=!1,Fo(s)}}function vg(s,t,e){const n=t.root.getState();if(!(!s.parent&&s.object!==n.scene)){if(!t.object){var i,r;const l=Po[Af(t.type)];t.object=(i=t.props.object)!=null?i:new l(...(r=t.props.args)!=null?r:[]),t.object.__r3f=t}if(fa(t.object,t.props),t.props.attach)Gh(s,t);else if(Kn(t.object)&&Kn(s.object)){const l=s.object.children.indexOf(e?.object);if(e&&l!==-1){const c=s.object.children.indexOf(t.object);if(c!==-1){s.object.children.splice(c,1);const h=c<l?l-1:l;s.object.children.splice(h,0,t.object)}else t.object.parent=s.object,s.object.children.splice(l,0,t.object),t.object.dispatchEvent({type:"added"}),s.object.dispatchEvent({type:"childadded",child:t.object})}else s.object.add(t.object)}for(const l of t.children)vg(t,l);Fo(t)}}function Zp(s,t){t&&(t.parent=s,s.children.push(t),vg(s,t))}function xy(s,t,e){if(!t||!e)return;t.parent=s;const n=s.children.indexOf(e);n!==-1?s.children.splice(n,0,t):s.children.push(t),vg(s,t,e)}function JS(s){if(typeof s.dispose=="function"){const t=()=>{try{s.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT<"u"?t():my.unstable_scheduleCallback(my.unstable_IdlePriority,t)}}function xm(s,t,e){if(!t)return;t.parent=null;const n=s.children.indexOf(t);n!==-1&&s.children.splice(n,1),t.props.attach?kh(s,t):Kn(t.object)&&Kn(s.object)&&(s.object.remove(t.object),hD(zS(t),t.object));const i=t.props.dispose!==null&&e!==!1;for(let r=t.children.length-1;r>=0;r--){const l=t.children[r];xm(t,l,i)}t.children.length=0,delete t.object.__r3f,i&&t.type!=="primitive"&&t.object.type!=="Scene"&&JS(t.object),e===void 0&&Fo(t)}function MD(s,t){for(const e of[s,s.alternate])if(e!==null)if(typeof e.ref=="function"){e.refCleanup==null||e.refCleanup();const n=e.ref(t);typeof n=="function"&&(e.refCleanup=n)}else e.ref&&(e.ref.current=t)}const Ju=[];function bD(){for(const[e]of Ju){const n=e.parent;if(n){e.props.attach?kh(n,e):Kn(e.object)&&Kn(n.object)&&n.object.remove(e.object);for(const i of e.children)i.props.attach?kh(e,i):Kn(i.object)&&Kn(e.object)&&e.object.remove(i.object)}e.isHidden&&KS(e),e.object.__r3f&&delete e.object.__r3f,e.type!=="primitive"&&JS(e.object)}for(const[e,n,i]of Ju){e.props=n;const r=e.parent;if(r){var s,t;const l=Po[Af(e.type)];e.object=(s=e.props.object)!=null?s:new l(...(t=e.props.args)!=null?t:[]),e.object.__r3f=e,MD(i,e.object),fa(e.object,e.props),e.props.attach?Gh(r,e):Kn(e.object)&&Kn(r.object)&&r.object.add(e.object);for(const c of e.children)c.props.attach?Gh(e,c):Kn(c.object)&&Kn(e.object)&&e.object.add(c.object);Fo(e)}}Ju.length=0}const jp=()=>{},Sy={};let Xu=ZS;const ED=0,TD=4,Sm=mD({isPrimaryRenderer:!1,warnsIfNotActing:!1,supportsMutation:!0,supportsPersistence:!1,supportsHydration:!1,createInstance:xD,removeChild:xm,appendChild:Zp,appendInitialChild:Zp,insertBefore:xy,appendChildToContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||Zp(e,t)},removeChildFromContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||xm(e,t)},insertInContainerBefore(s,t,e){const n=s.getState().scene.__r3f;!t||!e||!n||xy(n,t,e)},getRootHostContext:()=>Sy,getChildHostContext:()=>Sy,commitUpdate(s,t,e,n,i){var r,l,c;jS(t,n);let h=!1;if((s.type==="primitive"&&e.object!==n.object||((r=n.args)==null?void 0:r.length)!==((l=e.args)==null?void 0:l.length)||(c=n.args)!=null&&c.some((p,m)=>{var g;return p!==((g=e.args)==null?void 0:g[m])}))&&(h=!0),h)Ju.push([s,{...n},i]);else{const p=oD(s,n);Object.keys(p).length&&(Object.assign(s.props,p),fa(s.object,p))}(i.sibling===null||(i.flags&TD)===ED)&&bD()},finalizeInitialChildren:()=>!1,commitMount(){},getPublicInstance:s=>s?.object,prepareForCommit:()=>null,preparePortalMount:s=>Vh(s.getState().scene,s,"",{}),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance:SD,unhideInstance:KS,createTextInstance:jp,hideTextInstance:jp,unhideTextInstance:jp,scheduleTimeout:typeof setTimeout=="function"?setTimeout:void 0,cancelTimeout:typeof clearTimeout=="function"?clearTimeout:void 0,noTimeout:-1,getInstanceFromNode:()=>null,beforeActiveInstanceBlur(){},afterActiveInstanceBlur(){},detachDeletedInstance(){},prepareScopeUpdate(){},getInstanceFromScope:()=>null,shouldAttemptEagerTransition:()=>!1,trackSchedulerEvent:()=>{},resolveEventType:()=>null,resolveEventTimeStamp:()=>-1.1,requestPostPaintCallback(){},maySuspendCommit:()=>!1,preloadInstance:()=>!0,startSuspendingCommit(){},suspendInstance(){},waitForCommitToBeReady:()=>null,NotPendingTransition:null,HostTransitionContext:Dt.createContext(null),setCurrentUpdatePriority(s){Xu=s},getCurrentUpdatePriority(){return Xu},resolveUpdatePriority(){var s;if(Xu!==ZS)return Xu;switch(typeof window<"u"&&((s=window.event)==null?void 0:s.type)){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Ku.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Ku.ContinuousEventPriority;default:return Ku.DefaultEventPriority}},resetFormInstance(){}}),mr=new Map,mo={objects:"shallow",strict:!1};function AD(s,t){if(!t&&typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement&&s.parentElement){const{width:e,height:n,top:i,left:r}=s.parentElement.getBoundingClientRect();return{width:e,height:n,top:i,left:r}}else if(!t&&typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas)return{width:s.width,height:s.height,top:0,left:0};return{width:0,height:0,top:0,left:0,...t}}function wD(s){const t=mr.get(s),e=t?.fiber,n=t?.store;t&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,r=n||dD(Em,by),l=e||Sm.createContainer(r,Ku.ConcurrentRoot,null,!1,null,"",i,i,i,null);t||mr.set(s,{fiber:l,store:r});let c,h,f=!1,p=null;return{async configure(m={}){let g;p=new Promise(St=>g=St);let{gl:v,size:x,scene:b,events:S,onCreated:_,shadows:E=!1,linear:A=!1,flat:T=!1,legacy:N=!1,orthographic:R=!1,frameloop:L="always",dpr:z=[1,2],performance:C,raycaster:w,camera:B,onPointerMissed:Y}=m,W=r.getState(),$=W.gl;if(!W.gl){const St={canvas:s,powerPreference:"high-performance",antialias:!0,alpha:!0},Lt=typeof v=="function"?await v(St):v;_y(Lt)?$=Lt:$=new RS({...St,...v}),W.set({gl:$})}let et=W.raycaster;et||W.set({raycaster:et=new SS});const{params:k,...Q}=w||{};if($e.equ(Q,et,mo)||fa(et,{...Q}),$e.equ(k,et.params,mo)||fa(et,{params:{...et.params,...k}}),!W.camera||W.camera===h&&!$e.equ(h,B,mo)){h=B;const St=B?.isCamera,Lt=St?B:R?new cs(0,0,0,0,.1,1e3):new en(75,0,.1,1e3);St||(Lt.position.z=5,B&&(fa(Lt,B),Lt.manual||("aspect"in B||"left"in B||"right"in B||"bottom"in B||"top"in B)&&(Lt.manual=!0,Lt.updateProjectionMatrix())),!W.camera&&!(B!=null&&B.rotation)&&Lt.lookAt(0,0,0)),W.set({camera:Lt}),et.camera=Lt}if(!W.scene){let St;b!=null&&b.isScene?(St=b,Vh(St,r,"",{})):(St=new Gm,Vh(St,r,"",{}),b&&fa(St,b)),W.set({scene:St})}S&&!W.events.handlers&&W.set({events:S(r)});const X=AD(s,x);if($e.equ(X,W.size,mo)||W.setSize(X.width,X.height,X.top,X.left),z&&W.viewport.dpr!==HS(z)&&W.setDpr(z),W.frameloop!==L&&W.setFrameloop(L),W.onPointerMissed||W.set({onPointerMissed:Y}),C&&!$e.equ(C,W.performance,mo)&&W.set(St=>({performance:{...St.performance,...C}})),!W.xr){var lt;const St=(Zt,ie)=>{const ut=r.getState();ut.frameloop!=="never"&&by(Zt,!0,ut,ie)},Lt=()=>{const Zt=r.getState();Zt.gl.xr.enabled=Zt.gl.xr.isPresenting,Zt.gl.xr.setAnimationLoop(Zt.gl.xr.isPresenting?St:null),Zt.gl.xr.isPresenting||Em(Zt)},Yt={connect(){const Zt=r.getState().gl;Zt.xr.addEventListener("sessionstart",Lt),Zt.xr.addEventListener("sessionend",Lt)},disconnect(){const Zt=r.getState().gl;Zt.xr.removeEventListener("sessionstart",Lt),Zt.xr.removeEventListener("sessionend",Lt)}};typeof((lt=$.xr)==null?void 0:lt.addEventListener)=="function"&&Yt.connect(),W.set({xr:Yt})}if($.shadowMap){const St=$.shadowMap.enabled,Lt=$.shadowMap.type;if($.shadowMap.enabled=!!E,$e.boo(E))$.shadowMap.type=Nl;else if($e.str(E)){var _t;const Yt={basic:Uy,percentage:qh,soft:Nl,variance:qi};$.shadowMap.type=(_t=Yt[E])!=null?_t:Nl}else $e.obj(E)&&Object.assign($.shadowMap,E);(St!==$.shadowMap.enabled||Lt!==$.shadowMap.type)&&($.shadowMap.needsUpdate=!0)}return Re.enabled=!N,f||($.outputColorSpace=A?ma:Fn,$.toneMapping=T?os:wm),W.legacy!==N&&W.set(()=>({legacy:N})),W.linear!==A&&W.set(()=>({linear:A})),W.flat!==T&&W.set(()=>({flat:T})),v&&!$e.fun(v)&&!_y(v)&&!$e.equ(v,$,mo)&&fa($,v),c=_,f=!0,g(),this},render(m){return!f&&!p&&this.configure(),p.then(()=>{Sm.updateContainer(De.jsx(CD,{store:r,children:m,onCreated:c,rootElement:s}),l,null,()=>{})}),r},unmount(){QS(s)}}}function CD({store:s,children:t,onCreated:e,rootElement:n}){return pc(()=>{const i=s.getState();i.set(r=>({internal:{...r.internal,active:!0}})),e&&e(i),s.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),De.jsx(kS.Provider,{value:s,children:t})}function QS(s,t){const e=mr.get(s),n=e?.fiber;if(n){const i=e?.store.getState();i&&(i.internal.active=!1),Sm.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var r,l,c,h;i.events.disconnect==null||i.events.disconnect(),(r=i.gl)==null||(l=r.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(h=i.gl)!=null&&h.xr&&i.xr.disconnect(),sD(i.scene),mr.delete(s)}catch{}},500)})}}const RD=new Set,DD=new Set,ND=new Set;function Kp(s,t){if(s.size)for(const{callback:e}of s.values())e(t)}function Hl(s,t){switch(s){case"before":return Kp(RD,t);case"after":return Kp(DD,t);case"tail":return Kp(ND,t)}}let Jp,Qp;function Mm(s,t,e){let n=t.clock.getDelta();t.frameloop==="never"&&typeof s=="number"&&(n=s-t.clock.elapsedTime,t.clock.oldTime=t.clock.elapsedTime,t.clock.elapsedTime=s),Jp=t.internal.subscribers;for(let i=0;i<Jp.length;i++)Qp=Jp[i],Qp.ref.current(Qp.store.getState(),n,e);return!t.internal.priority&&t.gl.render&&t.gl.render(t.scene,t.camera),t.internal.frames=Math.max(0,t.internal.frames-1),t.frameloop==="always"?1:t.internal.frames}let Wh=!1,bm=!1,$p,My,go;function $S(s){My=requestAnimationFrame($S),Wh=!0,$p=0,Hl("before",s),bm=!0;for(const e of mr.values()){var t;go=e.store.getState(),go.internal.active&&(go.frameloop==="always"||go.internal.frames>0)&&!((t=go.gl.xr)!=null&&t.isPresenting)&&($p+=Mm(s,go))}if(bm=!1,Hl("after",s),$p===0)return Hl("tail",s),Wh=!1,cancelAnimationFrame(My)}function Em(s,t=1){var e;if(!s)return mr.forEach(n=>Em(n.store.getState(),t));(e=s.gl.xr)!=null&&e.isPresenting||!s.internal.active||s.frameloop==="never"||(t>1?s.internal.frames=Math.min(60,s.internal.frames+t):bm?s.internal.frames=2:s.internal.frames=1,Wh||(Wh=!0,requestAnimationFrame($S)))}function by(s,t=!0,e,n){if(t&&Hl("before",s),e)Mm(s,e,n);else for(const i of mr.values())Mm(s,i.store.getState());t&&Hl("after",s)}const tm={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function UD(s){const{handlePointer:t}=fD(s);return{priority:1,enabled:!0,compute(e,n,i){n.pointer.set(e.offsetX/n.size.width*2-1,-(e.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(tm).reduce((e,n)=>({...e,[n]:t(n)}),{}),update:()=>{var e;const{events:n,internal:i}=s.getState();(e=i.lastEvent)!=null&&e.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:e=>{const{set:n,events:i}=s.getState();if(i.disconnect==null||i.disconnect(),n(r=>({events:{...r.events,connected:e}})),i.handlers)for(const r in i.handlers){const l=i.handlers[r],[c,h]=tm[r];e.addEventListener(c,l,{passive:h})}},disconnect:()=>{const{set:e,events:n}=s.getState();if(n.connected){if(n.handlers)for(const i in n.handlers){const r=n.handlers[i],[l]=tm[i];n.connected.removeEventListener(l,r)}e(i=>({events:{...i.events,connected:void 0}}))}}}}function Ey(s,t){let e;return(...n)=>{window.clearTimeout(e),e=window.setTimeout(()=>s(...n),t)}}function PD({debounce:s,scroll:t,polyfill:e,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=e||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[r,l]=Dt.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=Dt.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:r,orientationHandler:null}),h=s?typeof s=="number"?s:s.scroll:null,f=s?typeof s=="number"?s:s.resize:null,p=Dt.useRef(!1);Dt.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,g,v]=Dt.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:E,top:A,width:T,height:N,bottom:R,right:L,x:z,y:C}=c.current.element.getBoundingClientRect(),w={left:E,top:A,width:T,height:N,bottom:R,right:L,x:z,y:C};c.current.element instanceof HTMLElement&&n&&(w.height=c.current.element.offsetHeight,w.width=c.current.element.offsetWidth),Object.freeze(w),p.current&&!zD(c.current.lastBounds,w)&&l(c.current.lastBounds=w)};return[_,f?Ey(_,f):_,h?Ey(_,h):_]},[l,n,h,f]);function x(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function b(){c.current.element&&(c.current.resizeObserver=new i(v),c.current.resizeObserver.observe(c.current.element),t&&c.current.scrollContainers&&c.current.scrollContainers.forEach(_=>_.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const S=_=>{!_||_===c.current.element||(x(),c.current.element=_,c.current.scrollContainers=tM(_),b())};return ID(v,!!t),LD(g),Dt.useEffect(()=>{x(),b()},[t,v,g]),Dt.useEffect(()=>x,[]),[S,r,m]}function LD(s){Dt.useEffect(()=>{const t=s;return window.addEventListener("resize",t),()=>void window.removeEventListener("resize",t)},[s])}function ID(s,t){Dt.useEffect(()=>{if(t){const e=s;return window.addEventListener("scroll",e,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",e,!0)}},[s,t])}function tM(s){const t=[];if(!s||s===document.body)return t;const{overflow:e,overflowX:n,overflowY:i}=window.getComputedStyle(s);return[e,n,i].some(r=>r==="auto"||r==="scroll")&&t.push(s),[...t,...tM(s.parentElement)]}const OD=["x","y","top","bottom","left","right","width","height"],zD=(s,t)=>OD.every(e=>s[e]===t[e]);function BD({ref:s,children:t,fallback:e,resize:n,style:i,gl:r,events:l=UD,eventSource:c,eventPrefix:h,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:b,performance:S,raycaster:_,camera:E,scene:A,onPointerMissed:T,onCreated:N,...R}){Dt.useMemo(()=>yD(A3),[]);const L=tD(),[z,C]=PD({scroll:!0,debounce:{scroll:50,resize:0},...n}),w=Dt.useRef(null),B=Dt.useRef(null);Dt.useImperativeHandle(s,()=>w.current);const Y=FS(T),[W,$]=Dt.useState(!1),[et,k]=Dt.useState(!1);if(W)throw W;if(et)throw et;const Q=Dt.useRef(null);pc(()=>{const lt=w.current;if(C.width>0&&C.height>0&&lt){Q.current||(Q.current=wD(lt));async function _t(){await Q.current.configure({gl:r,scene:A,events:l,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:b,performance:S,raycaster:_,camera:E,size:C,onPointerMissed:(...St)=>Y.current==null?void 0:Y.current(...St),onCreated:St=>{St.events.connect==null||St.events.connect(c?Q3(c)?c.current:c:B.current),h&&St.setEvents({compute:(Lt,Yt)=>{const Zt=Lt[h+"X"],ie=Lt[h+"Y"];Yt.pointer.set(Zt/Yt.size.width*2-1,-(ie/Yt.size.height)*2+1),Yt.raycaster.setFromCamera(Yt.pointer,Yt.camera)}}),N?.(St)}}),Q.current.render(De.jsx(L,{children:De.jsx(nD,{set:k,children:De.jsx(Dt.Suspense,{fallback:De.jsx(eD,{set:$}),children:t??null})})}))}_t()}}),Dt.useEffect(()=>{const lt=w.current;if(lt)return()=>QS(lt)},[]);const X=c?"none":"auto";return De.jsx("div",{ref:B,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:X,...i},...R,children:De.jsx("div",{ref:z,style:{width:"100%",height:"100%"},children:De.jsx("canvas",{ref:w,style:{display:"block"},children:e})})})}function FD(s){return De.jsx(IS,{children:De.jsx(BD,{...s})})}const mc=new I,_g=new I,HD=new I,Ty=new dt;function VD(s,t,e){const n=mc.setFromMatrixPosition(s.matrixWorld);n.project(t);const i=e.width/2,r=e.height/2;return[n.x*i+i,-(n.y*r)+r]}function GD(s,t){const e=mc.setFromMatrixPosition(s.matrixWorld),n=_g.setFromMatrixPosition(t.matrixWorld),i=e.sub(n),r=t.getWorldDirection(HD);return i.angleTo(r)>Math.PI/2}function kD(s,t,e,n){const i=mc.setFromMatrixPosition(s.matrixWorld),r=i.clone();r.project(t),Ty.set(r.x,r.y),e.setFromCamera(Ty,t);const l=e.intersectObjects(n,!0);if(l.length){const c=l[0].distance;return i.distanceTo(e.ray.origin)<c}return!0}function WD(s,t){if(t instanceof cs)return t.zoom;if(t instanceof en){const e=mc.setFromMatrixPosition(s.matrixWorld),n=_g.setFromMatrixPosition(t.matrixWorld),i=t.fov*Math.PI/180,r=e.distanceTo(n);return 1/(2*Math.tan(i/2)*r)}else return 1}function XD(s,t,e){if(t instanceof en||t instanceof cs){const n=mc.setFromMatrixPosition(s.matrixWorld),i=_g.setFromMatrixPosition(t.matrixWorld),r=n.distanceTo(i),l=(e[1]-e[0])/(t.far-t.near),c=e[1]-l*t.far;return Math.round(l*r+c)}}const Tm=s=>Math.abs(s)<1e-10?0:s;function eM(s,t,e=""){let n="matrix3d(";for(let i=0;i!==16;i++)n+=Tm(t[i]*s.elements[i])+(i!==15?",":")");return e+n}const qD=(s=>t=>eM(t,s))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),YD=(s=>(t,e)=>eM(t,s(e),"translate(-50%,-50%)"))(s=>[1/s,1/s,1/s,1,-1/s,-1/s,-1/s,-1,1/s,1/s,1/s,1,1,1,1,1]);function ZD(s){return s&&typeof s=="object"&&"current"in s}const jD=Dt.forwardRef(({children:s,eps:t=.001,style:e,className:n,prepend:i,center:r,fullscreen:l,portal:c,distanceFactor:h,sprite:f=!1,transform:p=!1,occlude:m,onOcclude:g,castShadow:v,receiveShadow:x,material:b,geometry:S,zIndexRange:_=[16777271,0],calculatePosition:E=VD,as:A="div",wrapperClass:T,pointerEvents:N="auto",...R},L)=>{const{gl:z,camera:C,scene:w,size:B,raycaster:Y,events:W,viewport:$}=ss(),[et]=Dt.useState(()=>document.createElement(A)),k=Dt.useRef(null),Q=Dt.useRef(null),X=Dt.useRef(0),lt=Dt.useRef([0,0]),_t=Dt.useRef(null),St=Dt.useRef(null),Lt=c?.current||W.connected||z.domElement.parentNode,Yt=Dt.useRef(null),Zt=Dt.useRef(!1),ie=Dt.useMemo(()=>m&&m!=="blending"||Array.isArray(m)&&m.length&&ZD(m[0]),[m]);Dt.useLayoutEffect(()=>{const Bt=z.domElement;m&&m==="blending"?(Bt.style.zIndex=`${Math.floor(_[0]/2)}`,Bt.style.position="absolute",Bt.style.pointerEvents="none"):(Bt.style.zIndex=null,Bt.style.position=null,Bt.style.pointerEvents=null)},[m]),Dt.useLayoutEffect(()=>{if(Q.current){const Bt=k.current=nE.createRoot(et);if(w.updateMatrixWorld(),p)et.style.cssText="position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;";else{const kt=E(Q.current,C,B);et.style.cssText=`position:absolute;top:0;left:0;transform:translate3d(${kt[0]}px,${kt[1]}px,0);transform-origin:0 0;`}return Lt&&(i?Lt.prepend(et):Lt.appendChild(et)),()=>{Lt&&Lt.removeChild(et),Bt.unmount()}}},[Lt,p]),Dt.useLayoutEffect(()=>{T&&(et.className=T)},[T]);const ut=Dt.useMemo(()=>p?{position:"absolute",top:0,left:0,width:B.width,height:B.height,transformStyle:"preserve-3d",pointerEvents:"none"}:{position:"absolute",transform:r?"translate3d(-50%,-50%,0)":"none",...l&&{top:-B.height/2,left:-B.width/2,width:B.width,height:B.height},...e},[e,r,l,B,p]),xt=Dt.useMemo(()=>({position:"absolute",pointerEvents:N}),[N]);Dt.useLayoutEffect(()=>{if(Zt.current=!1,p){var Bt;(Bt=k.current)==null||Bt.render(Dt.createElement("div",{ref:_t,style:ut},Dt.createElement("div",{ref:St,style:xt},Dt.createElement("div",{ref:L,className:n,style:e,children:s}))))}else{var kt;(kt=k.current)==null||kt.render(Dt.createElement("div",{ref:L,style:ut,className:n,children:s}))}});const zt=Dt.useRef(!0);XS(Bt=>{if(Q.current){C.updateMatrixWorld(),Q.current.updateWorldMatrix(!0,!1);const kt=p?lt.current:E(Q.current,C,B);if(p||Math.abs(X.current-C.zoom)>t||Math.abs(lt.current[0]-kt[0])>t||Math.abs(lt.current[1]-kt[1])>t){const ge=GD(Q.current,C);let F=!1;ie&&(Array.isArray(m)?F=m.map(ot=>ot.current):m!=="blending"&&(F=[w]));const gt=zt.current;if(F){const ot=kD(Q.current,C,Y,F);zt.current=ot&&!ge}else zt.current=!ge;gt!==zt.current&&(g?g(!zt.current):et.style.display=zt.current?"block":"none");const ht=Math.floor(_[0]/2),ft=m?ie?[_[0],ht]:[ht-1,0]:_;if(et.style.zIndex=`${XD(Q.current,C,ft)}`,p){const[ot,Nt]=[B.width/2,B.height/2],Mt=C.projectionMatrix.elements[5]*Nt,{isOrthographicCamera:Tt,top:re,left:ce,bottom:O,right:D}=C,K=qD(C.matrixWorldInverse),rt=Tt?`scale(${Mt})translate(${Tm(-(D+ce)/2)}px,${Tm((re+O)/2)}px)`:`translateZ(${Mt}px)`;let mt=Q.current.matrixWorld;f&&(mt=C.matrixWorldInverse.clone().transpose().copyPosition(mt).scale(Q.current.scale),mt.elements[3]=mt.elements[7]=mt.elements[11]=0,mt.elements[15]=1),et.style.width=B.width+"px",et.style.height=B.height+"px",et.style.perspective=Tt?"":`${Mt}px`,_t.current&&St.current&&(_t.current.style.transform=`${rt}${K}translate(${ot}px,${Nt}px)`,St.current.style.transform=YD(mt,1/((h||10)/400)))}else{const ot=h===void 0?1:WD(Q.current,C)*h;et.style.transform=`translate3d(${kt[0]}px,${kt[1]}px,0) scale(${ot})`}lt.current=kt,X.current=C.zoom}}if(!ie&&Yt.current&&!Zt.current)if(p){if(_t.current){const kt=_t.current.children[0];if(kt!=null&&kt.clientWidth&&kt!=null&&kt.clientHeight){const{isOrthographicCamera:ge}=C;if(ge||S)R.scale&&(Array.isArray(R.scale)?R.scale instanceof I?Yt.current.scale.copy(R.scale.clone().divideScalar(1)):Yt.current.scale.set(1/R.scale[0],1/R.scale[1],1/R.scale[2]):Yt.current.scale.setScalar(1/R.scale));else{const F=(h||10)/400,gt=kt.clientWidth*F,ht=kt.clientHeight*F;Yt.current.scale.set(gt,ht,1)}Zt.current=!0}}}else{const kt=et.children[0];if(kt!=null&&kt.clientWidth&&kt!=null&&kt.clientHeight){const ge=1/$.factor,F=kt.clientWidth*ge,gt=kt.clientHeight*ge;Yt.current.scale.set(F,gt,1),Zt.current=!0}Yt.current.lookAt(Bt.camera.position)}});const te=Dt.useMemo(()=>({vertexShader:p?void 0:`
          /*
            This shader is from the THREE's SpriteMaterial.
            We need to turn the backing plane into a Sprite
            (make it always face the camera) if "transfrom"
            is false.
          */
          #include <common>

          void main() {
            vec2 center = vec2(0., 1.);
            float rotation = 0.0;

            // This is somewhat arbitrary, but it seems to work well
            // Need to figure out how to derive this dynamically if it even matters
            float size = 0.03;

            vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
            vec2 scale;
            scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
            scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );

            bool isPerspective = isPerspectiveMatrix( projectionMatrix );
            if ( isPerspective ) scale *= - mvPosition.z;

            vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;
            vec2 rotatedPosition;
            rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
            rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
            mvPosition.xy += rotatedPosition;

            gl_Position = projectionMatrix * mvPosition;
          }
      `,fragmentShader:`
        void main() {
          gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
        }
      `}),[p]);return Dt.createElement("group",Qu({},R,{ref:Q}),m&&!ie&&Dt.createElement("mesh",{castShadow:v,receiveShadow:x,ref:Yt},S||Dt.createElement("planeGeometry",null),b||Dt.createElement("shaderMaterial",{side:Zi,vertexShader:te.vertexShader,fragmentShader:te.fragmentShader})))}),KD=s=>s;function JD(s,t=KD){const e=wl.useSyncExternalStore(s.subscribe,wl.useCallback(()=>t(s.getState()),[s,t]),wl.useCallback(()=>t(s.getInitialState()),[s,t]));return wl.useDebugValue(e),e}const Ay=s=>{const t=DS(s),e=n=>JD(t,n);return Object.assign(e,t),e},QD=(s=>s?Ay(s):Ay);let Al=0;const $D=QD(s=>(xo.onStart=(t,e,n)=>{s({active:!0,item:t,loaded:e,total:n,progress:(e-Al)/(n-Al)*100})},xo.onLoad=()=>{s({active:!1})},xo.onError=t=>s(e=>({errors:[...e.errors,t]})),xo.onProgress=(t,e,n)=>{e===n&&(Al=n),s({active:!0,item:t,loaded:e,total:n,progress:(e-Al)/(n-Al)*100||100})},{errors:[],active:!1,progress:0,item:"",loaded:0,total:0}));var tN=Object.defineProperty,eN=(s,t,e)=>t in s?tN(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,nN=(s,t,e)=>(eN(s,t+"",e),e);class iN{constructor(){nN(this,"_listeners")}addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,l=i.length;r<l;r++)i[r].call(this,t);t.target=null}}}var sN=Object.defineProperty,aN=(s,t,e)=>t in s?sN(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,ue=(s,t,e)=>(aN(s,typeof t!="symbol"?t+"":t,e),e);const qu=new gr,wy=new Ps,rN=Math.cos(70*(Math.PI/180)),Cy=(s,t)=>(s%t+t)%t;let oN=class extends iN{constructor(t,e){super(),ue(this,"object"),ue(this,"domElement"),ue(this,"enabled",!0),ue(this,"target",new I),ue(this,"minDistance",0),ue(this,"maxDistance",1/0),ue(this,"minZoom",0),ue(this,"maxZoom",1/0),ue(this,"minPolarAngle",0),ue(this,"maxPolarAngle",Math.PI),ue(this,"minAzimuthAngle",-1/0),ue(this,"maxAzimuthAngle",1/0),ue(this,"enableDamping",!1),ue(this,"dampingFactor",.05),ue(this,"enableZoom",!0),ue(this,"zoomSpeed",1),ue(this,"enableRotate",!0),ue(this,"rotateSpeed",1),ue(this,"enablePan",!0),ue(this,"panSpeed",1),ue(this,"screenSpacePanning",!0),ue(this,"keyPanSpeed",7),ue(this,"zoomToCursor",!1),ue(this,"autoRotate",!1),ue(this,"autoRotateSpeed",2),ue(this,"reverseOrbit",!1),ue(this,"reverseHorizontalOrbit",!1),ue(this,"reverseVerticalOrbit",!1),ue(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),ue(this,"mouseButtons",{LEFT:tr.ROTATE,MIDDLE:tr.DOLLY,RIGHT:tr.PAN}),ue(this,"touches",{ONE:er.ROTATE,TWO:er.DOLLY_PAN}),ue(this,"target0"),ue(this,"position0"),ue(this,"zoom0"),ue(this,"_domElementKeyEvents",null),ue(this,"getPolarAngle"),ue(this,"getAzimuthalAngle"),ue(this,"setPolarAngle"),ue(this,"setAzimuthalAngle"),ue(this,"getDistance"),ue(this,"getZoomScale"),ue(this,"listenToKeyEvents"),ue(this,"stopListenToKeyEvents"),ue(this,"saveState"),ue(this,"reset"),ue(this,"update"),ue(this,"connect"),ue(this,"dispose"),ue(this,"dollyIn"),ue(this,"dollyOut"),ue(this,"getScale"),ue(this,"setScale"),this.object=t,this.domElement=e,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>p.phi,this.getAzimuthalAngle=()=>p.theta,this.setPolarAngle=H=>{let nt=Cy(H,2*Math.PI),At=p.phi;At<0&&(At+=2*Math.PI),nt<0&&(nt+=2*Math.PI);let V=Math.abs(nt-At);2*Math.PI-V<V&&(nt<At?nt+=2*Math.PI:At+=2*Math.PI),m.phi=nt-At,n.update()},this.setAzimuthalAngle=H=>{let nt=Cy(H,2*Math.PI),At=p.theta;At<0&&(At+=2*Math.PI),nt<0&&(nt+=2*Math.PI);let V=Math.abs(nt-At);2*Math.PI-V<V&&(nt<At?nt+=2*Math.PI:At+=2*Math.PI),m.theta=nt-At,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=H=>{H.addEventListener("keydown",ct),this._domElementKeyEvents=H},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",ct),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),h=c.NONE},this.update=(()=>{const H=new I,nt=new I(0,1,0),At=new Vn().setFromUnitVectors(t.up,nt),V=At.clone().invert(),yt=new I,wt=new Vn,Ht=2*Math.PI;return function(){const vt=n.object.position;At.setFromUnitVectors(t.up,nt),V.copy(At).invert(),H.copy(vt).sub(n.target),H.applyQuaternion(At),p.setFromVector3(H),n.autoRotate&&h===c.NONE&&$(Y()),n.enableDamping?(p.theta+=m.theta*n.dampingFactor,p.phi+=m.phi*n.dampingFactor):(p.theta+=m.theta,p.phi+=m.phi);let Vt=n.minAzimuthAngle,ne=n.maxAzimuthAngle;isFinite(Vt)&&isFinite(ne)&&(Vt<-Math.PI?Vt+=Ht:Vt>Math.PI&&(Vt-=Ht),ne<-Math.PI?ne+=Ht:ne>Math.PI&&(ne-=Ht),Vt<=ne?p.theta=Math.max(Vt,Math.min(ne,p.theta)):p.theta=p.theta>(Vt+ne)/2?Math.max(Vt,p.theta):Math.min(ne,p.theta)),p.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,p.phi)),p.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(v,n.dampingFactor):n.target.add(v),n.zoomToCursor&&C||n.object.isOrthographicCamera?p.radius=Yt(p.radius):p.radius=Yt(p.radius*g),H.setFromSpherical(p),H.applyQuaternion(V),vt.copy(n.target).add(H),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(m.theta*=1-n.dampingFactor,m.phi*=1-n.dampingFactor,v.multiplyScalar(1-n.dampingFactor)):(m.set(0,0,0),v.set(0,0,0));let Te=!1;if(n.zoomToCursor&&C){let Se=null;if(n.object instanceof en&&n.object.isPerspectiveCamera){const _n=H.length();Se=Yt(_n*g);const yn=_n-Se;n.object.position.addScaledVector(L,yn),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const _n=new I(z.x,z.y,0);_n.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/g)),n.object.updateProjectionMatrix(),Te=!0;const yn=new I(z.x,z.y,0);yn.unproject(n.object),n.object.position.sub(yn).add(_n),n.object.updateMatrixWorld(),Se=H.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Se!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Se).add(n.object.position):(qu.origin.copy(n.object.position),qu.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(qu.direction))<rN?t.lookAt(n.target):(wy.setFromNormalAndCoplanarPoint(n.object.up,n.target),qu.intersectPlane(wy,n.target))))}else n.object instanceof cs&&n.object.isOrthographicCamera&&(Te=g!==1,Te&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/g)),n.object.updateProjectionMatrix()));return g=1,C=!1,Te||yt.distanceToSquared(n.object.position)>f||8*(1-wt.dot(n.object.quaternion))>f?(n.dispatchEvent(i),yt.copy(n.object.position),wt.copy(n.object.quaternion),Te=!1,!0):!1}})(),this.connect=H=>{n.domElement=H,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",jt),n.domElement.addEventListener("pointerdown",ce),n.domElement.addEventListener("pointercancel",D),n.domElement.addEventListener("wheel",mt)},this.dispose=()=>{var H,nt,At,V,yt,wt;n.domElement&&(n.domElement.style.touchAction="auto"),(H=n.domElement)==null||H.removeEventListener("contextmenu",jt),(nt=n.domElement)==null||nt.removeEventListener("pointerdown",ce),(At=n.domElement)==null||At.removeEventListener("pointercancel",D),(V=n.domElement)==null||V.removeEventListener("wheel",mt),(yt=n.domElement)==null||yt.ownerDocument.removeEventListener("pointermove",O),(wt=n.domElement)==null||wt.ownerDocument.removeEventListener("pointerup",D),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",ct)};const n=this,i={type:"change"},r={type:"start"},l={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let h=c.NONE;const f=1e-6,p=new mm,m=new mm;let g=1;const v=new I,x=new dt,b=new dt,S=new dt,_=new dt,E=new dt,A=new dt,T=new dt,N=new dt,R=new dt,L=new I,z=new dt;let C=!1;const w=[],B={};function Y(){return 2*Math.PI/60/60*n.autoRotateSpeed}function W(){return Math.pow(.95,n.zoomSpeed)}function $(H){n.reverseOrbit||n.reverseHorizontalOrbit?m.theta+=H:m.theta-=H}function et(H){n.reverseOrbit||n.reverseVerticalOrbit?m.phi+=H:m.phi-=H}const k=(()=>{const H=new I;return function(At,V){H.setFromMatrixColumn(V,0),H.multiplyScalar(-At),v.add(H)}})(),Q=(()=>{const H=new I;return function(At,V){n.screenSpacePanning===!0?H.setFromMatrixColumn(V,1):(H.setFromMatrixColumn(V,0),H.crossVectors(n.object.up,H)),H.multiplyScalar(At),v.add(H)}})(),X=(()=>{const H=new I;return function(At,V){const yt=n.domElement;if(yt&&n.object instanceof en&&n.object.isPerspectiveCamera){const wt=n.object.position;H.copy(wt).sub(n.target);let Ht=H.length();Ht*=Math.tan(n.object.fov/2*Math.PI/180),k(2*At*Ht/yt.clientHeight,n.object.matrix),Q(2*V*Ht/yt.clientHeight,n.object.matrix)}else yt&&n.object instanceof cs&&n.object.isOrthographicCamera?(k(At*(n.object.right-n.object.left)/n.object.zoom/yt.clientWidth,n.object.matrix),Q(V*(n.object.top-n.object.bottom)/n.object.zoom/yt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function lt(H){n.object instanceof en&&n.object.isPerspectiveCamera||n.object instanceof cs&&n.object.isOrthographicCamera?g=H:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function _t(H){lt(g/H)}function St(H){lt(g*H)}function Lt(H){if(!n.zoomToCursor||!n.domElement)return;C=!0;const nt=n.domElement.getBoundingClientRect(),At=H.clientX-nt.left,V=H.clientY-nt.top,yt=nt.width,wt=nt.height;z.x=At/yt*2-1,z.y=-(V/wt)*2+1,L.set(z.x,z.y,1).unproject(n.object).sub(n.object.position).normalize()}function Yt(H){return Math.max(n.minDistance,Math.min(n.maxDistance,H))}function Zt(H){x.set(H.clientX,H.clientY)}function ie(H){Lt(H),T.set(H.clientX,H.clientY)}function ut(H){_.set(H.clientX,H.clientY)}function xt(H){b.set(H.clientX,H.clientY),S.subVectors(b,x).multiplyScalar(n.rotateSpeed);const nt=n.domElement;nt&&($(2*Math.PI*S.x/nt.clientHeight),et(2*Math.PI*S.y/nt.clientHeight)),x.copy(b),n.update()}function zt(H){N.set(H.clientX,H.clientY),R.subVectors(N,T),R.y>0?_t(W()):R.y<0&&St(W()),T.copy(N),n.update()}function te(H){E.set(H.clientX,H.clientY),A.subVectors(E,_).multiplyScalar(n.panSpeed),X(A.x,A.y),_.copy(E),n.update()}function Bt(H){Lt(H),H.deltaY<0?St(W()):H.deltaY>0&&_t(W()),n.update()}function kt(H){let nt=!1;switch(H.code){case n.keys.UP:X(0,n.keyPanSpeed),nt=!0;break;case n.keys.BOTTOM:X(0,-n.keyPanSpeed),nt=!0;break;case n.keys.LEFT:X(n.keyPanSpeed,0),nt=!0;break;case n.keys.RIGHT:X(-n.keyPanSpeed,0),nt=!0;break}nt&&(H.preventDefault(),n.update())}function ge(){if(w.length==1)x.set(w[0].pageX,w[0].pageY);else{const H=.5*(w[0].pageX+w[1].pageX),nt=.5*(w[0].pageY+w[1].pageY);x.set(H,nt)}}function F(){if(w.length==1)_.set(w[0].pageX,w[0].pageY);else{const H=.5*(w[0].pageX+w[1].pageX),nt=.5*(w[0].pageY+w[1].pageY);_.set(H,nt)}}function gt(){const H=w[0].pageX-w[1].pageX,nt=w[0].pageY-w[1].pageY,At=Math.sqrt(H*H+nt*nt);T.set(0,At)}function ht(){n.enableZoom&&gt(),n.enablePan&&F()}function ft(){n.enableZoom&&gt(),n.enableRotate&&ge()}function ot(H){if(w.length==1)b.set(H.pageX,H.pageY);else{const At=ee(H),V=.5*(H.pageX+At.x),yt=.5*(H.pageY+At.y);b.set(V,yt)}S.subVectors(b,x).multiplyScalar(n.rotateSpeed);const nt=n.domElement;nt&&($(2*Math.PI*S.x/nt.clientHeight),et(2*Math.PI*S.y/nt.clientHeight)),x.copy(b)}function Nt(H){if(w.length==1)E.set(H.pageX,H.pageY);else{const nt=ee(H),At=.5*(H.pageX+nt.x),V=.5*(H.pageY+nt.y);E.set(At,V)}A.subVectors(E,_).multiplyScalar(n.panSpeed),X(A.x,A.y),_.copy(E)}function Mt(H){const nt=ee(H),At=H.pageX-nt.x,V=H.pageY-nt.y,yt=Math.sqrt(At*At+V*V);N.set(0,yt),R.set(0,Math.pow(N.y/T.y,n.zoomSpeed)),_t(R.y),T.copy(N)}function Tt(H){n.enableZoom&&Mt(H),n.enablePan&&Nt(H)}function re(H){n.enableZoom&&Mt(H),n.enableRotate&&ot(H)}function ce(H){var nt,At;n.enabled!==!1&&(w.length===0&&((nt=n.domElement)==null||nt.ownerDocument.addEventListener("pointermove",O),(At=n.domElement)==null||At.ownerDocument.addEventListener("pointerup",D)),Kt(H),H.pointerType==="touch"?Qt(H):K(H))}function O(H){n.enabled!==!1&&(H.pointerType==="touch"?Ut(H):rt(H))}function D(H){var nt,At,V;bt(H),w.length===0&&((nt=n.domElement)==null||nt.releasePointerCapture(H.pointerId),(At=n.domElement)==null||At.ownerDocument.removeEventListener("pointermove",O),(V=n.domElement)==null||V.ownerDocument.removeEventListener("pointerup",D)),n.dispatchEvent(l),h=c.NONE}function K(H){let nt;switch(H.button){case 0:nt=n.mouseButtons.LEFT;break;case 1:nt=n.mouseButtons.MIDDLE;break;case 2:nt=n.mouseButtons.RIGHT;break;default:nt=-1}switch(nt){case tr.DOLLY:if(n.enableZoom===!1)return;ie(H),h=c.DOLLY;break;case tr.ROTATE:if(H.ctrlKey||H.metaKey||H.shiftKey){if(n.enablePan===!1)return;ut(H),h=c.PAN}else{if(n.enableRotate===!1)return;Zt(H),h=c.ROTATE}break;case tr.PAN:if(H.ctrlKey||H.metaKey||H.shiftKey){if(n.enableRotate===!1)return;Zt(H),h=c.ROTATE}else{if(n.enablePan===!1)return;ut(H),h=c.PAN}break;default:h=c.NONE}h!==c.NONE&&n.dispatchEvent(r)}function rt(H){if(n.enabled!==!1)switch(h){case c.ROTATE:if(n.enableRotate===!1)return;xt(H);break;case c.DOLLY:if(n.enableZoom===!1)return;zt(H);break;case c.PAN:if(n.enablePan===!1)return;te(H);break}}function mt(H){n.enabled===!1||n.enableZoom===!1||h!==c.NONE&&h!==c.ROTATE||(H.preventDefault(),n.dispatchEvent(r),Bt(H),n.dispatchEvent(l))}function ct(H){n.enabled===!1||n.enablePan===!1||kt(H)}function Qt(H){switch(It(H),w.length){case 1:switch(n.touches.ONE){case er.ROTATE:if(n.enableRotate===!1)return;ge(),h=c.TOUCH_ROTATE;break;case er.PAN:if(n.enablePan===!1)return;F(),h=c.TOUCH_PAN;break;default:h=c.NONE}break;case 2:switch(n.touches.TWO){case er.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;ht(),h=c.TOUCH_DOLLY_PAN;break;case er.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ft(),h=c.TOUCH_DOLLY_ROTATE;break;default:h=c.NONE}break;default:h=c.NONE}h!==c.NONE&&n.dispatchEvent(r)}function Ut(H){switch(It(H),h){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;ot(H),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;Nt(H),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Tt(H),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;re(H),n.update();break;default:h=c.NONE}}function jt(H){n.enabled!==!1&&H.preventDefault()}function Kt(H){w.push(H)}function bt(H){delete B[H.pointerId];for(let nt=0;nt<w.length;nt++)if(w[nt].pointerId==H.pointerId){w.splice(nt,1);return}}function It(H){let nt=B[H.pointerId];nt===void 0&&(nt=new dt,B[H.pointerId]=nt),nt.set(H.pageX,H.pageY)}function ee(H){const nt=H.pointerId===w[0].pointerId?w[1]:w[0];return B[nt.pointerId]}this.dollyIn=(H=W())=>{St(H),n.update()},this.dollyOut=(H=W())=>{_t(H),n.update()},this.getScale=()=>g,this.setScale=H=>{lt(H),n.update()},this.getZoomScale=()=>W(),e!==void 0&&this.connect(e),this.update()}};const lN=Dt.forwardRef(({makeDefault:s,camera:t,regress:e,domElement:n,enableDamping:i=!0,keyEvents:r=!1,onChange:l,onStart:c,onEnd:h,...f},p)=>{const m=ss(R=>R.invalidate),g=ss(R=>R.camera),v=ss(R=>R.gl),x=ss(R=>R.events),b=ss(R=>R.setEvents),S=ss(R=>R.set),_=ss(R=>R.get),E=ss(R=>R.performance),A=t||g,T=n||x.connected||v.domElement,N=Dt.useMemo(()=>new oN(A),[A]);return XS(()=>{N.enabled&&N.update()},-1),Dt.useEffect(()=>(r&&N.connect(r===!0?T:r),N.connect(T),()=>void N.dispose()),[r,T,e,N,m]),Dt.useEffect(()=>{const R=C=>{m(),e&&E.regress(),l&&l(C)},L=C=>{c&&c(C)},z=C=>{h&&h(C)};return N.addEventListener("change",R),N.addEventListener("start",L),N.addEventListener("end",z),()=>{N.removeEventListener("start",L),N.removeEventListener("end",z),N.removeEventListener("change",R)}},[l,c,h,N,m,b]),Dt.useEffect(()=>{if(s){const R=_().controls;return S({controls:N}),()=>S({controls:R})}},[s,N]),Dt.createElement("primitive",Qu({ref:p,object:N,enableDamping:i},f))}),cN=()=>{const{progress:s}=$D(),[t,e]=Dt.useState(0);return Dt.useEffect(()=>{e(s)},[s]),De.jsx(jD,{as:"div",center:!0,style:{display:"flex",alignItems:"center",justifyContent:"center",height:"100%",flexDirection:"column"},children:De.jsx("span",{className:"canvas-loader",children:De.jsx("p",{style:{fontSize:14,color:"#f1f1f1",fontWeight:800,marginTop:40},children:t>0?`${t.toFixed(2)}%`:"Loading..."})})})},uN=Dt.lazy(()=>iE(()=>import("./index-C8nWc4Us.js"),__vite__mapDeps([0,1,2])));em.registerPlugin(sE);const hN=s=>{const t=Dt.useCallback(()=>window.matchMedia("(max-width: 640px)").matches?s?.8:.7:window.matchMedia("(max-width: 1024px)").matches?s?.85:.75:s?1.35:1,[s]),[e,n]=Dt.useState(t);return Dt.useEffect(()=>{const i=()=>n(t());return window.addEventListener("resize",i),()=>window.removeEventListener("resize",i)},[t]),e},fN=({isInView:s,sectionRef:t})=>{const{camera:e}=ss(),n=Dt.useRef(),i=hN(s),r=Dt.useMemo(()=>({scale:i,rotation:[Math.PI/90,-Math.PI/3,Math.PI/18],position:[0,0,0]}),[i]);return Dt.useEffect(()=>{if(!s||!t.current||!n.current)return;const l=em.timeline({scrollTrigger:{trigger:t.current,start:"top 70%",once:!0}});l.to(e.position,{z:3,y:.5,duration:2,ease:"power3.inOut"}),l.to(n.current.rotation,{y:`+=${Math.PI/1.5}`,duration:2.5,ease:"power3.inOut"},"<")},[e,s,t]),Dt.useEffect(()=>{if(!n.current)return;let l;return s&&(l=em.to(n.current.rotation,{y:`+=${Math.PI*2}`,duration:30,ease:"none",repeat:-1})),()=>{l&&l.kill()}},[s]),De.jsxs(De.Fragment,{children:[De.jsx("ambientLight",{intensity:1.2}),De.jsx("directionalLight",{position:[5,5,5],intensity:1.8}),De.jsx(Dt.Suspense,{fallback:De.jsx(cN,{}),children:De.jsx(uN,{ref:n,...r})}),De.jsx(lN,{enableZoom:!1})]})},dN=({isInView:s})=>{const t=Dt.useRef();return De.jsx("section",{ref:t,id:"blackhole-section",className:"relative h-[60vh] w-full overflow-hidden md:h-screen",children:De.jsx(FD,{camera:{position:[0,1,5],fov:50},shadows:!1,frameloop:s?"always":"never",dpr:[1,1.5],gl:{antialias:!1,preserveDrawingBuffer:!1,powerPreference:"low-power"},onCreated:({gl:e})=>{e.getContext().canvas.addEventListener("webglcontextlost",n=>{n.preventDefault(),console.warn("⚠️ WebGL context lost")})},children:De.jsx(fN,{isInView:s,sectionRef:t})})})},pN=()=>{const[s,t]=aE();return De.jsxs("section",{className:"min-h-[60vh] bg-black md:min-h-screen",children:[t&&De.jsx(lE,{}),De.jsx(rE,{title:"Our Vision",subTitle:"Di<b>v</b>e in<b>t</b>o o<b>u</b>r f<b>u</b>t<b>u</b>re <br /> vi<b>e</b>ws a<b>n</b>d <b>m</b>issi<b>o</b>ns",containerClass:"text-center",isInView:t})," ",De.jsx("figure",{ref:s,className:"h-[60vh] overflow-hidden pb-10 md:h-screen",children:De.jsx(Dt.Suspense,{fallback:De.jsx(oE,{containerClass:"bg-black"}),children:De.jsx(dN,{isInView:t})})})]})},xN=Object.freeze(Object.defineProperty({__proto__:null,default:pN},Symbol.toStringTag,{value:"Module"}));export{Xl as $,dn as A,Xe as B,Xt as C,uS as D,fs as E,Vs as F,ga as G,Px as H,Nx as I,Lx as J,yo as K,oi as L,jx as M,vo as N,Le as O,cS as P,Vn as Q,Xh as R,lS as S,mE as T,en as U,dt as V,l1 as W,cs as X,lf as Y,nc as Z,Wm as _,vE as a,Oh as a0,dr as a1,ln as a2,ec as a3,tc as a4,dc as a5,Bs as a6,fc as a7,Gn as a8,Rn as a9,YS as aa,fA as ab,XS as ac,xN as ad,gE as b,dm as c,de as d,I as e,No as f,VT as g,YT as h,of as i,as as j,Ul as k,Cm as l,mn as m,Cn as n,kl as o,Wl as p,Li as q,Xm as r,kn as s,$n as t,tg as u,Zi as v,_a as w,Ue as x,xe as y,Dx as z};
